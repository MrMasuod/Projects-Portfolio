

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Nov 17 13:58:15 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    93                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    95   000000                     
    96                           ; Generated 17/10/2023 GMT
    97                           ; 
    98                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F4620 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130   000000                     
   131                           	psect	idataBANK3
   132   0079BC                     __pidataBANK3:
   133                           	callstack 0
   134                           
   135                           ;initializer for _Heart
   136   0079BC  00                 	db	0
   137   0079BD  0A                 	db	10
   138   0079BE  1F                 	db	31
   139   0079BF  1F                 	db	31
   140   0079C0  1F                 	db	31
   141   0079C1  0E                 	db	14
   142   0079C2  04                 	db	4
   143   0079C3  00                 	db	0
   144   000000                     _TMR1L	set	4046
   145   000000                     _TMR1H	set	4047
   146   000000                     _T1CONbits	set	4045
   147   000000                     _GIE	set	32663
   148   000000                     _TRISC7	set	31911
   149   000000                     _PORTBbits	set	3969
   150   000000                     _PORTEbits	set	3972
   151   000000                     _OSCCON	set	4051
   152   000000                     _TRISC6	set	31910
   153   000000                     _PEIE	set	32662
   154   000000                     _RCSTA1bits	set	4011
   155   000000                     _TXSTA1bits	set	4012
   156   000000                     _SPBRG1	set	4015
   157   000000                     _TMR1IE	set	31976
   158   000000                     _TMR1IF	set	31984
   159   000000                     _T1CON	set	4045
   160   000000                     _TXREG1	set	4013
   161   000000                     _LATB	set	3978
   162   000000                     _TRISB	set	3987
   163                           
   164                           	psect	mediumconst
   165   00FD4E                     __pmediumconst:
   166                           	callstack 0
   167   00FD4E  00                 	db	0
   168   00FD4F                     STR_5:
   169   00FD4F  53                 	db	83	;'S'
   170   00FD50  65                 	db	101	;'e'
   171   00FD51  74                 	db	116	;'t'
   172   00FD52  74                 	db	116	;'t'
   173   00FD53  69                 	db	105	;'i'
   174   00FD54  6E                 	db	110	;'n'
   175   00FD55  67                 	db	103	;'g'
   176   00FD56  20                 	db	32
   177   00FD57  70                 	db	112	;'p'
   178   00FD58  69                 	db	105	;'i'
   179   00FD59  6E                 	db	110	;'n'
   180   00FD5A  4D                 	db	77	;'M'
   181   00FD5B  6F                 	db	111	;'o'
   182   00FD5C  64                 	db	100	;'d'
   183   00FD5D  65                 	db	101	;'e'
   184   00FD5E  20                 	db	32
   185   00FD5F  66                 	db	102	;'f'
   186   00FD60  6F                 	db	111	;'o'
   187   00FD61  72                 	db	114	;'r'
   188   00FD62  20                 	db	32
   189   00FD63  42                 	db	66	;'B'
   190   00FD64  75                 	db	117	;'u'
   191   00FD65  7A                 	db	122	;'z'
   192   00FD66  7A                 	db	122	;'z'
   193   00FD67  65                 	db	101	;'e'
   194   00FD68  72                 	db	114	;'r'
   195   00FD69  2C                 	db	44
   196   00FD6A  20                 	db	32
   197   00FD6B  49                 	db	73	;'I'
   198   00FD6C  52                 	db	82	;'R'
   199   00FD6D  4C                 	db	76	;'L'
   200   00FD6E  45                 	db	69	;'E'
   201   00FD6F  44                 	db	68	;'D'
   202   00FD70  2C                 	db	44
   203   00FD71  20                 	db	32
   204   00FD72  52                 	db	82	;'R'
   205   00FD73  45                 	db	69	;'E'
   206   00FD74  44                 	db	68	;'D'
   207   00FD75  4C                 	db	76	;'L'
   208   00FD76  45                 	db	69	;'E'
   209   00FD77  44                 	db	68	;'D'
   210   00FD78  2C                 	db	44
   211   00FD79  20                 	db	32
   212   00FD7A  43                 	db	67	;'C'
   213   00FD7B  68                 	db	104	;'h'
   214   00FD7C  61                 	db	97	;'a'
   215   00FD7D  72                 	db	114	;'r'
   216   00FD7E  67                 	db	103	;'g'
   217   00FD7F  65                 	db	101	;'e'
   218   00FD80  2C                 	db	44
   219   00FD81  20                 	db	32
   220   00FD82  53                 	db	83	;'S'
   221   00FD83  57                 	db	87	;'W'
   222   00FD84  31                 	db	49	;'1'
   223   00FD85  2C                 	db	44
   224   00FD86  20                 	db	32
   225   00FD87  53                 	db	83	;'S'
   226   00FD88  57                 	db	87	;'W'
   227   00FD89  32                 	db	50	;'2'
   228   00FD8A  2C                 	db	44
   229   00FD8B  20                 	db	32
   230   00FD8C  61                 	db	97	;'a'
   231   00FD8D  6E                 	db	110	;'n'
   232   00FD8E  64                 	db	100	;'d'
   233   00FD8F  20                 	db	32
   234   00FD90  44                 	db	68	;'D'
   235   00FD91  65                 	db	101	;'e'
   236   00FD92  74                 	db	116	;'t'
   237   00FD93  65                 	db	101	;'e'
   238   00FD94  63                 	db	99	;'c'
   239   00FD95  74                 	db	116	;'t'
   240   00FD96  2E                 	db	46
   241   00FD97  2E                 	db	46
   242   00FD98  2E                 	db	46
   243   00FD99  0A                 	db	10
   244   00FD9A  00                 	db	0
   245   00FD9B  54                 	db	84	;'T'
   246   00FD9C  69                 	db	105	;'i'
   247   00FD9D  6D                 	db	109	;'m'
   248   00FD9E  65                 	db	101	;'e'
   249   00FD9F  2C                 	db	44
   250   00FDA0  49                 	db	73	;'I'
   251   00FDA1  52                 	db	82	;'R'
   252   00FDA2  2C                 	db	44
   253   00FDA3  52                 	db	82	;'R'
   254   00FDA4  45                 	db	69	;'E'
   255   00FDA5  44                 	db	68	;'D'
   256   00FDA6  2C                 	db	44
   257   00FDA7  53                 	db	83	;'S'
   258   00FDA8  70                 	db	112	;'p'
   259   00FDA9  4F                 	db	79	;'O'
   260   00FDAA  32                 	db	50	;'2'
   261   00FDAB  2C                 	db	44
   262   00FDAC  53                 	db	83	;'S'
   263   00FDAD  70                 	db	112	;'p'
   264   00FDAE  4F                 	db	79	;'O'
   265   00FDAF  32                 	db	50	;'2'
   266   00FDB0  5F                 	db	95	;'_'
   267   00FDB1  68                 	db	104	;'h'
   268   00FDB2  79                 	db	121	;'y'
   269   00FDB3  73                 	db	115	;'s'
   270   00FDB4  74                 	db	116	;'t'
   271   00FDB5  65                 	db	101	;'e'
   272   00FDB6  72                 	db	114	;'r'
   273   00FDB7  65                 	db	101	;'e'
   274   00FDB8  73                 	db	115	;'s'
   275   00FDB9  69                 	db	105	;'i'
   276   00FDBA  73                 	db	115	;'s'
   277   00FDBB  2C                 	db	44
   278   00FDBC  48                 	db	72	;'H'
   279   00FDBD  52                 	db	82	;'R'
   280   00FDBE  2C                 	db	44
   281   00FDBF  48                 	db	72	;'H'
   282   00FDC0  52                 	db	82	;'R'
   283   00FDC1  5F                 	db	95	;'_'
   284   00FDC2  68                 	db	104	;'h'
   285   00FDC3  79                 	db	121	;'y'
   286   00FDC4  73                 	db	115	;'s'
   287   00FDC5  74                 	db	116	;'t'
   288   00FDC6  65                 	db	101	;'e'
   289   00FDC7  72                 	db	114	;'r'
   290   00FDC8  65                 	db	101	;'e'
   291   00FDC9  73                 	db	115	;'s'
   292   00FDCA  69                 	db	105	;'i'
   293   00FDCB  73                 	db	115	;'s'
   294   00FDCC  2C                 	db	44
   295   00FDCD  50                 	db	80	;'P'
   296   00FDCE  65                 	db	101	;'e'
   297   00FDCF  72                 	db	114	;'r'
   298   00FDD0  69                 	db	105	;'i'
   299   00FDD1  6F                 	db	111	;'o'
   300   00FDD2  64                 	db	100	;'d'
   301   00FDD3  0A                 	db	10
   302   00FDD4  00                 	db	0
   303   00FDD5                     STR_3:
   304   00FDD5  49                 	db	73	;'I'
   305   00FDD6  6E                 	db	110	;'n'
   306   00FDD7  69                 	db	105	;'i'
   307   00FDD8  74                 	db	116	;'t'
   308   00FDD9  69                 	db	105	;'i'
   309   00FDDA  61                 	db	97	;'a'
   310   00FDDB  6C                 	db	108	;'l'
   311   00FDDC  69                 	db	105	;'i'
   312   00FDDD  7A                 	db	122	;'z'
   313   00FDDE  69                 	db	105	;'i'
   314   00FDDF  6E                 	db	110	;'n'
   315   00FDE0  67                 	db	103	;'g'
   316   00FDE1  20                 	db	32
   317   00FDE2  53                 	db	83	;'S'
   318   00FDE3  65                 	db	101	;'e'
   319   00FDE4  72                 	db	114	;'r'
   320   00FDE5  69                 	db	105	;'i'
   321   00FDE6  61                 	db	97	;'a'
   322   00FDE7  6C                 	db	108	;'l'
   323   00FDE8  20                 	db	32
   324   00FDE9  43                 	db	67	;'C'
   325   00FDEA  6F                 	db	111	;'o'
   326   00FDEB  6D                 	db	109	;'m'
   327   00FDEC  6D                 	db	109	;'m'
   328   00FDED  75                 	db	117	;'u'
   329   00FDEE  6E                 	db	110	;'n'
   330   00FDEF  69                 	db	105	;'i'
   331   00FDF0  63                 	db	99	;'c'
   332   00FDF1  61                 	db	97	;'a'
   333   00FDF2  74                 	db	116	;'t'
   334   00FDF3  69                 	db	105	;'i'
   335   00FDF4  6F                 	db	111	;'o'
   336   00FDF5  6E                 	db	110	;'n'
   337   00FDF6  2E                 	db	46
   338   00FDF7  2E                 	db	46
   339   00FDF8  2E                 	db	46
   340   00FDF9  0A                 	db	10
   341   00FDFA  00                 	db	0
   342   00FDFB                     STR_11:
   343   00FDFB  53                 	db	83	;'S'
   344   00FDFC  65                 	db	101	;'e'
   345   00FDFD  74                 	db	116	;'t'
   346   00FDFE  74                 	db	116	;'t'
   347   00FDFF  69                 	db	105	;'i'
   348   00FE00  6E                 	db	110	;'n'
   349   00FE01  67                 	db	103	;'g'
   350   00FE02  20                 	db	32
   351   00FE03  4C                 	db	76	;'L'
   352   00FE04  45                 	db	69	;'E'
   353   00FE05  44                 	db	68	;'D'
   354   00FE06  20                 	db	32
   355   00FE07  73                 	db	115	;'s'
   356   00FE08  74                 	db	116	;'t'
   357   00FE09  61                 	db	97	;'a'
   358   00FE0A  74                 	db	116	;'t'
   359   00FE0B  65                 	db	101	;'e'
   360   00FE0C  20                 	db	32
   361   00FE0D  74                 	db	116	;'t'
   362   00FE0E  6F                 	db	111	;'o'
   363   00FE0F  20                 	db	32
   364   00FE10  32                 	db	50	;'2'
   365   00FE11  2E                 	db	46
   366   00FE12  2E                 	db	46
   367   00FE13  2E                 	db	46
   368   00FE14  0A                 	db	10
   369   00FE15  00                 	db	0
   370   00FE16                     STR_36:
   371   00FE16  25                 	db	37
   372   00FE17  66                 	db	102	;'f'
   373   00FE18  2C                 	db	44
   374   00FE19  25                 	db	37
   375   00FE1A  66                 	db	102	;'f'
   376   00FE1B  2C                 	db	44
   377   00FE1C  25                 	db	37
   378   00FE1D  64                 	db	100	;'d'
   379   00FE1E  2C                 	db	44
   380   00FE1F  25                 	db	37
   381   00FE20  64                 	db	100	;'d'
   382   00FE21  2C                 	db	44
   383   00FE22  25                 	db	37
   384   00FE23  64                 	db	100	;'d'
   385   00FE24  2C                 	db	44
   386   00FE25  54                 	db	84	;'T'
   387   00FE26  69                 	db	105	;'i'
   388   00FE27  6D                 	db	109	;'m'
   389   00FE28  65                 	db	101	;'e'
   390   00FE29  3A                 	db	58	;':'
   391   00FE2A  25                 	db	37
   392   00FE2B  6C                 	db	108	;'l'
   393   00FE2C  75                 	db	117	;'u'
   394   00FE2D  6D                 	db	109	;'m'
   395   00FE2E  73                 	db	115	;'s'
   396   00FE2F  0A                 	db	10
   397   00FE30  00                 	db	0
   398   00FE31  25                 	db	37
   399   00FE32  6C                 	db	108	;'l'
   400   00FE33  75                 	db	117	;'u'
   401   00FE34  2C                 	db	44
   402   00FE35  25                 	db	37
   403   00FE36  66                 	db	102	;'f'
   404   00FE37  2C                 	db	44
   405   00FE38  25                 	db	37
   406   00FE39  66                 	db	102	;'f'
   407   00FE3A  2C                 	db	44
   408   00FE3B  25                 	db	37
   409   00FE3C  66                 	db	102	;'f'
   410   00FE3D  2C                 	db	44
   411   00FE3E  25                 	db	37
   412   00FE3F  64                 	db	100	;'d'
   413   00FE40  2C                 	db	44
   414   00FE41  25                 	db	37
   415   00FE42  66                 	db	102	;'f'
   416   00FE43  2C                 	db	44
   417   00FE44  25                 	db	37
   418   00FE45  64                 	db	100	;'d'
   419   00FE46  2C                 	db	44
   420   00FE47  25                 	db	37
   421   00FE48  64                 	db	100	;'d'
   422   00FE49  0A                 	db	10
   423   00FE4A  00                 	db	0
   424   00FE4B                     STR_8:
   425   00FE4B  49                 	db	73	;'I'
   426   00FE4C  6E                 	db	110	;'n'
   427   00FE4D  69                 	db	105	;'i'
   428   00FE4E  74                 	db	116	;'t'
   429   00FE4F  69                 	db	105	;'i'
   430   00FE50  61                 	db	97	;'a'
   431   00FE51  6C                 	db	108	;'l'
   432   00FE52  69                 	db	105	;'i'
   433   00FE53  7A                 	db	122	;'z'
   434   00FE54  69                 	db	105	;'i'
   435   00FE55  6E                 	db	110	;'n'
   436   00FE56  67                 	db	103	;'g'
   437   00FE57  20                 	db	32
   438   00FE58  43                 	db	67	;'C'
   439   00FE59  68                 	db	104	;'h'
   440   00FE5A  61                 	db	97	;'a'
   441   00FE5B  72                 	db	114	;'r'
   442   00FE5C  67                 	db	103	;'g'
   443   00FE5D  65                 	db	101	;'e'
   444   00FE5E  2E                 	db	46
   445   00FE5F  2E                 	db	46
   446   00FE60  2E                 	db	46
   447   00FE61  0A                 	db	10
   448   00FE62  00                 	db	0
   449   00FE63                     STR_6:
   450   00FE63  49                 	db	73	;'I'
   451   00FE64  6E                 	db	110	;'n'
   452   00FE65  69                 	db	105	;'i'
   453   00FE66  74                 	db	116	;'t'
   454   00FE67  69                 	db	105	;'i'
   455   00FE68  61                 	db	97	;'a'
   456   00FE69  6C                 	db	108	;'l'
   457   00FE6A  69                 	db	105	;'i'
   458   00FE6B  7A                 	db	122	;'z'
   459   00FE6C  69                 	db	105	;'i'
   460   00FE6D  6E                 	db	110	;'n'
   461   00FE6E  67                 	db	103	;'g'
   462   00FE6F  20                 	db	32
   463   00FE70  42                 	db	66	;'B'
   464   00FE71  75                 	db	117	;'u'
   465   00FE72  7A                 	db	122	;'z'
   466   00FE73  7A                 	db	122	;'z'
   467   00FE74  65                 	db	101	;'e'
   468   00FE75  72                 	db	114	;'r'
   469   00FE76  2E                 	db	46
   470   00FE77  2E                 	db	46
   471   00FE78  2E                 	db	46
   472   00FE79  0A                 	db	10
   473   00FE7A  00                 	db	0
   474   00FE7B                     STR_7:
   475   00FE7B  49                 	db	73	;'I'
   476   00FE7C  6E                 	db	110	;'n'
   477   00FE7D  69                 	db	105	;'i'
   478   00FE7E  74                 	db	116	;'t'
   479   00FE7F  69                 	db	105	;'i'
   480   00FE80  61                 	db	97	;'a'
   481   00FE81  6C                 	db	108	;'l'
   482   00FE82  69                 	db	105	;'i'
   483   00FE83  7A                 	db	122	;'z'
   484   00FE84  69                 	db	105	;'i'
   485   00FE85  6E                 	db	110	;'n'
   486   00FE86  67                 	db	103	;'g'
   487   00FE87  20                 	db	32
   488   00FE88  44                 	db	68	;'D'
   489   00FE89  65                 	db	101	;'e'
   490   00FE8A  74                 	db	116	;'t'
   491   00FE8B  65                 	db	101	;'e'
   492   00FE8C  63                 	db	99	;'c'
   493   00FE8D  74                 	db	116	;'t'
   494   00FE8E  2E                 	db	46
   495   00FE8F  2E                 	db	46
   496   00FE90  2E                 	db	46
   497   00FE91  0A                 	db	10
   498   00FE92  00                 	db	0
   499   00FE93                     STR_30:
   500   00FE93  49                 	db	73	;'I'
   501   00FE94  52                 	db	82	;'R'
   502   00FE95  2C                 	db	44
   503   00FE96  52                 	db	82	;'R'
   504   00FE97  45                 	db	69	;'E'
   505   00FE98  44                 	db	68	;'D'
   506   00FE99  2C                 	db	44
   507   00FE9A  53                 	db	83	;'S'
   508   00FE9B  70                 	db	112	;'p'
   509   00FE9C  4F                 	db	79	;'O'
   510   00FE9D  32                 	db	50	;'2'
   511   00FE9E  2C                 	db	44
   512   00FE9F  48                 	db	72	;'H'
   513   00FEA0  52                 	db	82	;'R'
   514   00FEA1  2C                 	db	44
   515   00FEA2  2C                 	db	44
   516   00FEA3  50                 	db	80	;'P'
   517   00FEA4  65                 	db	101	;'e'
   518   00FEA5  72                 	db	114	;'r'
   519   00FEA6  69                 	db	105	;'i'
   520   00FEA7  6F                 	db	111	;'o'
   521   00FEA8  64                 	db	100	;'d'
   522   00FEA9  0A                 	db	10
   523   00FEAA  00                 	db	0
   524   00FEAB                     STR_9:
   525   00FEAB  49                 	db	73	;'I'
   526   00FEAC  6E                 	db	110	;'n'
   527   00FEAD  69                 	db	105	;'i'
   528   00FEAE  74                 	db	116	;'t'
   529   00FEAF  69                 	db	105	;'i'
   530   00FEB0  61                 	db	97	;'a'
   531   00FEB1  6C                 	db	108	;'l'
   532   00FEB2  69                 	db	105	;'i'
   533   00FEB3  7A                 	db	122	;'z'
   534   00FEB4  69                 	db	105	;'i'
   535   00FEB5  6E                 	db	110	;'n'
   536   00FEB6  67                 	db	103	;'g'
   537   00FEB7  20                 	db	32
   538   00FEB8  53                 	db	83	;'S'
   539   00FEB9  57                 	db	87	;'W'
   540   00FEBA  31                 	db	49	;'1'
   541   00FEBB  2E                 	db	46
   542   00FEBC  2E                 	db	46
   543   00FEBD  2E                 	db	46
   544   00FEBE  0A                 	db	10
   545   00FEBF  00                 	db	0
   546   00FEC0                     STR_2:
   547   00FEC0  20                 	db	32
   548   00FEC1  41                 	db	65	;'A'
   549   00FEC2  64                 	db	100	;'d'
   550   00FEC3  6A                 	db	106	;'j'
   551   00FEC4  75                 	db	117	;'u'
   552   00FEC5  73                 	db	115	;'s'
   553   00FEC6  74                 	db	116	;'t'
   554   00FEC7  20                 	db	32
   555   00FEC8  52                 	db	82	;'R'
   556   00FEC9  65                 	db	101	;'e'
   557   00FECA  73                 	db	115	;'s'
   558   00FECB  69                 	db	105	;'i'
   559   00FECC  73                 	db	115	;'s'
   560   00FECD  74                 	db	116	;'t'
   561   00FECE  6F                 	db	111	;'o'
   562   00FECF  72                 	db	114	;'r'
   563   00FED0  0D                 	db	13
   564   00FED1  0A                 	db	10
   565   00FED2  00                 	db	0
   566   00FED3                     STR_1:
   567   00FED3  20                 	db	32
   568   00FED4  4F                 	db	79	;'O'
   569   00FED5  70                 	db	112	;'p'
   570   00FED6  74                 	db	116	;'t'
   571   00FED7  20                 	db	32
   572   00FED8  44                 	db	68	;'D'
   573   00FED9  65                 	db	101	;'e'
   574   00FEDA  76                 	db	118	;'v'
   575   00FEDB  69                 	db	105	;'i'
   576   00FEDC  63                 	db	99	;'c'
   577   00FEDD  65                 	db	101	;'e'
   578   00FEDE  20                 	db	32
   579   00FEDF  54                 	db	84	;'T'
   580   00FEE0  65                 	db	101	;'e'
   581   00FEE1  73                 	db	115	;'s'
   582   00FEE2  74                 	db	116	;'t'
   583   00FEE3  0D                 	db	13
   584   00FEE4  0A                 	db	10
   585   00FEE5  00                 	db	0
   586   00FEE6                     STR_14:
   587   00FEE6  46                 	db	70	;'F'
   588   00FEE7  6C                 	db	108	;'l'
   589   00FEE8  61                 	db	97	;'a'
   590   00FEE9  73                 	db	115	;'s'
   591   00FEEA  68                 	db	104	;'h'
   592   00FEEB  69                 	db	105	;'i'
   593   00FEEC  6E                 	db	110	;'n'
   594   00FEED  67                 	db	103	;'g'
   595   00FEEE  20                 	db	32
   596   00FEEF  52                 	db	82	;'R'
   597   00FEF0  65                 	db	101	;'e'
   598   00FEF1  64                 	db	100	;'d'
   599   00FEF2  20                 	db	32
   600   00FEF3  4C                 	db	76	;'L'
   601   00FEF4  45                 	db	69	;'E'
   602   00FEF5  44                 	db	68	;'D'
   603   00FEF6  0A                 	db	10
   604   00FEF7  00                 	db	0
   605   00FEF8                     STR_22:
   606   00FEF8  41                 	db	65	;'A'
   607   00FEF9  64                 	db	100	;'d'
   608   00FEFA  6A                 	db	106	;'j'
   609   00FEFB  75                 	db	117	;'u'
   610   00FEFC  73                 	db	115	;'s'
   611   00FEFD  74                 	db	116	;'t'
   612   00FEFE  20                 	db	32
   613   00FEFF  52                 	db	82	;'R'
   614   00FF00  65                 	db	101	;'e'
   615   00FF01  73                 	db	115	;'s'
   616   00FF02  69                 	db	105	;'i'
   617   00FF03  73                 	db	115	;'s'
   618   00FF04  74                 	db	116	;'t'
   619   00FF05  6F                 	db	111	;'o'
   620   00FF06  72                 	db	114	;'r'
   621   00FF07  0A                 	db	10
   622   00FF08  00                 	db	0
   623   00FF09                     STR_12:
   624   00FF09  4F                 	db	79	;'O'
   625   00FF0A  70                 	db	112	;'p'
   626   00FF0B  74                 	db	116	;'t'
   627   00FF0C  20                 	db	32
   628   00FF0D  44                 	db	68	;'D'
   629   00FF0E  65                 	db	101	;'e'
   630   00FF0F  76                 	db	118	;'v'
   631   00FF10  69                 	db	105	;'i'
   632   00FF11  63                 	db	99	;'c'
   633   00FF12  65                 	db	101	;'e'
   634   00FF13  20                 	db	32
   635   00FF14  54                 	db	84	;'T'
   636   00FF15  65                 	db	101	;'e'
   637   00FF16  73                 	db	115	;'s'
   638   00FF17  74                 	db	116	;'t'
   639   00FF18  0A                 	db	10
   640   00FF19  00                 	db	0
   641   00FF1A                     STR_17:
   642   00FF1A  50                 	db	80	;'P'
   643   00FF1B  68                 	db	104	;'h'
   644   00FF1C  6F                 	db	111	;'o'
   645   00FF1D  74                 	db	116	;'t'
   646   00FF1E  6F                 	db	111	;'o'
   647   00FF1F  54                 	db	84	;'T'
   648   00FF20  72                 	db	114	;'r'
   649   00FF21  20                 	db	32
   650   00FF22  45                 	db	69	;'E'
   651   00FF23  72                 	db	114	;'r'
   652   00FF24  72                 	db	114	;'r'
   653   00FF25  6F                 	db	111	;'o'
   654   00FF26  72                 	db	114	;'r'
   655   00FF27  31                 	db	49	;'1'
   656   00FF28  0A                 	db	10
   657   00FF29  00                 	db	0
   658   00FF2A                     STR_18:
   659   00FF2A  50                 	db	80	;'P'
   660   00FF2B  68                 	db	104	;'h'
   661   00FF2C  6F                 	db	111	;'o'
   662   00FF2D  74                 	db	116	;'t'
   663   00FF2E  6F                 	db	111	;'o'
   664   00FF2F  54                 	db	84	;'T'
   665   00FF30  72                 	db	114	;'r'
   666   00FF31  20                 	db	32
   667   00FF32  45                 	db	69	;'E'
   668   00FF33  72                 	db	114	;'r'
   669   00FF34  72                 	db	114	;'r'
   670   00FF35  6F                 	db	111	;'o'
   671   00FF36  72                 	db	114	;'r'
   672   00FF37  32                 	db	50	;'2'
   673   00FF38  0A                 	db	10
   674   00FF39  00                 	db	0
   675   00FF3A                     STR_20:
   676   00FF3A  4F                 	db	79	;'O'
   677   00FF3B  70                 	db	112	;'p'
   678   00FF3C  74                 	db	116	;'t'
   679   00FF3D  44                 	db	68	;'D'
   680   00FF3E  65                 	db	101	;'e'
   681   00FF3F  76                 	db	118	;'v'
   682   00FF40  69                 	db	105	;'i'
   683   00FF41  63                 	db	99	;'c'
   684   00FF42  65                 	db	101	;'e'
   685   00FF43  73                 	db	115	;'s'
   686   00FF44  20                 	db	32
   687   00FF45  4F                 	db	79	;'O'
   688   00FF46  4B                 	db	75	;'K'
   689   00FF47  0A                 	db	10
   690   00FF48  00                 	db	0
   691   00FF49                     STR_4:
   692   00FF49  42                 	db	66	;'B'
   693   00FF4A  61                 	db	97	;'a'
   694   00FF4B  75                 	db	117	;'u'
   695   00FF4C  64                 	db	100	;'d'
   696   00FF4D  20                 	db	32
   697   00FF4E  72                 	db	114	;'r'
   698   00FF4F  61                 	db	97	;'a'
   699   00FF50  74                 	db	116	;'t'
   700   00FF51  65                 	db	101	;'e'
   701   00FF52  3A                 	db	58	;':'
   702   00FF53  20                 	db	32
   703   00FF54  25                 	db	37
   704   00FF55  64                 	db	100	;'d'
   705   00FF56  0A                 	db	10
   706   00FF57  00                 	db	0
   707   00FF58                     STR_26:
   708   00FF58  50                 	db	80	;'P'
   709   00FF59  75                 	db	117	;'u'
   710   00FF5A  6C                 	db	108	;'l'
   711   00FF5B  73                 	db	115	;'s'
   712   00FF5C  65                 	db	101	;'e'
   713   00FF5D  4F                 	db	79	;'O'
   714   00FF5E  78                 	db	120	;'x'
   715   00FF5F  69                 	db	105	;'i'
   716   00FF60  6D                 	db	109	;'m'
   717   00FF61  65                 	db	101	;'e'
   718   00FF62  74                 	db	116	;'t'
   719   00FF63  65                 	db	101	;'e'
   720   00FF64  72                 	db	114	;'r'
   721   00FF65  0A                 	db	10
   722   00FF66  00                 	db	0
   723   00FF67                     STR_15:
   724   00FF67  4F                 	db	79	;'O'
   725   00FF68  4B                 	db	75	;'K'
   726   00FF69  3A                 	db	58	;':'
   727   00FF6A  20                 	db	32
   728   00FF6B  50                 	db	80	;'P'
   729   00FF6C  75                 	db	117	;'u'
   730   00FF6D  73                 	db	115	;'s'
   731   00FF6E  68                 	db	104	;'h'
   732   00FF6F  20                 	db	32
   733   00FF70  53                 	db	83	;'S'
   734   00FF71  57                 	db	87	;'W'
   735   00FF72  31                 	db	49	;'1'
   736   00FF73  0A                 	db	10
   737   00FF74  00                 	db	0
   738   00FF75                     STR_28:
   739   00FF75  48                 	db	72	;'H'
   740   00FF76  52                 	db	82	;'R'
   741   00FF77  3A                 	db	58	;':'
   742   00FF78  20                 	db	32
   743   00FF79  20                 	db	32
   744   00FF7A  20                 	db	32
   745   00FF7B  20                 	db	32
   746   00FF7C  20                 	db	32
   747   00FF7D  20                 	db	32
   748   00FF7E  42                 	db	66	;'B'
   749   00FF7F  50                 	db	80	;'P'
   750   00FF80  4D                 	db	77	;'M'
   751   00FF81  0A                 	db	10
   752   00FF82  00                 	db	0
   753   00FF83                     STR_19:
   754   00FF83  49                 	db	73	;'I'
   755   00FF84  52                 	db	82	;'R'
   756   00FF85  20                 	db	32
   757   00FF86  4C                 	db	76	;'L'
   758   00FF87  45                 	db	69	;'E'
   759   00FF88  44                 	db	68	;'D'
   760   00FF89  20                 	db	32
   761   00FF8A  45                 	db	69	;'E'
   762   00FF8B  72                 	db	114	;'r'
   763   00FF8C  72                 	db	114	;'r'
   764   00FF8D  6F                 	db	111	;'o'
   765   00FF8E  72                 	db	114	;'r'
   766   00FF8F  0A                 	db	10
   767   00FF90  00                 	db	0
   768   00FF91                     STR_27:
   769   00FF91  53                 	db	83	;'S'
   770   00FF92  70                 	db	112	;'p'
   771   00FF93  4F                 	db	79	;'O'
   772   00FF94  32                 	db	50	;'2'
   773   00FF95  3A                 	db	58	;':'
   774   00FF96  20                 	db	32
   775   00FF97  20                 	db	32
   776   00FF98  20                 	db	32
   777   00FF99  20                 	db	32
   778   00FF9A  25                 	db	37
   779   00FF9B  25                 	db	37
   780   00FF9C  0A                 	db	10
   781   00FF9D  00                 	db	0
   782   00FF9E                     STR_24:
   783   00FF9E  49                 	db	73	;'I'
   784   00FF9F  52                 	db	82	;'R'
   785   00FFA0  20                 	db	32
   786   00FFA1  3A                 	db	58	;':'
   787   00FFA2  20                 	db	32
   788   00FFA3  25                 	db	37
   789   00FFA4  33                 	db	51	;'3'
   790   00FFA5  6C                 	db	108	;'l'
   791   00FFA6  75                 	db	117	;'u'
   792   00FFA7  25                 	db	37
   793   00FFA8  25                 	db	37
   794   00FFA9  0A                 	db	10
   795   00FFAA  00                 	db	0
   796   00FFAB                     STR_25:
   797   00FFAB  52                 	db	82	;'R'
   798   00FFAC  65                 	db	101	;'e'
   799   00FFAD  64                 	db	100	;'d'
   800   00FFAE  3A                 	db	58	;':'
   801   00FFAF  20                 	db	32
   802   00FFB0  25                 	db	37
   803   00FFB1  33                 	db	51	;'3'
   804   00FFB2  6C                 	db	108	;'l'
   805   00FFB3  75                 	db	117	;'u'
   806   00FFB4  25                 	db	37
   807   00FFB5  25                 	db	37
   808   00FFB6  0A                 	db	10
   809   00FFB7  00                 	db	0
   810   00FFB8                     STR_16:
   811   00FFB8  43                 	db	67	;'C'
   812   00FFB9  68                 	db	104	;'h'
   813   00FFBA  65                 	db	101	;'e'
   814   00FFBB  63                 	db	99	;'c'
   815   00FFBC  6B                 	db	107	;'k'
   816   00FFBD  69                 	db	105	;'i'
   817   00FFBE  6E                 	db	110	;'n'
   818   00FFBF  67                 	db	103	;'g'
   819   00FFC0  2E                 	db	46
   820   00FFC1  2E                 	db	46
   821   00FFC2  2E                 	db	46
   822   00FFC3  0A                 	db	10
   823   00FFC4  00                 	db	0
   824   00FFC5                     STR_21:
   825   00FFC5  52                 	db	82	;'R'
   826   00FFC6  65                 	db	101	;'e'
   827   00FFC7  6C                 	db	108	;'l'
   828   00FFC8  65                 	db	101	;'e'
   829   00FFC9  61                 	db	97	;'a'
   830   00FFCA  73                 	db	115	;'s'
   831   00FFCB  65                 	db	101	;'e'
   832   00FFCC  20                 	db	32
   833   00FFCD  53                 	db	83	;'S'
   834   00FFCE  57                 	db	87	;'W'
   835   00FFCF  31                 	db	49	;'1'
   836   00FFD0  0A                 	db	10
   837   00FFD1  00                 	db	0
   838   00FFD2                     STR_55:
   839   00FFD2  28                 	db	40
   840   00FFD3  6E                 	db	110	;'n'
   841   00FFD4  75                 	db	117	;'u'
   842   00FFD5  6C                 	db	108	;'l'
   843   00FFD6  6C                 	db	108	;'l'
   844   00FFD7  29                 	db	41
   845   00FFD8  00                 	db	0
   846   00FFD9                     STR_23:
   847   00FFD9  1B                 	db	27
   848   00FFDA  5B                 	db	91	;'['
   849   00FFDB  48                 	db	72	;'H'
   850   00FFDC  1B                 	db	27
   851   00FFDD  5B                 	db	91	;'['
   852   00FFDE  4A                 	db	74	;'J'
   853   00FFDF  00                 	db	0
   854   00FFE0                     STR_37:
   855   00FFE0  20                 	db	32
   856   00FFE1  2D                 	db	45
   857   00FFE2  20                 	db	32
   858   00FFE3  0A                 	db	10
   859   00FFE4  00                 	db	0
   860   00FFE5                     STR_39:
   861   00FFE5  49                 	db	73	;'I'
   862   00FFE6  4E                 	db	78	;'N'
   863   00FFE7  46                 	db	70	;'F'
   864   00FFE8  00                 	db	0
   865   00FFE9                     STR_43:
   866   00FFE9  4E                 	db	78	;'N'
   867   00FFEA  41                 	db	65	;'A'
   868   00FFEB  4E                 	db	78	;'N'
   869   00FFEC  00                 	db	0
   870   00FFED                     STR_40:
   871   00FFED  69                 	db	105	;'i'
   872   00FFEE  6E                 	db	110	;'n'
   873   00FFEF  66                 	db	102	;'f'
   874   00FFF0  00                 	db	0
   875   00FFF1                     STR_44:
   876   00FFF1  6E                 	db	110	;'n'
   877   00FFF2  61                 	db	97	;'a'
   878   00FFF3  6E                 	db	110	;'n'
   879   00FFF4  00                 	db	0
   880   00FFF5                     STR_33:
   881   00FFF5  25                 	db	37
   882   00FFF6  33                 	db	51	;'3'
   883   00FFF7  64                 	db	100	;'d'
   884   00FFF8  00                 	db	0
   885   00FFF9                     STR_31:
   886   00FFF9  25                 	db	37
   887   00FFFA  63                 	db	99	;'c'
   888   00FFFB  00                 	db	0
   889   00FFFC                     STR_32:
   890   00FFFC  20                 	db	32
   891   00FFFD  00                 	db	0
   892   00FFFE  00                 	db	0	; dummy byte at the end
   893   000000                     
   894                           ; #config settings
   895                           
   896                           	psect	cinit
   897   0074AE                     __pcinit:
   898                           	callstack 0
   899   0074AE                     start_initialization:
   900                           	callstack 0
   901   0074AE                     __initialization:
   902                           	callstack 0
   903                           
   904                           ; Initialize objects allocated to BANK3 (8 bytes)
   905                           ; load TBLPTR registers with __pidataBANK3
   906   0074AE  0EBC               	movlw	low __pidataBANK3
   907   0074B0  6EF6               	movwf	tblptrl,c
   908   0074B2  0E79               	movlw	high __pidataBANK3
   909   0074B4  6EF7               	movwf	tblptrh,c
   910   0074B6  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   911   0074B8  6EF8               	movwf	tblptru,c
   912   0074BA  EE03  F070         	lfsr	0,__pdataBANK3
   913   0074BE  EE10 F008          	lfsr	1,8
   914   0074C2                     copy_data0:
   915   0074C2  0009               	tblrd		*+
   916   0074C4  CFF5 FFEE          	movff	tablat,postinc0
   917   0074C8  50E5               	movf	postdec1,w,c
   918   0074CA  50E1               	movf	fsr1l,w,c
   919   0074CC  E1FA               	bnz	copy_data0
   920                           
   921                           ; Clear objects allocated to BANK4 (256 bytes)
   922   0074CE  EE04  F000         	lfsr	0,__pbssBANK4
   923   0074D2  EE11 F000          	lfsr	1,256
   924   0074D6                     clear_0:
   925   0074D6  6AEE               	clrf	postinc0,c
   926   0074D8  50E5               	movf	postdec1,w,c
   927   0074DA  50E1               	movf	fsr1l,w,c
   928   0074DC  E1FC               	bnz	clear_0
   929   0074DE  50E2               	movf	fsr1h,w,c
   930   0074E0  E1FA               	bnz	clear_0
   931                           
   932                           ; Clear objects allocated to BANK3 (112 bytes)
   933   0074E2  EE03  F000         	lfsr	0,__pbssBANK3
   934   0074E6  0E70               	movlw	112
   935   0074E8                     clear_1:
   936   0074E8  6AEE               	clrf	postinc0,c
   937   0074EA  06E8               	decf	wreg,f,c
   938   0074EC  E1FD               	bnz	clear_1
   939                           
   940                           ; Clear objects allocated to BANK1 (192 bytes)
   941   0074EE  EE01  F000         	lfsr	0,__pbssBANK1
   942   0074F2  0EC0               	movlw	192
   943   0074F4                     clear_2:
   944   0074F4  6AEE               	clrf	postinc0,c
   945   0074F6  06E8               	decf	wreg,f,c
   946   0074F8  E1FD               	bnz	clear_2
   947   0074FA                     end_of_initialization:
   948                           	callstack 0
   949   0074FA                     __end_of__initialization:
   950                           	callstack 0
   951   0074FA  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   952   0074FC  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   953   0074FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   954   007500  6EF8               	movwf	tblptru,c
   955   007502  0100               	movlb	0
   956   007504  EF2B  F026         	goto	_main	;jump to C main() function
   957                           
   958                           	psect	bssBANK1
   959   000100                     __pbssBANK1:
   960                           	callstack 0
   961   000100                     _Timer:
   962                           	callstack 0
   963   000100                     	ds	40
   964   000128                     _beta_MinMax:
   965                           	callstack 0
   966   000128                     	ds	16
   967   000138                     _SPO2_OxyLevelArray:
   968                           	callstack 0
   969   000138                     	ds	16
   970   000148                     _beta_Average:
   971                           	callstack 0
   972   000148                     	ds	8
   973   000150                     _Absorption_Coefficents:
   974                           	callstack 0
   975   000150                     	ds	8
   976   000158                     _PeakTime:
   977                           	callstack 0
   978   000158                     	ds	8
   979   000160                     _Tmi:
   980                           	callstack 0
   981   000160                     	ds	8
   982   000168                     _Timer_HeartRateArray:
   983                           	callstack 0
   984   000168                     	ds	8
   985   000170                     floorf@F521:
   986                           	callstack 0
   987   000170                     	ds	4
   988   000174                     ___fpclassifyf@F465:
   989                           	callstack 0
   990   000174                     	ds	4
   991   000178                     _Timer_val_max:
   992                           	callstack 0
   993   000178                     	ds	4
   994   00017C                     _Timer_val_min:
   995                           	callstack 0
   996   00017C                     	ds	4
   997   000180                     _StartTime:
   998                           	callstack 0
   999   000180                     	ds	4
  1000   000184                     _Measured_Period:
  1001                           	callstack 0
  1002   000184                     	ds	4
  1003   000188                     _microseconds:
  1004                           	callstack 0
  1005   000188                     	ds	4
  1006   00018C                     _timerOverflowCount:
  1007                           	callstack 0
  1008   00018C                     	ds	4
  1009   000190                     _TimerStart:
  1010                           	callstack 0
  1011   000190                     	ds	4
  1012   000194                     _average_detTimer8:
  1013                           	callstack 0
  1014   000194                     	ds	4
  1015   000198                     _Tm_prev:
  1016                           	callstack 0
  1017   000198                     	ds	4
  1018   00019C                     _Heart_Rate_Count:
  1019                           	callstack 0
  1020   00019C                     	ds	4
  1021   0001A0                     _count:
  1022                           	callstack 0
  1023   0001A0                     	ds	4
  1024   0001A4                     _SpO2_value:
  1025                           	callstack 0
  1026   0001A4                     	ds	4
  1027   0001A8                     _nout:
  1028                           	callstack 0
  1029   0001A8                     	ds	2
  1030   0001AA                     _width:
  1031                           	callstack 0
  1032   0001AA                     	ds	2
  1033   0001AC                     _prec:
  1034                           	callstack 0
  1035   0001AC                     	ds	2
  1036   0001AE                     _errno:
  1037                           	callstack 0
  1038   0001AE                     	ds	2
  1039   0001B0                     _flags:
  1040                           	callstack 0
  1041   0001B0                     	ds	1
  1042   0001B1                     _mode:
  1043                           	callstack 0
  1044   0001B1                     	ds	1
  1045   0001B2                     _Period:
  1046                           	callstack 0
  1047   0001B2                     	ds	1
  1048   0001B3                     _LED_Color:
  1049                           	callstack 0
  1050   0001B3                     	ds	1
  1051   0001B4                     _RangeCountover:
  1052                           	callstack 0
  1053   0001B4                     	ds	1
  1054   0001B5                     _PeriodEndCount:
  1055                           	callstack 0
  1056   0001B5                     	ds	1
  1057   0001B6                     _SpO2_Hysteresis:
  1058                           	callstack 0
  1059   0001B6                     	ds	1
  1060   0001B7                     _HR_Hysteresis:
  1061                           	callstack 0
  1062   0001B7                     	ds	1
  1063   0001B8                     _R:
  1064                           	callstack 0
  1065   0001B8                     	ds	4
  1066   0001BC                     _HR_val:
  1067                           	callstack 0
  1068   0001BC                     	ds	4
  1069                           
  1070                           	psect	bssBANK3
  1071   000300                     __pbssBANK3:
  1072                           	callstack 0
  1073   000300                     _detTimer:
  1074                           	callstack 0
  1075   000300                     	ds	32
  1076   000320                     _dbuf:
  1077                           	callstack 0
  1078   000320                     	ds	80
  1079                           
  1080                           	psect	dataBANK3
  1081   000370                     __pdataBANK3:
  1082                           	callstack 0
  1083   000370                     _Heart:
  1084                           	callstack 0
  1085   000370                     	ds	8
  1086                           
  1087                           	psect	bssBANK4
  1088   000400                     __pbssBANK4:
  1089                           	callstack 0
  1090   000400                     _Last_beta:
  1091                           	callstack 0
  1092   000400                     	ds	256
  1093                           
  1094                           	psect	cstackBANK2
  1095   000200                     __pcstackBANK2:
  1096                           	callstack 0
  1097   000200                     UART1_SendFormatted@buffer:
  1098                           	callstack 0
  1099                           
  1100                           ; 256 bytes @ 0x0
  1101   000200                     	ds	256
  1102                           
  1103                           	psect	cstackBANK1
  1104   0001C0                     __pcstackBANK1:
  1105                           	callstack 0
  1106   0001C0                     _vsnprintf$1184:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x0
  1110   0001C0                     	ds	2
  1111   0001C2                     vsnprintf@cnt:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x2
  1115   0001C2                     	ds	2
  1116   0001C4                     vsnprintf@f:
  1117                           	callstack 0
  1118                           
  1119                           ; 12 bytes @ 0x4
  1120   0001C4                     	ds	12
  1121   0001D0                     ?_UART1_SendFormatted:
  1122                           	callstack 0
  1123   0001D0                     UART1_SendFormatted@format:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x10
  1127   0001D0                     	ds	28
  1128   0001EC                     ??_Setting:
  1129   0001EC                     _DataPrinting$1715:
  1130                           	callstack 0
  1131                           
  1132                           ; 4 bytes @ 0x2C
  1133   0001EC                     	ds	4
  1134   0001F0                     ??_ConfigurationCheck:
  1135   0001F0                     _DataPrinting$1716:
  1136                           	callstack 0
  1137                           
  1138                           ; 4 bytes @ 0x30
  1139   0001F0                     	ds	4
  1140   0001F4                     ConfigurationCheck@startTime:
  1141                           	callstack 0
  1142   0001F4                     _DataPrinting$1717:
  1143                           	callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x34
  1146   0001F4                     	ds	4
  1147   0001F8                     _DataPrinting$1718:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x38
  1151   0001F8                     	ds	4
  1152   0001FC                     main@is_overflow_timer:
  1153                           	callstack 0
  1154                           
  1155                           ; 1 bytes @ 0x3C
  1156   0001FC                     	ds	1
  1157   0001FD                     _main$186:
  1158                           	callstack 0
  1159                           
  1160                           ; 1 bytes @ 0x3D
  1161   0001FD                     	ds	1
  1162                           
  1163                           	psect	cstackBANK0
  1164   000080                     __pcstackBANK0:
  1165                           	callstack 0
  1166   000080                     ?_fabs:
  1167                           	callstack 0
  1168   000080                     fabs@num:
  1169                           	callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x0
  1172   000080                     	ds	4
  1173   000084                     ___flge@ff1:
  1174                           	callstack 0
  1175                           
  1176                           ; 4 bytes @ 0x4
  1177   000084                     	ds	4
  1178   000088                     ___flge@ff2:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x8
  1182   000088                     	ds	4
  1183   00008C                     ??___flge:
  1184                           
  1185                           ; 1 bytes @ 0xC
  1186   00008C                     	ds	4
  1187   000090                     ??_GetTimerVal:
  1188   000090                     ??_AbsorptionCoefficentCalc:
  1189   000090                     ??_HeartRateCalc:
  1190   000090                     ?_atoa:
  1191                           	callstack 0
  1192   000090                     ?_efgtoa:
  1193                           	callstack 0
  1194   000090                     TimerPeriodCheck@i:
  1195                           	callstack 0
  1196   000090                     atoa@fp:
  1197                           	callstack 0
  1198   000090                     efgtoa@fp:
  1199                           	callstack 0
  1200   000090                     _OxygenSPO2Calc$1719:
  1201                           	callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x10
  1204   000090                     	ds	2
  1205   000092                     atoa@f:
  1206                           	callstack 0
  1207   000092                     efgtoa@f:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x12
  1211   000092                     	ds	2
  1212   000094                     _OxygenSPO2Calc$1720:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x14
  1216   000094                     	ds	2
  1217   000096                     atoa@c:
  1218                           	callstack 0
  1219   000096                     efgtoa@c:
  1220                           	callstack 0
  1221                           
  1222                           ; 1 bytes @ 0x16
  1223   000096                     	ds	1
  1224   000097                     _efgtoa$1333:
  1225                           	callstack 0
  1226   000097                     atoa@ou:
  1227                           	callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x17
  1230   000097                     	ds	1
  1231   000098                     _AbsorptionCoefficentCalc$1713:
  1232                           	callstack 0
  1233   000098                     _OxygenSPO2Calc$1721:
  1234                           	callstack 0
  1235                           
  1236                           ; 4 bytes @ 0x18
  1237   000098                     	ds	1
  1238   000099                     _efgtoa$1340:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x19
  1242   000099                     	ds	2
  1243   00009B                     _atoa$1280:
  1244                           	callstack 0
  1245   00009B                     _efgtoa$1341:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x1B
  1249   00009B                     	ds	1
  1250   00009C                     _AbsorptionCoefficentCalc$1714:
  1251                           	callstack 0
  1252   00009C                     _OxygenSPO2Calc$1722:
  1253                           	callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x1C
  1256   00009C                     	ds	1
  1257   00009D                     _atoa$1288:
  1258                           	callstack 0
  1259   00009D                     _efgtoa$1342:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x1D
  1263   00009D                     	ds	2
  1264   00009F                     efgtoa@esign:
  1265                           	callstack 0
  1266   00009F                     _atoa$1289:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x1F
  1270   00009F                     	ds	1
  1271   0000A0                     AbsorptionCoefficentCalc@i:
  1272                           	callstack 0
  1273   0000A0                     efgtoa@t:
  1274                           	callstack 0
  1275   0000A0                     _OxygenSPO2Calc$1723:
  1276                           	callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x20
  1279   0000A0                     	ds	1
  1280   0000A1                     _atoa$1290:
  1281                           	callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x21
  1284   0000A1                     	ds	1
  1285   0000A2                     efgtoa@pp:
  1286                           	callstack 0
  1287   0000A2                     AbsorptionCoefficentCalc@j:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0x22
  1291   0000A2                     	ds	1
  1292   0000A3                     atoa@esign:
  1293                           	callstack 0
  1294   0000A3                     efgtoa@ne:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x23
  1298   0000A3                     	ds	1
  1299   0000A4                     atoa@m:
  1300                           	callstack 0
  1301   0000A4                     _OxygenSPO2Calc$1724:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x24
  1305   0000A4                     	ds	1
  1306   0000A5                     efgtoa@m:
  1307                           	callstack 0
  1308                           
  1309                           ; 2 bytes @ 0x25
  1310   0000A5                     	ds	1
  1311   0000A6                     atoa@ne:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x26
  1315   0000A6                     	ds	1
  1316   0000A7                     efgtoa@d:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x27
  1320   0000A7                     	ds	1
  1321   0000A8                     atoa@p:
  1322                           	callstack 0
  1323   0000A8                     _OxygenSPO2Calc$1725:
  1324                           	callstack 0
  1325                           
  1326                           ; 4 bytes @ 0x28
  1327   0000A8                     	ds	1
  1328   0000A9                     efgtoa@p:
  1329                           	callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x29
  1332   0000A9                     	ds	1
  1333   0000AA                     atoa@pp:
  1334                           	callstack 0
  1335                           
  1336                           ; 1 bytes @ 0x2A
  1337   0000AA                     	ds	1
  1338   0000AB                     efgtoa@nmode:
  1339                           	callstack 0
  1340   0000AB                     atoa@t:
  1341                           	callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x2B
  1344   0000AB                     	ds	1
  1345   0000AC                     efgtoa@mode:
  1346                           	callstack 0
  1347   0000AC                     OxygenSPO2Calc@i:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x2C
  1351   0000AC                     	ds	1
  1352   0000AD                     atoa@e:
  1353                           	callstack 0
  1354   0000AD                     efgtoa@ou:
  1355                           	callstack 0
  1356                           
  1357                           ; 4 bytes @ 0x2D
  1358   0000AD                     	ds	2
  1359   0000AF                     atoa@h:
  1360                           	callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x2F
  1363   0000AF                     	ds	2
  1364   0000B1                     efgtoa@w:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x31
  1368   0000B1                     	ds	2
  1369   0000B3                     atoa@l:
  1370                           	callstack 0
  1371   0000B3                     efgtoa@h:
  1372                           	callstack 0
  1373                           
  1374                           ; 4 bytes @ 0x33
  1375   0000B3                     	ds	4
  1376   0000B7                     atoa@w:
  1377                           	callstack 0
  1378   0000B7                     efgtoa@l:
  1379                           	callstack 0
  1380                           
  1381                           ; 4 bytes @ 0x37
  1382   0000B7                     	ds	2
  1383   0000B9                     atoa@g:
  1384                           	callstack 0
  1385                           
  1386                           ; 4 bytes @ 0x39
  1387   0000B9                     	ds	2
  1388   0000BB                     efgtoa@sign:
  1389                           	callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x3B
  1392   0000BB                     	ds	1
  1393   0000BC                     efgtoa@g:
  1394                           	callstack 0
  1395                           
  1396                           ; 4 bytes @ 0x3C
  1397   0000BC                     	ds	1
  1398   0000BD                     atoa@sign:
  1399                           	callstack 0
  1400                           
  1401                           ; 1 bytes @ 0x3D
  1402   0000BD                     	ds	1
  1403   0000BE                     atoa@d:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x3E
  1407   0000BE                     	ds	2
  1408   0000C0                     efgtoa@e:
  1409                           	callstack 0
  1410   0000C0                     atoa@u:
  1411                           	callstack 0
  1412                           
  1413                           ; 4 bytes @ 0x40
  1414   0000C0                     	ds	2
  1415   0000C2                     efgtoa@i:
  1416                           	callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x42
  1419   0000C2                     	ds	2
  1420   0000C4                     atoa@i:
  1421                           	callstack 0
  1422   0000C4                     efgtoa@u:
  1423                           	callstack 0
  1424                           
  1425                           ; 4 bytes @ 0x44
  1426   0000C4                     	ds	2
  1427   0000C6                     atoa@n:
  1428                           	callstack 0
  1429                           
  1430                           ; 2 bytes @ 0x46
  1431   0000C6                     	ds	2
  1432   0000C8                     efgtoa@n:
  1433                           	callstack 0
  1434                           
  1435                           ; 2 bytes @ 0x48
  1436   0000C8                     	ds	2
  1437   0000CA                     ?_vfpfcnvrt:
  1438                           	callstack 0
  1439   0000CA                     vfpfcnvrt@fp:
  1440                           	callstack 0
  1441                           
  1442                           ; 2 bytes @ 0x4A
  1443   0000CA                     	ds	2
  1444   0000CC                     vfpfcnvrt@fmt:
  1445                           	callstack 0
  1446                           
  1447                           ; 1 bytes @ 0x4C
  1448   0000CC                     	ds	1
  1449   0000CD                     vfpfcnvrt@ap:
  1450                           	callstack 0
  1451                           
  1452                           ; 1 bytes @ 0x4D
  1453   0000CD                     	ds	1
  1454   0000CE                     ??_vfpfcnvrt:
  1455                           
  1456                           ; 1 bytes @ 0x4E
  1457   0000CE                     	ds	14
  1458   0000DC                     vfpfcnvrt@done:
  1459                           	callstack 0
  1460                           
  1461                           ; 1 bytes @ 0x5C
  1462   0000DC                     	ds	1
  1463   0000DD                     vfpfcnvrt@c:
  1464                           	callstack 0
  1465                           
  1466                           ; 1 bytes @ 0x5D
  1467   0000DD                     	ds	1
  1468   0000DE                     vfpfcnvrt@convarg:
  1469                           	callstack 0
  1470                           
  1471                           ; 8 bytes @ 0x5E
  1472   0000DE                     	ds	8
  1473   0000E6                     vfpfcnvrt@cp:
  1474                           	callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x66
  1477   0000E6                     	ds	2
  1478   0000E8                     ?_vfprintf:
  1479                           	callstack 0
  1480   0000E8                     vfprintf@fp:
  1481                           	callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x68
  1484   0000E8                     	ds	2
  1485   0000EA                     vfprintf@fmt:
  1486                           	callstack 0
  1487                           
  1488                           ; 2 bytes @ 0x6A
  1489   0000EA                     	ds	2
  1490   0000EC                     vfprintf@ap:
  1491                           	callstack 0
  1492                           
  1493                           ; 1 bytes @ 0x6C
  1494   0000EC                     	ds	1
  1495   0000ED                     vfprintf@cfmt:
  1496                           	callstack 0
  1497                           
  1498                           ; 2 bytes @ 0x6D
  1499   0000ED                     	ds	2
  1500   0000EF                     vsnprintf@s:
  1501                           	callstack 0
  1502                           
  1503                           ; 2 bytes @ 0x6F
  1504   0000EF                     	ds	2
  1505   0000F1                     vsnprintf@n:
  1506                           	callstack 0
  1507                           
  1508                           ; 2 bytes @ 0x71
  1509   0000F1                     	ds	2
  1510   0000F3                     vsnprintf@fmt:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x73
  1514   0000F3                     	ds	2
  1515   0000F5                     vsnprintf@ap:
  1516                           	callstack 0
  1517                           
  1518                           ; 1 bytes @ 0x75
  1519   0000F5                     	ds	1
  1520   0000F6                     ??_vsnprintf:
  1521                           
  1522                           ; 1 bytes @ 0x76
  1523   0000F6                     	ds	3
  1524   0000F9                     UART1_SendFormatted@args:
  1525                           	callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x79
  1528   0000F9                     	ds	2
  1529   0000FB                     ??_StartPrinting:
  1530   0000FB                     ??_DetectorTest:
  1531   0000FB                     ??_ResistorAdjust:
  1532                           
  1533                           ; 1 bytes @ 0x7B
  1534   0000FB                     	ds	2
  1535   0000FD                     ??_main:
  1536                           
  1537                           ; 1 bytes @ 0x7D
  1538   0000FD                     	ds	2
  1539                           
  1540                           	psect	cstackCOMRAM
  1541   000001                     __pcstackCOMRAM:
  1542                           	callstack 0
  1543   000001                     ??_LEDChangeState:
  1544   000001                     ??_MinMaxValReset:
  1545   000001                     ??_Reset_MCLR:
  1546   000001                     ?_strlen:
  1547                           	callstack 0
  1548   000001                     ?___fpclassifyf:
  1549                           	callstack 0
  1550   000001                     ?___wmul:
  1551                           	callstack 0
  1552   000001                     ?___awdiv:
  1553                           	callstack 0
  1554   000001                     ?___awmod:
  1555                           	callstack 0
  1556   000001                     ?_labs:
  1557                           	callstack 0
  1558   000001                     ?_millis:
  1559                           	callstack 0
  1560   000001                     ?_micros:
  1561                           	callstack 0
  1562   000001                     ?___lmul:
  1563                           	callstack 0
  1564   000001                     ?___lldiv:
  1565                           	callstack 0
  1566   000001                     ?___flneg:
  1567                           	callstack 0
  1568   000001                     ?___aodiv:
  1569                           	callstack 0
  1570   000001                     ?___aomod:
  1571                           	callstack 0
  1572   000001                     ?___lodiv:
  1573                           	callstack 0
  1574   000001                     ?___lomod:
  1575                           	callstack 0
  1576   000001                     pinMode@mode:
  1577                           	callstack 0
  1578   000001                     UART1_Send@data:
  1579                           	callstack 0
  1580   000001                     ___wmul@multiplier:
  1581                           	callstack 0
  1582   000001                     ___awdiv@dividend:
  1583                           	callstack 0
  1584   000001                     ___awmod@dividend:
  1585                           	callstack 0
  1586   000001                     memcpy@d1:
  1587                           	callstack 0
  1588   000001                     fputc@c:
  1589                           	callstack 0
  1590   000001                     strcpy@dest:
  1591                           	callstack 0
  1592   000001                     strlen@s:
  1593                           	callstack 0
  1594   000001                     ___lmul@multiplier:
  1595                           	callstack 0
  1596   000001                     ___lldiv@dividend:
  1597                           	callstack 0
  1598   000001                     ___fleq@ff1:
  1599                           	callstack 0
  1600   000001                     ___flneg@f1:
  1601                           	callstack 0
  1602   000001                     ___fpclassifyf@x:
  1603                           	callstack 0
  1604   000001                     labs@a:
  1605                           	callstack 0
  1606   000001                     ___aodiv@dividend:
  1607                           	callstack 0
  1608   000001                     ___aomod@dividend:
  1609                           	callstack 0
  1610   000001                     ___lodiv@dividend:
  1611                           	callstack 0
  1612   000001                     ___lomod@dividend:
  1613                           	callstack 0
  1614                           
  1615                           ; 8 bytes @ 0x0
  1616   000001                     	ds	1
  1617   000002                     ??_pinMode:
  1618                           
  1619                           ; 1 bytes @ 0x1
  1620   000002                     	ds	1
  1621   000003                     LEDChangeState@State:
  1622                           	callstack 0
  1623   000003                     MinMaxValReset@i:
  1624                           	callstack 0
  1625   000003                     ___wmul@multiplicand:
  1626                           	callstack 0
  1627   000003                     ___awdiv@divisor:
  1628                           	callstack 0
  1629   000003                     ___awmod@divisor:
  1630                           	callstack 0
  1631   000003                     memcpy@s1:
  1632                           	callstack 0
  1633   000003                     fputc@fp:
  1634                           	callstack 0
  1635   000003                     strcpy@src:
  1636                           	callstack 0
  1637   000003                     strlen@a:
  1638                           	callstack 0
  1639                           
  1640                           ; 2 bytes @ 0x2
  1641   000003                     	ds	1
  1642   000004                     pinMode@pin:
  1643                           	callstack 0
  1644                           
  1645                           ; 1 bytes @ 0x3
  1646   000004                     	ds	1
  1647   000005                     ??_fputc:
  1648   000005                     ??___fpclassifyf:
  1649   000005                     ??_labs:
  1650   000005                     ??_millis:
  1651   000005                     ??_micros:
  1652   000005                     pinMode@mask:
  1653                           	callstack 0
  1654   000005                     ___awdiv@counter:
  1655                           	callstack 0
  1656   000005                     ___awmod@counter:
  1657                           	callstack 0
  1658   000005                     ___wmul@product:
  1659                           	callstack 0
  1660   000005                     memcpy@n:
  1661                           	callstack 0
  1662   000005                     strcpy@d:
  1663                           	callstack 0
  1664   000005                     ___lmul@multiplicand:
  1665                           	callstack 0
  1666   000005                     ___lldiv@divisor:
  1667                           	callstack 0
  1668   000005                     ___fleq@ff2:
  1669                           	callstack 0
  1670                           
  1671                           ; 4 bytes @ 0x4
  1672   000005                     	ds	1
  1673   000006                     ___awdiv@sign:
  1674                           	callstack 0
  1675   000006                     ___awmod@sign:
  1676                           	callstack 0
  1677                           
  1678                           ; 1 bytes @ 0x5
  1679   000006                     	ds	1
  1680   000007                     ?_read_prec_or_width:
  1681                           	callstack 0
  1682   000007                     read_prec_or_width@fmt:
  1683                           	callstack 0
  1684   000007                     memcpy@tmp:
  1685                           	callstack 0
  1686   000007                     ___awdiv@quotient:
  1687                           	callstack 0
  1688                           
  1689                           ; 2 bytes @ 0x6
  1690   000007                     	ds	1
  1691   000008                     read_prec_or_width@ap:
  1692                           	callstack 0
  1693   000008                     memcpy@d:
  1694                           	callstack 0
  1695                           
  1696                           ; 2 bytes @ 0x7
  1697   000008                     	ds	1
  1698   000009                     ??___fleq:
  1699   000009                     ??_read_prec_or_width:
  1700   000009                     ___fpclassifyf@e:
  1701                           	callstack 0
  1702   000009                     ___lmul@product:
  1703                           	callstack 0
  1704   000009                     ___lldiv@quotient:
  1705                           	callstack 0
  1706   000009                     ___aodiv@divisor:
  1707                           	callstack 0
  1708   000009                     ___aomod@divisor:
  1709                           	callstack 0
  1710   000009                     ___lodiv@divisor:
  1711                           	callstack 0
  1712   000009                     ___lomod@divisor:
  1713                           	callstack 0
  1714                           
  1715                           ; 8 bytes @ 0x8
  1716   000009                     	ds	1
  1717   00000A                     ?_ctoa:
  1718                           	callstack 0
  1719   00000A                     ?_stoa:
  1720                           	callstack 0
  1721   00000A                     ctoa@fp:
  1722                           	callstack 0
  1723   00000A                     stoa@fp:
  1724                           	callstack 0
  1725   00000A                     memcpy@s:
  1726                           	callstack 0
  1727   00000A                     fputs@s:
  1728                           	callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x9
  1731   00000A                     	ds	1
  1732   00000B                     read_prec_or_width@c:
  1733                           	callstack 0
  1734   00000B                     micros@timerValue:
  1735                           	callstack 0
  1736   00000B                     ___fpclassifyf@u:
  1737                           	callstack 0
  1738                           
  1739                           ; 4 bytes @ 0xA
  1740   00000B                     	ds	1
  1741   00000C                     ctoa@c:
  1742                           	callstack 0
  1743   00000C                     stoa@s:
  1744                           	callstack 0
  1745   00000C                     read_prec_or_width@n:
  1746                           	callstack 0
  1747   00000C                     fputs@fp:
  1748                           	callstack 0
  1749   00000C                     millis@milliseconds:
  1750                           	callstack 0
  1751                           
  1752                           ; 4 bytes @ 0xB
  1753   00000C                     	ds	1
  1754   00000D                     ??_ctoa:
  1755   00000D                     ?___llmod:
  1756                           	callstack 0
  1757   00000D                     ___lldiv@counter:
  1758                           	callstack 0
  1759   00000D                     ___llmod@dividend:
  1760                           	callstack 0
  1761                           
  1762                           ; 4 bytes @ 0xC
  1763   00000D                     	ds	1
  1764   00000E                     ??_stoa:
  1765   00000E                     fputs@c:
  1766                           	callstack 0
  1767   00000E                     ctoa@l:
  1768                           	callstack 0
  1769   00000E                     UART1_Init@baud_rate:
  1770                           	callstack 0
  1771                           
  1772                           ; 4 bytes @ 0xD
  1773   00000E                     	ds	1
  1774   00000F                     fputs@i:
  1775                           	callstack 0
  1776                           
  1777                           ; 2 bytes @ 0xE
  1778   00000F                     	ds	1
  1779   000010                     millis@tmr1Val:
  1780                           	callstack 0
  1781   000010                     ctoa@w:
  1782                           	callstack 0
  1783   000010                     stoa@p:
  1784                           	callstack 0
  1785                           
  1786                           ; 2 bytes @ 0xF
  1787   000010                     	ds	1
  1788   000011                     ?_pad:
  1789                           	callstack 0
  1790   000011                     ___aodiv@counter:
  1791                           	callstack 0
  1792   000011                     ___aomod@counter:
  1793                           	callstack 0
  1794   000011                     ___lomod@counter:
  1795                           	callstack 0
  1796   000011                     pad@fp:
  1797                           	callstack 0
  1798   000011                     ___llmod@divisor:
  1799                           	callstack 0
  1800   000011                     ___lodiv@quotient:
  1801                           	callstack 0
  1802                           
  1803                           ; 8 bytes @ 0x10
  1804   000011                     	ds	1
  1805   000012                     ??_UART1_Init:
  1806   000012                     ___aodiv@sign:
  1807                           	callstack 0
  1808   000012                     ___aomod@sign:
  1809                           	callstack 0
  1810   000012                     stoa@w:
  1811                           	callstack 0
  1812                           
  1813                           ; 2 bytes @ 0x11
  1814   000012                     	ds	1
  1815   000013                     ?_abs:
  1816                           	callstack 0
  1817   000013                     pad@buf:
  1818                           	callstack 0
  1819   000013                     abs@a:
  1820                           	callstack 0
  1821   000013                     ___aodiv@quotient:
  1822                           	callstack 0
  1823                           
  1824                           ; 8 bytes @ 0x12
  1825   000013                     	ds	1
  1826   000014                     stoa@cp:
  1827                           	callstack 0
  1828                           
  1829                           ; 2 bytes @ 0x13
  1830   000014                     	ds	1
  1831   000015                     ??_abs:
  1832   000015                     ___llmod@counter:
  1833                           	callstack 0
  1834   000015                     pad@p:
  1835                           	callstack 0
  1836                           
  1837                           ; 2 bytes @ 0x14
  1838   000015                     	ds	1
  1839   000016                     ?___xxtofl:
  1840                           	callstack 0
  1841   000016                     stoa@l:
  1842                           	callstack 0
  1843   000016                     ___xxtofl@val:
  1844                           	callstack 0
  1845                           
  1846                           ; 4 bytes @ 0x15
  1847   000016                     	ds	1
  1848   000017                     ??_pad:
  1849                           
  1850                           ; 1 bytes @ 0x16
  1851   000017                     	ds	1
  1852   000018                     pad@i:
  1853                           	callstack 0
  1854                           
  1855                           ; 2 bytes @ 0x17
  1856   000018                     	ds	1
  1857   000019                     ___lodiv@counter:
  1858                           	callstack 0
  1859                           
  1860                           ; 1 bytes @ 0x18
  1861   000019                     	ds	1
  1862   00001A                     ??___xxtofl:
  1863   00001A                     ?_otoa:
  1864                           	callstack 0
  1865   00001A                     ?_utoa:
  1866                           	callstack 0
  1867   00001A                     ?_xtoa:
  1868                           	callstack 0
  1869   00001A                     otoa@fp:
  1870                           	callstack 0
  1871   00001A                     utoa@fp:
  1872                           	callstack 0
  1873   00001A                     xtoa@fp:
  1874                           	callstack 0
  1875                           
  1876                           ; 2 bytes @ 0x19
  1877   00001A                     	ds	1
  1878   00001B                     ?_dtoa:
  1879                           	callstack 0
  1880   00001B                     dtoa@fp:
  1881                           	callstack 0
  1882                           
  1883                           ; 2 bytes @ 0x1A
  1884   00001B                     	ds	1
  1885   00001C                     otoa@d:
  1886                           	callstack 0
  1887   00001C                     utoa@d:
  1888                           	callstack 0
  1889   00001C                     xtoa@d:
  1890                           	callstack 0
  1891                           
  1892                           ; 8 bytes @ 0x1B
  1893   00001C                     	ds	1
  1894   00001D                     dtoa@d:
  1895                           	callstack 0
  1896                           
  1897                           ; 8 bytes @ 0x1C
  1898   00001D                     	ds	1
  1899   00001E                     ___xxtofl@sign:
  1900                           	callstack 0
  1901                           
  1902                           ; 1 bytes @ 0x1D
  1903   00001E                     	ds	1
  1904   00001F                     ___xxtofl@exp:
  1905                           	callstack 0
  1906                           
  1907                           ; 1 bytes @ 0x1E
  1908   00001F                     	ds	1
  1909   000020                     ___xxtofl@arg:
  1910                           	callstack 0
  1911                           
  1912                           ; 4 bytes @ 0x1F
  1913   000020                     	ds	4
  1914   000024                     ??_otoa:
  1915   000024                     ??_utoa:
  1916   000024                     ?___fldiv:
  1917                           	callstack 0
  1918   000024                     xtoa@x:
  1919                           	callstack 0
  1920   000024                     ___fldiv@b:
  1921                           	callstack 0
  1922                           
  1923                           ; 4 bytes @ 0x23
  1924   000024                     	ds	1
  1925   000025                     ??_dtoa:
  1926   000025                     ??_xtoa:
  1927                           
  1928                           ; 1 bytes @ 0x24
  1929   000025                     	ds	3
  1930   000028                     ___fldiv@a:
  1931                           	callstack 0
  1932                           
  1933                           ; 4 bytes @ 0x27
  1934   000028                     	ds	4
  1935   00002C                     ??___fldiv:
  1936   00002C                     otoa@p:
  1937                           	callstack 0
  1938   00002C                     utoa@p:
  1939                           	callstack 0
  1940                           
  1941                           ; 2 bytes @ 0x2B
  1942   00002C                     	ds	1
  1943   00002D                     xtoa@a:
  1944                           	callstack 0
  1945   00002D                     _dtoa$1303:
  1946                           	callstack 0
  1947                           
  1948                           ; 2 bytes @ 0x2C
  1949   00002D                     	ds	1
  1950   00002E                     otoa@t:
  1951                           	callstack 0
  1952   00002E                     utoa@w:
  1953                           	callstack 0
  1954   00002E                     _xtoa$1375:
  1955                           	callstack 0
  1956                           
  1957                           ; 2 bytes @ 0x2D
  1958   00002E                     	ds	1
  1959   00002F                     dtoa@p:
  1960                           	callstack 0
  1961   00002F                     otoa@w:
  1962                           	callstack 0
  1963                           
  1964                           ; 2 bytes @ 0x2E
  1965   00002F                     	ds	1
  1966   000030                     utoa@i:
  1967                           	callstack 0
  1968   000030                     xtoa@p:
  1969                           	callstack 0
  1970   000030                     ___fldiv@rem:
  1971                           	callstack 0
  1972                           
  1973                           ; 4 bytes @ 0x2F
  1974   000030                     	ds	1
  1975   000031                     dtoa@w:
  1976                           	callstack 0
  1977   000031                     otoa@i:
  1978                           	callstack 0
  1979                           
  1980                           ; 2 bytes @ 0x30
  1981   000031                     	ds	1
  1982   000032                     xtoa@d_nonzero:
  1983                           	callstack 0
  1984                           
  1985                           ; 1 bytes @ 0x31
  1986   000032                     	ds	1
  1987   000033                     dtoa@s:
  1988                           	callstack 0
  1989   000033                     xtoa@w:
  1990                           	callstack 0
  1991                           
  1992                           ; 2 bytes @ 0x32
  1993   000033                     	ds	1
  1994   000034                     ___fldiv@sign:
  1995                           	callstack 0
  1996   000034                     dtoa@i:
  1997                           	callstack 0
  1998                           
  1999                           ; 2 bytes @ 0x33
  2000   000034                     	ds	1
  2001   000035                     xtoa@c:
  2002                           	callstack 0
  2003   000035                     ___fldiv@new_exp:
  2004                           	callstack 0
  2005                           
  2006                           ; 2 bytes @ 0x34
  2007   000035                     	ds	1
  2008   000036                     xtoa@i:
  2009                           	callstack 0
  2010                           
  2011                           ; 2 bytes @ 0x35
  2012   000036                     	ds	1
  2013   000037                     ___fldiv@grs:
  2014                           	callstack 0
  2015                           
  2016                           ; 4 bytes @ 0x36
  2017   000037                     	ds	4
  2018   00003B                     ___fldiv@bexp:
  2019                           	callstack 0
  2020                           
  2021                           ; 1 bytes @ 0x3A
  2022   00003B                     	ds	1
  2023   00003C                     ___fldiv@aexp:
  2024                           	callstack 0
  2025                           
  2026                           ; 1 bytes @ 0x3B
  2027   00003C                     	ds	1
  2028   00003D                     ?___flmul:
  2029                           	callstack 0
  2030   00003D                     ?_floorf:
  2031                           	callstack 0
  2032   00003D                     ___flmul@b:
  2033                           	callstack 0
  2034   00003D                     floorf@x:
  2035                           	callstack 0
  2036                           
  2037                           ; 4 bytes @ 0x3C
  2038   00003D                     	ds	4
  2039   000041                     ??_floorf:
  2040   000041                     ___flmul@a:
  2041                           	callstack 0
  2042                           
  2043                           ; 4 bytes @ 0x40
  2044   000041                     	ds	4
  2045   000045                     ??___flmul:
  2046                           
  2047                           ; 1 bytes @ 0x44
  2048   000045                     	ds	2
  2049   000047                     floorf@m:
  2050                           	callstack 0
  2051                           
  2052                           ; 4 bytes @ 0x46
  2053   000047                     	ds	2
  2054   000049                     ___flmul@sign:
  2055                           	callstack 0
  2056                           
  2057                           ; 1 bytes @ 0x48
  2058   000049                     	ds	1
  2059   00004A                     ___flmul@grs:
  2060                           	callstack 0
  2061                           
  2062                           ; 4 bytes @ 0x49
  2063   00004A                     	ds	1
  2064   00004B                     floorf@e:
  2065                           	callstack 0
  2066                           
  2067                           ; 2 bytes @ 0x4A
  2068   00004B                     	ds	2
  2069   00004D                     floorf@u:
  2070                           	callstack 0
  2071                           
  2072                           ; 4 bytes @ 0x4C
  2073   00004D                     	ds	1
  2074   00004E                     ___flmul@aexp:
  2075                           	callstack 0
  2076                           
  2077                           ; 1 bytes @ 0x4D
  2078   00004E                     	ds	1
  2079   00004F                     ___flmul@bexp:
  2080                           	callstack 0
  2081                           
  2082                           ; 1 bytes @ 0x4E
  2083   00004F                     	ds	1
  2084   000050                     ___flmul@prod:
  2085                           	callstack 0
  2086                           
  2087                           ; 4 bytes @ 0x4F
  2088   000050                     	ds	4
  2089   000054                     ___flmul@temp:
  2090                           	callstack 0
  2091                           
  2092                           ; 2 bytes @ 0x53
  2093   000054                     	ds	2
  2094   000056                     ?___fladd:
  2095                           	callstack 0
  2096   000056                     ___fladd@b:
  2097                           	callstack 0
  2098                           
  2099                           ; 4 bytes @ 0x55
  2100   000056                     	ds	4
  2101   00005A                     ___fladd@a:
  2102                           	callstack 0
  2103                           
  2104                           ; 4 bytes @ 0x59
  2105   00005A                     	ds	4
  2106   00005E                     ??___fladd:
  2107                           
  2108                           ; 1 bytes @ 0x5D
  2109   00005E                     	ds	4
  2110   000062                     ___fladd@signs:
  2111                           	callstack 0
  2112                           
  2113                           ; 1 bytes @ 0x61
  2114   000062                     	ds	1
  2115   000063                     ___fladd@aexp:
  2116                           	callstack 0
  2117                           
  2118                           ; 1 bytes @ 0x62
  2119   000063                     	ds	1
  2120   000064                     ___fladd@bexp:
  2121                           	callstack 0
  2122                           
  2123                           ; 1 bytes @ 0x63
  2124   000064                     	ds	1
  2125   000065                     ___fladd@grs:
  2126                           	callstack 0
  2127                           
  2128                           ; 1 bytes @ 0x64
  2129   000065                     	ds	1
  2130   000066                     ?_exp:
  2131                           	callstack 0
  2132   000066                     ?___fltol:
  2133                           	callstack 0
  2134   000066                     exp@x:
  2135                           	callstack 0
  2136   000066                     ___fltol@f1:
  2137                           	callstack 0
  2138                           
  2139                           ; 4 bytes @ 0x65
  2140   000066                     	ds	4
  2141   00006A                     ??___fltol:
  2142   00006A                     exp@result:
  2143                           	callstack 0
  2144                           
  2145                           ; 4 bytes @ 0x69
  2146   00006A                     	ds	4
  2147   00006E                     ___fltol@sign1:
  2148                           	callstack 0
  2149   00006E                     exp@term:
  2150                           	callstack 0
  2151                           
  2152                           ; 4 bytes @ 0x6D
  2153   00006E                     	ds	1
  2154   00006F                     ___fltol@exp1:
  2155                           	callstack 0
  2156                           
  2157                           ; 1 bytes @ 0x6E
  2158   00006F                     	ds	3
  2159   000072                     exp@i:
  2160                           	callstack 0
  2161                           
  2162                           ; 2 bytes @ 0x71
  2163   000072                     	ds	2
  2164   000074                     ?___flsub:
  2165                           	callstack 0
  2166   000074                     ___flsub@b:
  2167                           	callstack 0
  2168                           
  2169                           ; 4 bytes @ 0x73
  2170   000074                     	ds	4
  2171   000078                     ___flsub@a:
  2172                           	callstack 0
  2173                           
  2174                           ; 4 bytes @ 0x77
  2175   000078                     	ds	4
  2176   00007C                     ??_TimerPeriodCheck:
  2177   00007C                     ??_OxygenSPO2Calc:
  2178   00007C                     ??_atoa:
  2179   00007C                     ??_efgtoa:
  2180   00007C                     GetTimerVal@i:
  2181                           	callstack 0
  2182   00007C                     HeartRateCalc@i:
  2183                           	callstack 0
  2184                           
  2185                           ; 2 bytes @ 0x7B
  2186   00007C                     	ds	3
  2187   00007F                     
  2188                           ; 1 bytes @ 0x7E
  2189 ;;
  2190 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2191 ;;
  2192 ;; *************** function _main *****************
  2193 ;; Defined at:
  2194 ;;		line 6 in file "main.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;		None
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  is_overflow_    1   60[BANK1 ] _Bool 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;Total ram usage:        4 bytes
  2213 ;; Hardware stack levels required when called: 15
  2214 ;; This function calls:
  2215 ;;		_AbsorptionCoefficentCalc
  2216 ;;		_DataPrinting
  2217 ;;		_GetTimerVal
  2218 ;;		_HeartRateCalc
  2219 ;;		_LEDChangeState
  2220 ;;		_MinMaxValReset
  2221 ;;		_OSC_Init
  2222 ;;		_OxygenSPO2Calc
  2223 ;;		_PrintNoData
  2224 ;;		_TimerPeriodCheck
  2225 ;;		___flge
  2226 ;;		_setup
  2227 ;;		_setupTimer
  2228 ;; This function is called by:
  2229 ;;		Startup code after reset
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text0
  2234   004C56                     __ptext0:
  2235                           	callstack 0
  2236   004C56                     _main:
  2237                           	callstack 16
  2238   004C56                     
  2239                           ;main.c: 7:     OSC_Init();
  2240   004C56  ECE2  F03C         	call	_OSC_Init	;wreg free
  2241                           
  2242                           ;main.c: 8:     setupTimer();
  2243   004C5A  ECC7  F03C         	call	_setupTimer	;wreg free
  2244   004C5E                     
  2245                           ;main.c: 9:     setup();
  2246   004C5E  EC6C  F03C         	call	_setup	;wreg free
  2247   004C62                     
  2248                           ;main.c: 10:     Timer_val_min = (uint16_t)(16384 * 0.05);
  2249   004C62  0E33               	movlw	51
  2250   004C64  0101               	movlb	1	; () banked
  2251   004C66  6F7C               	movwf	_Timer_val_min& (0+255),b
  2252   004C68  0E03               	movlw	3
  2253   004C6A  6F7D               	movwf	(_Timer_val_min+1)& (0+255),b
  2254   004C6C  0E00               	movlw	0
  2255   004C6E  6F7E               	movwf	(_Timer_val_min+2)& (0+255),b
  2256   004C70  0E00               	movlw	0
  2257   004C72  6F7F               	movwf	(_Timer_val_min+3)& (0+255),b
  2258   004C74                     
  2259                           ; BSR set to: 1
  2260                           ;main.c: 11:     Timer_val_max = (uint16_t)(16384 * 0.95);
  2261   004C74  0ECC               	movlw	204
  2262   004C76  6F78               	movwf	_Timer_val_max& (0+255),b
  2263   004C78  0E3C               	movlw	60
  2264   004C7A  6F79               	movwf	(_Timer_val_max+1)& (0+255),b
  2265   004C7C  0E00               	movlw	0
  2266   004C7E  6F7A               	movwf	(_Timer_val_max+2)& (0+255),b
  2267   004C80  0E00               	movlw	0
  2268   004C82  6F7B               	movwf	(_Timer_val_max+3)& (0+255),b
  2269   004C84                     
  2270                           ; BSR set to: 1
  2271                           ;main.c: 12:     Measured_Period = (unsigned long)(1e6/50);
  2272   004C84  0E20               	movlw	32
  2273   004C86  6F84               	movwf	_Measured_Period& (0+255),b
  2274   004C88  0E4E               	movlw	78
  2275   004C8A  6F85               	movwf	(_Measured_Period+1)& (0+255),b
  2276   004C8C  0E00               	movlw	0
  2277   004C8E  6F86               	movwf	(_Measured_Period+2)& (0+255),b
  2278   004C90  0E00               	movlw	0
  2279   004C92  6F87               	movwf	(_Measured_Period+3)& (0+255),b
  2280   004C94                     l10694:
  2281                           
  2282                           ;main.c: 14:         GetTimerVal();
  2283   004C94  EC3B  F021         	call	_GetTimerVal	;wreg free
  2284   004C98                     
  2285                           ;main.c: 15:         _Bool is_overflow_timer = (Tmi[0]< Timer_val_min || Tmi[1]< Timer_v
      +                          al_min || Tmi[0] > Timer_val_max || Tmi[1] > Timer_val_max);
  2286   004C98  0E01               	movlw	1
  2287   004C9A  0101               	movlb	1	; () banked
  2288   004C9C  6FFD               	movwf	_main$186& (0+255),b
  2289   004C9E                     
  2290                           ; BSR set to: 1
  2291   004C9E  517C               	movf	_Timer_val_min& (0+255),w,b
  2292   004CA0  5D60               	subwf	_Tmi& (0+255),w,b
  2293   004CA2  517D               	movf	(_Timer_val_min+1)& (0+255),w,b
  2294   004CA4  5961               	subwfb	(_Tmi+1)& (0+255),w,b
  2295   004CA6  517E               	movf	(_Timer_val_min+2)& (0+255),w,b
  2296   004CA8  5962               	subwfb	(_Tmi+2)& (0+255),w,b
  2297   004CAA  517F               	movf	(_Timer_val_min+3)& (0+255),w,b
  2298   004CAC  5963               	subwfb	(_Tmi+3)& (0+255),w,b
  2299   004CAE  A0D8               	btfss	status,0,c
  2300   004CB0  EF5C  F026         	goto	u13181
  2301   004CB4  EF5E  F026         	goto	u13180
  2302   004CB8                     u13181:
  2303   004CB8  EF8D  F026         	goto	l99
  2304   004CBC                     u13180:
  2305   004CBC                     
  2306                           ; BSR set to: 1
  2307   004CBC  517C               	movf	_Timer_val_min& (0+255),w,b
  2308   004CBE  5D64               	subwf	(_Tmi+4)& (0+255),w,b
  2309   004CC0  517D               	movf	(_Timer_val_min+1)& (0+255),w,b
  2310   004CC2  5965               	subwfb	(_Tmi+5)& (0+255),w,b
  2311   004CC4  517E               	movf	(_Timer_val_min+2)& (0+255),w,b
  2312   004CC6  5966               	subwfb	(_Tmi+6)& (0+255),w,b
  2313   004CC8  517F               	movf	(_Timer_val_min+3)& (0+255),w,b
  2314   004CCA  5967               	subwfb	(_Tmi+7)& (0+255),w,b
  2315   004CCC  A0D8               	btfss	status,0,c
  2316   004CCE  EF6B  F026         	goto	u13191
  2317   004CD2  EF6D  F026         	goto	u13190
  2318   004CD6                     u13191:
  2319   004CD6  EF8D  F026         	goto	l99
  2320   004CDA                     u13190:
  2321   004CDA                     
  2322                           ; BSR set to: 1
  2323   004CDA  5160               	movf	_Tmi& (0+255),w,b
  2324   004CDC  5D78               	subwf	_Timer_val_max& (0+255),w,b
  2325   004CDE  5161               	movf	(_Tmi+1)& (0+255),w,b
  2326   004CE0  5979               	subwfb	(_Timer_val_max+1)& (0+255),w,b
  2327   004CE2  5162               	movf	(_Tmi+2)& (0+255),w,b
  2328   004CE4  597A               	subwfb	(_Timer_val_max+2)& (0+255),w,b
  2329   004CE6  5163               	movf	(_Tmi+3)& (0+255),w,b
  2330   004CE8  597B               	subwfb	(_Timer_val_max+3)& (0+255),w,b
  2331   004CEA  A0D8               	btfss	status,0,c
  2332   004CEC  EF7A  F026         	goto	u13201
  2333   004CF0  EF7C  F026         	goto	u13200
  2334   004CF4                     u13201:
  2335   004CF4  EF8D  F026         	goto	l99
  2336   004CF8                     u13200:
  2337   004CF8                     
  2338                           ; BSR set to: 1
  2339   004CF8  5164               	movf	(_Tmi+4)& (0+255),w,b
  2340   004CFA  5D78               	subwf	_Timer_val_max& (0+255),w,b
  2341   004CFC  5165               	movf	(_Tmi+5)& (0+255),w,b
  2342   004CFE  5979               	subwfb	(_Timer_val_max+1)& (0+255),w,b
  2343   004D00  5166               	movf	(_Tmi+6)& (0+255),w,b
  2344   004D02  597A               	subwfb	(_Timer_val_max+2)& (0+255),w,b
  2345   004D04  5167               	movf	(_Tmi+7)& (0+255),w,b
  2346   004D06  597B               	subwfb	(_Timer_val_max+3)& (0+255),w,b
  2347   004D08  A0D8               	btfss	status,0,c
  2348   004D0A  EF89  F026         	goto	u13211
  2349   004D0E  EF8B  F026         	goto	u13210
  2350   004D12                     u13211:
  2351   004D12  EF8D  F026         	goto	l99
  2352   004D16                     u13210:
  2353   004D16                     
  2354                           ; BSR set to: 1
  2355   004D16  0E00               	movlw	0
  2356   004D18  6FFD               	movwf	_main$186& (0+255),b
  2357   004D1A                     l99:
  2358                           
  2359                           ; BSR set to: 1
  2360   004D1A  51FD               	movf	_main$186& (0+255),w,b
  2361   004D1C  A4D8               	btfss	status,2,c
  2362   004D1E  EF93  F026         	goto	u13221
  2363   004D22  EF96  F026         	goto	u13220
  2364   004D26                     u13221:
  2365   004D26  0E01               	movlw	1
  2366   004D28  EF97  F026         	goto	u13230
  2367   004D2C                     u13220:
  2368   004D2C  0E00               	movlw	0
  2369   004D2E                     u13230:
  2370   004D2E  6FFC               	movwf	main@is_overflow_timer& (0+255),b
  2371                           
  2372                           ;main.c: 16:         if(is_overflow_timer){
  2373   004D30  51FC               	movf	main@is_overflow_timer& (0+255),w,b
  2374   004D32  B4D8               	btfsc	status,2,c
  2375   004D34  EF9E  F026         	goto	u13241
  2376   004D38  EFA0  F026         	goto	u13240
  2377   004D3C                     u13241:
  2378   004D3C  EFE9  F026         	goto	l10732
  2379   004D40                     u13240:
  2380   004D40                     
  2381                           ; BSR set to: 1
  2382                           ;main.c: 17:             ++RangeCountover;
  2383   004D40  2BB4               	incf	_RangeCountover& (0+255),f,b
  2384   004D42                     
  2385                           ; BSR set to: 1
  2386                           ;main.c: 18:             if(RangeCountover == 10){
  2387   004D42  0E0A               	movlw	10
  2388   004D44  19B4               	xorwf	_RangeCountover& (0+255),w,b
  2389   004D46  A4D8               	btfss	status,2,c
  2390   004D48  EFA8  F026         	goto	u13251
  2391   004D4C  EFAA  F026         	goto	u13250
  2392   004D50                     u13251:
  2393   004D50  EFC1  F026         	goto	l10720
  2394   004D54                     u13250:
  2395   004D54                     
  2396                           ; BSR set to: 1
  2397                           ;main.c: 19:                 RangeCountover=100;
  2398   004D54  0E64               	movlw	100
  2399   004D56  6FB4               	movwf	_RangeCountover& (0+255),b
  2400   004D58                     
  2401                           ; BSR set to: 1
  2402                           ;main.c: 21:                 if(1 == 1){
  2403   004D58  ECB8  F03C         	call	_PrintNoData	;wreg free
  2404   004D5C                     
  2405                           ;main.c: 22:                     count=0;
  2406   004D5C  0E00               	movlw	0
  2407   004D5E  0101               	movlb	1	; () banked
  2408   004D60  6FA0               	movwf	_count& (0+255),b
  2409   004D62  0E00               	movlw	0
  2410   004D64  6FA1               	movwf	(_count+1)& (0+255),b
  2411   004D66  0E00               	movlw	0
  2412   004D68  6FA2               	movwf	(_count+2)& (0+255),b
  2413   004D6A  0E00               	movlw	0
  2414   004D6C  6FA3               	movwf	(_count+3)& (0+255),b
  2415   004D6E                     
  2416                           ; BSR set to: 1
  2417                           ;main.c: 23:                     Heart_Rate_Count=0;
  2418   004D6E  0E00               	movlw	0
  2419   004D70  6F9C               	movwf	_Heart_Rate_Count& (0+255),b
  2420   004D72  0E00               	movlw	0
  2421   004D74  6F9D               	movwf	(_Heart_Rate_Count+1)& (0+255),b
  2422   004D76  0E00               	movlw	0
  2423   004D78  6F9E               	movwf	(_Heart_Rate_Count+2)& (0+255),b
  2424   004D7A  0E00               	movlw	0
  2425   004D7C  6F9F               	movwf	(_Heart_Rate_Count+3)& (0+255),b
  2426   004D7E  EF4A  F026         	goto	l10694
  2427   004D82                     l10720:
  2428                           
  2429                           ; BSR set to: 1
  2430   004D82  0E63               	movlw	99
  2431   004D84  65B4               	cpfsgt	_RangeCountover& (0+255),b
  2432   004D86  EFC7  F026         	goto	u13261
  2433   004D8A  EFC9  F026         	goto	u13260
  2434   004D8E                     u13261:
  2435   004D8E  EF3D  F027         	goto	l105
  2436   004D92                     u13260:
  2437   004D92                     
  2438                           ; BSR set to: 1
  2439                           ;main.c: 27:                 RangeCountover=100;
  2440   004D92  0E64               	movlw	100
  2441   004D94  6FB4               	movwf	_RangeCountover& (0+255),b
  2442   004D96                     
  2443                           ; BSR set to: 1
  2444                           ;main.c: 28:                 LEDChangeState(1);
  2445   004D96  0E01               	movlw	1
  2446   004D98  ECB0  F03A         	call	_LEDChangeState
  2447   004D9C                     
  2448                           ;main.c: 29:                 _delay((unsigned long)((10)*(8000000/4000.0)));
  2449   004D9C  0E1A               	movlw	26
  2450   004D9E  0100               	movlb	0	; () banked
  2451   004DA0  6FFD               	movwf	??_main& (0+255),b
  2452   004DA2  0EF8               	movlw	248
  2453   004DA4                     u13307:
  2454   004DA4  2EE8               	decfsz	wreg,f,c
  2455   004DA6  D7FE               	bra	u13307
  2456   004DA8  2FFD               	decfsz	??_main& (0+255),f,b
  2457   004DAA  D7FC               	bra	u13307
  2458   004DAC  0000               	nop	
  2459   004DAE                     
  2460                           ;main.c: 30:                 LEDChangeState(2);
  2461   004DAE  0E02               	movlw	2
  2462   004DB0  ECB0  F03A         	call	_LEDChangeState
  2463   004DB4                     
  2464                           ;main.c: 31:                 _delay((unsigned long)((1000)*(8000000/4000.0)));
  2465   004DB4  0E0B               	movlw	11
  2466   004DB6  0100               	movlb	0	; () banked
  2467   004DB8  6FFE               	movwf	(??_main+1)& (0+255),b
  2468   004DBA  0E26               	movlw	38
  2469   004DBC  6FFD               	movwf	??_main& (0+255),b
  2470   004DBE  0E5D               	movlw	93
  2471   004DC0                     u13317:
  2472   004DC0  2EE8               	decfsz	wreg,f,c
  2473   004DC2  D7FE               	bra	u13317
  2474   004DC4  2FFD               	decfsz	??_main& (0+255),f,b
  2475   004DC6  D7FC               	bra	u13317
  2476   004DC8  2FFE               	decfsz	(??_main+1)& (0+255),f,b
  2477   004DCA  D7FA               	bra	u13317
  2478   004DCC  D000               	nop2	
  2479   004DCE  EF4A  F026         	goto	l10694
  2480   004DD2                     l10732:
  2481                           
  2482                           ; BSR set to: 1
  2483                           ;main.c: 35:             RangeCountover=0;
  2484   004DD2  0E00               	movlw	0
  2485   004DD4  6FB4               	movwf	_RangeCountover& (0+255),b
  2486   004DD6                     
  2487                           ; BSR set to: 1
  2488                           ;main.c: 36:             AbsorptionCoefficentCalc();
  2489   004DD6  EC13  F019         	call	_AbsorptionCoefficentCalc	;wreg free
  2490   004DDA                     
  2491                           ;main.c: 37:             TimerPeriodCheck();
  2492   004DDA  ECE0  F02B         	call	_TimerPeriodCheck	;wreg free
  2493   004DDE                     
  2494                           ;main.c: 38:             if(Period==1){
  2495   004DDE  0101               	movlb	1	; () banked
  2496   004DE0  05B2               	decf	_Period& (0+255),w,b
  2497   004DE2  A4D8               	btfss	status,2,c
  2498   004DE4  EFF6  F026         	goto	u13271
  2499   004DE8  EFF8  F026         	goto	u13270
  2500   004DEC                     u13271:
  2501   004DEC  EF32  F027         	goto	l10754
  2502   004DF0                     u13270:
  2503   004DF0                     
  2504                           ; BSR set to: 1
  2505                           ;main.c: 39:                 HeartRateCalc();
  2506   004DF0  EC36  F029         	call	_HeartRateCalc	;wreg free
  2507   004DF4                     
  2508                           ;main.c: 40:                 OxygenSPO2Calc();
  2509   004DF4  EC40  F01B         	call	_OxygenSPO2Calc	;wreg free
  2510   004DF8                     
  2511                           ;main.c: 41:                 ++Heart_Rate_Count;
  2512   004DF8  0E01               	movlw	1
  2513   004DFA  0101               	movlb	1	; () banked
  2514   004DFC  279C               	addwf	_Heart_Rate_Count& (0+255),f,b
  2515   004DFE  0E00               	movlw	0
  2516   004E00  239D               	addwfc	(_Heart_Rate_Count+1)& (0+255),f,b
  2517   004E02  239E               	addwfc	(_Heart_Rate_Count+2)& (0+255),f,b
  2518   004E04  239F               	addwfc	(_Heart_Rate_Count+3)& (0+255),f,b
  2519   004E06                     
  2520                           ; BSR set to: 1
  2521                           ;main.c: 42:                 MinMaxValReset();
  2522   004E06  EC6A  F038         	call	_MinMaxValReset	;wreg free
  2523   004E0A                     
  2524                           ;main.c: 43:                 if(Heart_Rate_Count > 4){
  2525   004E0A  0101               	movlb	1	; () banked
  2526   004E0C  519F               	movf	(_Heart_Rate_Count+3)& (0+255),w,b
  2527   004E0E  119E               	iorwf	(_Heart_Rate_Count+2)& (0+255),w,b
  2528   004E10  119D               	iorwf	(_Heart_Rate_Count+1)& (0+255),w,b
  2529   004E12  E109               	bnz	u13280
  2530   004E14  0E05               	movlw	5
  2531   004E16  5D9C               	subwf	_Heart_Rate_Count& (0+255),w,b
  2532   004E18  A0D8               	btfss	status,0,c
  2533   004E1A  EF11  F027         	goto	u13281
  2534   004E1E  EF13  F027         	goto	u13280
  2535   004E22                     u13281:
  2536   004E22  EF32  F027         	goto	l10754
  2537   004E26                     u13280:
  2538   004E26                     
  2539                           ; BSR set to: 1
  2540                           ;main.c: 44:                     if(SpO2_value < 90){
  2541   004E26  C1A4  F084         	movff	_SpO2_value,___flge@ff1
  2542   004E2A  C1A5  F085         	movff	_SpO2_value+1,___flge@ff1+1
  2543   004E2E  C1A6  F086         	movff	_SpO2_value+2,___flge@ff1+2
  2544   004E32  C1A7  F087         	movff	_SpO2_value+3,___flge@ff1+3
  2545   004E36  0E00               	movlw	0
  2546   004E38  0100               	movlb	0	; () banked
  2547   004E3A  6F88               	movwf	___flge@ff2& (0+255),b
  2548   004E3C  0E00               	movlw	0
  2549   004E3E  6F89               	movwf	(___flge@ff2+1)& (0+255),b
  2550   004E40  0EB4               	movlw	180
  2551   004E42  6F8A               	movwf	(___flge@ff2+2)& (0+255),b
  2552   004E44  0E42               	movlw	66
  2553   004E46  6F8B               	movwf	(___flge@ff2+3)& (0+255),b
  2554   004E48  EC1C  F033         	call	___flge	;wreg free
  2555   004E4C  0100               	movlb	0	; () banked
  2556   004E4E  B0D8               	btfsc	status,0,c
  2557   004E50  EF2C  F027         	goto	u13291
  2558   004E54  EF2E  F027         	goto	u13290
  2559   004E58                     u13291:
  2560   004E58  EF31  F027         	goto	l108
  2561   004E5C                     u13290:
  2562   004E5C                     
  2563                           ; BSR set to: 0
  2564                           ;main.c: 45:                         PORTBbits.RB5 = 1;
  2565   004E5C  8A81               	bsf	129,5,c	;volatile
  2566                           
  2567                           ;main.c: 46:                     }
  2568   004E5E  EF32  F027         	goto	l10754
  2569   004E62                     l108:
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;main.c: 48:                         PORTBbits.RB5 = 0;
  2573   004E62  9A81               	bcf	129,5,c	;volatile
  2574   004E64                     l10754:
  2575                           
  2576                           ;main.c: 52:             DataPrinting();
  2577   004E64  ECFF  F024         	call	_DataPrinting	;wreg free
  2578   004E68                     
  2579                           ;main.c: 53:             ++count;
  2580   004E68  0E01               	movlw	1
  2581   004E6A  0101               	movlb	1	; () banked
  2582   004E6C  27A0               	addwf	_count& (0+255),f,b
  2583   004E6E  0E00               	movlw	0
  2584   004E70  23A1               	addwfc	(_count+1)& (0+255),f,b
  2585   004E72  23A2               	addwfc	(_count+2)& (0+255),f,b
  2586   004E74  23A3               	addwfc	(_count+3)& (0+255),f,b
  2587   004E76  EF4A  F026         	goto	l10694
  2588   004E7A                     l105:
  2589                           
  2590                           ; BSR set to: 1
  2591   004E7A  EF4A  F026         	goto	l10694
  2592   004E7E  EF07  F000         	goto	start
  2593   004E82                     __end_of_main:
  2594                           	callstack 0
  2595                           
  2596 ;; *************** function _setupTimer *****************
  2597 ;; Defined at:
  2598 ;;		line 107 in file "functions.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;Total ram usage:        0 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 1
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_main
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text1
  2627   00798E                     __ptext1:
  2628                           	callstack 0
  2629   00798E                     _setupTimer:
  2630                           	callstack 29
  2631   00798E                     
  2632                           ;functions.c: 108:     T1CON = 0x80;
  2633   00798E  0E80               	movlw	128
  2634   007990  6ECD               	movwf	205,c	;volatile
  2635                           
  2636                           ;functions.c: 109:     TMR1H = 0x00;
  2637   007992  0E00               	movlw	0
  2638   007994  6ECF               	movwf	207,c	;volatile
  2639                           
  2640                           ;functions.c: 110:     TMR1L = 0x00;
  2641   007996  0E00               	movlw	0
  2642   007998  6ECE               	movwf	206,c	;volatile
  2643   00799A                     
  2644                           ;functions.c: 111:     T1CONbits.TMR1ON = 1;
  2645   00799A  80CD               	bsf	205,0,c	;volatile
  2646   00799C                     
  2647                           ;functions.c: 112:     TMR1IF = 0;
  2648   00799C  909E               	bcf	3998,0,c	;volatile
  2649   00799E                     
  2650                           ;functions.c: 113:     TMR1IE = 1;
  2651   00799E  809D               	bsf	3997,0,c	;volatile
  2652   0079A0                     
  2653                           ;functions.c: 114:     PEIE = 1;
  2654   0079A0  8CF2               	bsf	4082,6,c	;volatile
  2655   0079A2                     
  2656                           ;functions.c: 115:     GIE = 1;
  2657   0079A2  8EF2               	bsf	4082,7,c	;volatile
  2658   0079A4  0012               	return		;funcret
  2659   0079A6                     __end_of_setupTimer:
  2660                           	callstack 0
  2661                           
  2662 ;; *************** function _setup *****************
  2663 ;; Defined at:
  2664 ;;		line 57 in file "functions.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;Total ram usage:        0 bytes
  2683 ;; Hardware stack levels used: 1
  2684 ;; Hardware stack levels required when called: 14
  2685 ;; This function calls:
  2686 ;;		_ConfigurationCheck
  2687 ;;		_DeviceInitialization
  2688 ;;		_FormatForPrint
  2689 ;;		_MinMaxValReset
  2690 ;;		_StartPrinting
  2691 ;;		_UART1_Init
  2692 ;; This function is called by:
  2693 ;;		_main
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text2
  2698   0078D8                     __ptext2:
  2699                           	callstack 0
  2700   0078D8                     _setup:
  2701                           	callstack 16
  2702   0078D8                     
  2703                           ;functions.c: 58:     UART1_Init(9600);
  2704   0078D8  0E80               	movlw	128
  2705   0078DA  6E0E               	movwf	UART1_Init@baud_rate^0,c
  2706   0078DC  0E25               	movlw	37
  2707   0078DE  6E0F               	movwf	(UART1_Init@baud_rate+1)^0,c
  2708   0078E0  0E00               	movlw	0
  2709   0078E2  6E10               	movwf	(UART1_Init@baud_rate+2)^0,c
  2710   0078E4  0E00               	movlw	0
  2711   0078E6  6E11               	movwf	(UART1_Init@baud_rate+3)^0,c
  2712   0078E8  EC84  F03A         	call	_UART1_Init	;wreg free
  2713   0078EC                     
  2714                           ;functions.c: 59:     DeviceInitialization();
  2715   0078EC  EC10  F032         	call	_DeviceInitialization	;wreg free
  2716   0078F0                     
  2717                           ;functions.c: 60:     MinMaxValReset();
  2718   0078F0  EC6A  F038         	call	_MinMaxValReset	;wreg free
  2719   0078F4                     
  2720                           ;functions.c: 61:     StartPrinting();
  2721   0078F4  EC81  F03C         	call	_StartPrinting	;wreg free
  2722   0078F8                     
  2723                           ;functions.c: 62:     ConfigurationCheck();
  2724   0078F8  EC3F  F039         	call	_ConfigurationCheck	;wreg free
  2725   0078FC                     
  2726                           ;functions.c: 63:     FormatForPrint();
  2727   0078FC  EC40  F03C         	call	_FormatForPrint	;wreg free
  2728   007900  0012               	return		;funcret
  2729   007902                     __end_of_setup:
  2730                           	callstack 0
  2731                           
  2732 ;; *************** function _UART1_Init *****************
  2733 ;; Defined at:
  2734 ;;		line 23 in file "functions.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  baud_rate       4   13[COMRAM] unsigned long 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;Total ram usage:        8 bytes
  2753 ;; Hardware stack levels used: 1
  2754 ;; Hardware stack levels required when called: 2
  2755 ;; This function calls:
  2756 ;;		___lldiv
  2757 ;; This function is called by:
  2758 ;;		_setup
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text3
  2763   007508                     __ptext3:
  2764                           	callstack 0
  2765   007508                     _UART1_Init:
  2766                           	callstack 27
  2767   007508                     
  2768                           ;functions.c: 24:     TRISC6 = 0;
  2769   007508  9C94               	bcf	3988,6,c	;volatile
  2770                           
  2771                           ;functions.c: 25:     TRISC7 = 1;
  2772   00750A  8E94               	bsf	3988,7,c	;volatile
  2773   00750C                     
  2774                           ;functions.c: 27:     SPBRG1 = (unsigned char)((8000000 / (baud_rate * 16UL)) - 1);
  2775   00750C  0E00               	movlw	0
  2776   00750E  6E01               	movwf	___lldiv@dividend^0,c
  2777   007510  0E12               	movlw	18
  2778   007512  6E02               	movwf	(___lldiv@dividend+1)^0,c
  2779   007514  0E7A               	movlw	122
  2780   007516  6E03               	movwf	(___lldiv@dividend+2)^0,c
  2781   007518  0E00               	movlw	0
  2782   00751A  6E04               	movwf	(___lldiv@dividend+3)^0,c
  2783   00751C  C00E  F012         	movff	UART1_Init@baud_rate,??_UART1_Init
  2784   007520  C00F  F013         	movff	UART1_Init@baud_rate+1,??_UART1_Init+1
  2785   007524  C010  F014         	movff	UART1_Init@baud_rate+2,??_UART1_Init+2
  2786   007528  C011  F015         	movff	UART1_Init@baud_rate+3,??_UART1_Init+3
  2787   00752C  0E04               	movlw	4
  2788   00752E                     u9085:
  2789   00752E  90D8               	bcf	status,0,c
  2790   007530  3612               	rlcf	??_UART1_Init^0,f,c
  2791   007532  3613               	rlcf	(??_UART1_Init+1)^0,f,c
  2792   007534  3614               	rlcf	(??_UART1_Init+2)^0,f,c
  2793   007536  3615               	rlcf	(??_UART1_Init+3)^0,f,c
  2794   007538  2EE8               	decfsz	wreg,f,c
  2795   00753A  EF97  F03A         	goto	u9085
  2796   00753E  C012  F005         	movff	??_UART1_Init,___lldiv@divisor
  2797   007542  C013  F006         	movff	??_UART1_Init+1,___lldiv@divisor+1
  2798   007546  C014  F007         	movff	??_UART1_Init+2,___lldiv@divisor+2
  2799   00754A  C015  F008         	movff	??_UART1_Init+3,___lldiv@divisor+3
  2800   00754E  EC18  F038         	call	___lldiv	;wreg free
  2801   007552  0401               	decf	?___lldiv^0,w,c
  2802   007554  6EAF               	movwf	175,c	;volatile
  2803   007556                     
  2804                           ;functions.c: 29:     TXSTA1bits.BRGH = 0;
  2805   007556  94AC               	bcf	172,2,c	;volatile
  2806   007558                     
  2807                           ;functions.c: 30:     TXSTA1bits.TXEN = 1;
  2808   007558  8AAC               	bsf	172,5,c	;volatile
  2809   00755A                     
  2810                           ;functions.c: 31:     TXSTA1bits.SYNC = 0;
  2811   00755A  98AC               	bcf	172,4,c	;volatile
  2812   00755C                     
  2813                           ;functions.c: 32:     RCSTA1bits.SPEN = 1;
  2814   00755C  8EAB               	bsf	171,7,c	;volatile
  2815   00755E  0012               	return		;funcret
  2816   007560                     __end_of_UART1_Init:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function ___lldiv *****************
  2820 ;; Defined at:
  2821 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__lldiv.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  dividend        4    0[COMRAM] unsigned long 
  2824 ;;  divisor         4    4[COMRAM] unsigned long 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  quotient        4    8[COMRAM] unsigned long 
  2827 ;;  counter         1   12[COMRAM] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  4    0[COMRAM] unsigned long 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2837 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;Total ram usage:       13 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 1
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_UART1_Init
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text4
  2852   007030                     __ptext4:
  2853                           	callstack 0
  2854   007030                     ___lldiv:
  2855                           	callstack 27
  2856   007030  0E00               	movlw	0
  2857   007032  6E09               	movwf	___lldiv@quotient^0,c
  2858   007034  0E00               	movlw	0
  2859   007036  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  2860   007038  0E00               	movlw	0
  2861   00703A  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  2862   00703C  0E00               	movlw	0
  2863   00703E  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  2864   007040  5005               	movf	___lldiv@divisor^0,w,c
  2865   007042  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  2866   007044  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  2867   007046  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  2868   007048  B4D8               	btfsc	status,2,c
  2869   00704A  EF29  F038         	goto	u9031
  2870   00704E  EF2B  F038         	goto	u9030
  2871   007052                     u9031:
  2872   007052  EF61  F038         	goto	l483
  2873   007056                     u9030:
  2874   007056  0E01               	movlw	1
  2875   007058  6E0D               	movwf	___lldiv@counter^0,c
  2876   00705A  EF35  F038         	goto	l7720
  2877   00705E                     l7718:
  2878   00705E  90D8               	bcf	status,0,c
  2879   007060  3605               	rlcf	___lldiv@divisor^0,f,c
  2880   007062  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  2881   007064  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  2882   007066  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  2883   007068  2A0D               	incf	___lldiv@counter^0,f,c
  2884   00706A                     l7720:
  2885   00706A  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  2886   00706C  EF3A  F038         	goto	u9041
  2887   007070  EF3C  F038         	goto	u9040
  2888   007074                     u9041:
  2889   007074  EF2F  F038         	goto	l7718
  2890   007078                     u9040:
  2891   007078                     l7722:
  2892   007078  90D8               	bcf	status,0,c
  2893   00707A  3609               	rlcf	___lldiv@quotient^0,f,c
  2894   00707C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  2895   00707E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  2896   007080  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  2897   007082  5005               	movf	___lldiv@divisor^0,w,c
  2898   007084  5C01               	subwf	___lldiv@dividend^0,w,c
  2899   007086  5006               	movf	(___lldiv@divisor+1)^0,w,c
  2900   007088  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  2901   00708A  5007               	movf	(___lldiv@divisor+2)^0,w,c
  2902   00708C  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  2903   00708E  5008               	movf	(___lldiv@divisor+3)^0,w,c
  2904   007090  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  2905   007092  A0D8               	btfss	status,0,c
  2906   007094  EF4E  F038         	goto	u9051
  2907   007098  EF50  F038         	goto	u9050
  2908   00709C                     u9051:
  2909   00709C  EF59  F038         	goto	l7730
  2910   0070A0                     u9050:
  2911   0070A0  5005               	movf	___lldiv@divisor^0,w,c
  2912   0070A2  5E01               	subwf	___lldiv@dividend^0,f,c
  2913   0070A4  5006               	movf	(___lldiv@divisor+1)^0,w,c
  2914   0070A6  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  2915   0070A8  5007               	movf	(___lldiv@divisor+2)^0,w,c
  2916   0070AA  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  2917   0070AC  5008               	movf	(___lldiv@divisor+3)^0,w,c
  2918   0070AE  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  2919   0070B0  8009               	bsf	___lldiv@quotient^0,0,c
  2920   0070B2                     l7730:
  2921   0070B2  90D8               	bcf	status,0,c
  2922   0070B4  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  2923   0070B6  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  2924   0070B8  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  2925   0070BA  3205               	rrcf	___lldiv@divisor^0,f,c
  2926   0070BC  2E0D               	decfsz	___lldiv@counter^0,f,c
  2927   0070BE  EF3C  F038         	goto	l7722
  2928   0070C2                     l483:
  2929   0070C2  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2930   0070C6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2931   0070CA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2932   0070CE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2933   0070D2  0012               	return		;funcret
  2934   0070D4                     __end_of___lldiv:
  2935                           	callstack 0
  2936                           
  2937 ;; *************** function _StartPrinting *****************
  2938 ;; Defined at:
  2939 ;;		line 335 in file "functions.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;Total ram usage:        2 bytes
  2958 ;; Hardware stack levels used: 1
  2959 ;; Hardware stack levels required when called: 10
  2960 ;; This function calls:
  2961 ;;		_UART1_SendFormatted
  2962 ;; This function is called by:
  2963 ;;		_setup
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text5
  2968   007902                     __ptext5:
  2969                           	callstack 0
  2970   007902                     _StartPrinting:
  2971                           	callstack 19
  2972   007902                     
  2973                           ;functions.c: 336:   UART1_SendFormatted("PulseOximeter\n");
  2974   007902  0E58               	movlw	low STR_26
  2975   007904  0101               	movlb	1	; () banked
  2976   007906  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  2977   007908  0EFF               	movlw	high STR_26
  2978   00790A  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  2979   00790C  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  2980   007910                     
  2981                           ;functions.c: 337:   _delay((unsigned long)((3000)*(8000000/4000.0)));
  2982   007910  0E1F               	movlw	31
  2983   007912  0100               	movlb	0	; () banked
  2984   007914  6FFC               	movwf	(??_StartPrinting+1)& (0+255),b
  2985   007916  0E71               	movlw	113
  2986   007918  6FFB               	movwf	??_StartPrinting& (0+255),b
  2987   00791A  0E1E               	movlw	30
  2988   00791C                     u13327:
  2989   00791C  2EE8               	decfsz	wreg,f,c
  2990   00791E  D7FE               	bra	u13327
  2991   007920  2FFB               	decfsz	??_StartPrinting& (0+255),f,b
  2992   007922  D7FC               	bra	u13327
  2993   007924  2FFC               	decfsz	(??_StartPrinting+1)& (0+255),f,b
  2994   007926  D7FA               	bra	u13327
  2995   007928  0000               	nop	
  2996   00792A  0012               	return		;funcret
  2997   00792C                     __end_of_StartPrinting:
  2998                           	callstack 0
  2999                           
  3000 ;; *************** function _MinMaxValReset *****************
  3001 ;; Defined at:
  3002 ;;		line 379 in file "functions.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  i               2    2[COMRAM] int 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;Total ram usage:        4 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 1
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_main
  3027 ;;		_setup
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text6
  3032   0070D4                     __ptext6:
  3033                           	callstack 0
  3034   0070D4                     _MinMaxValReset:
  3035                           	callstack 28
  3036   0070D4                     
  3037                           ;functions.c: 380:   for (int i = 0; i < 2; ++i) {
  3038   0070D4  0E00               	movlw	0
  3039   0070D6  6E04               	movwf	(MinMaxValReset@i+1)^0,c
  3040   0070D8  0E00               	movlw	0
  3041   0070DA  6E03               	movwf	MinMaxValReset@i^0,c
  3042   0070DC                     l7740:
  3043                           
  3044                           ;functions.c: 381:     beta_MinMax[0][i] = 1e6;
  3045   0070DC  0E28               	movlw	low _beta_MinMax
  3046   0070DE  6E01               	movwf	??_MinMaxValReset^0,c
  3047   0070E0  0E01               	movlw	high _beta_MinMax
  3048   0070E2  6E02               	movwf	(??_MinMaxValReset+1)^0,c
  3049   0070E4  90D8               	bcf	status,0,c
  3050   0070E6  3403               	rlcf	MinMaxValReset@i^0,w,c
  3051   0070E8  6ED9               	movwf	fsr2l,c
  3052   0070EA  3404               	rlcf	(MinMaxValReset@i+1)^0,w,c
  3053   0070EC  6EDA               	movwf	fsr2h,c
  3054   0070EE  90D8               	bcf	status,0,c
  3055   0070F0  36D9               	rlcf	fsr2l,f,c
  3056   0070F2  36DA               	rlcf	fsr2h,f,c
  3057   0070F4  5001               	movf	??_MinMaxValReset^0,w,c
  3058   0070F6  26D9               	addwf	fsr2l,f,c
  3059   0070F8  5002               	movf	(??_MinMaxValReset+1)^0,w,c
  3060   0070FA  22DA               	addwfc	fsr2h,f,c
  3061   0070FC  0E00               	movlw	0
  3062   0070FE  6EDE               	movwf	postinc2,c
  3063   007100  0E24               	movlw	36
  3064   007102  6EDE               	movwf	postinc2,c
  3065   007104  0E74               	movlw	116
  3066   007106  6EDE               	movwf	postinc2,c
  3067   007108  0E49               	movlw	73
  3068   00710A  6EDD               	movwf	postdec2,c
  3069                           
  3070                           ;functions.c: 382:     beta_MinMax[1][i] = -1e6;
  3071   00710C  0E28               	movlw	low _beta_MinMax
  3072   00710E  6E01               	movwf	??_MinMaxValReset^0,c
  3073   007110  0E01               	movlw	high _beta_MinMax
  3074   007112  6E02               	movwf	(??_MinMaxValReset+1)^0,c
  3075   007114  0E08               	movlw	8
  3076   007116  2601               	addwf	??_MinMaxValReset^0,f,c
  3077   007118  0E00               	movlw	0
  3078   00711A  2202               	addwfc	(??_MinMaxValReset+1)^0,f,c
  3079   00711C  90D8               	bcf	status,0,c
  3080   00711E  3403               	rlcf	MinMaxValReset@i^0,w,c
  3081   007120  6ED9               	movwf	fsr2l,c
  3082   007122  3404               	rlcf	(MinMaxValReset@i+1)^0,w,c
  3083   007124  6EDA               	movwf	fsr2h,c
  3084   007126  90D8               	bcf	status,0,c
  3085   007128  36D9               	rlcf	fsr2l,f,c
  3086   00712A  36DA               	rlcf	fsr2h,f,c
  3087   00712C  5001               	movf	??_MinMaxValReset^0,w,c
  3088   00712E  26D9               	addwf	fsr2l,f,c
  3089   007130  5002               	movf	(??_MinMaxValReset+1)^0,w,c
  3090   007132  22DA               	addwfc	fsr2h,f,c
  3091   007134  0E00               	movlw	0
  3092   007136  6EDE               	movwf	postinc2,c
  3093   007138  0E24               	movlw	36
  3094   00713A  6EDE               	movwf	postinc2,c
  3095   00713C  0E74               	movlw	116
  3096   00713E  6EDE               	movwf	postinc2,c
  3097   007140  0EC9               	movlw	201
  3098   007142  6EDD               	movwf	postdec2,c
  3099   007144                     
  3100                           ;functions.c: 383:   }
  3101   007144  4A03               	infsnz	MinMaxValReset@i^0,f,c
  3102   007146  2A04               	incf	(MinMaxValReset@i+1)^0,f,c
  3103   007148  BE04               	btfsc	(MinMaxValReset@i+1)^0,7,c
  3104   00714A  EFB0  F038         	goto	u9061
  3105   00714E  5004               	movf	(MinMaxValReset@i+1)^0,w,c
  3106   007150  E109               	bnz	u9060
  3107   007152  0E02               	movlw	2
  3108   007154  5C03               	subwf	MinMaxValReset@i^0,w,c
  3109   007156  A0D8               	btfss	status,0,c
  3110   007158  EFB0  F038         	goto	u9061
  3111   00715C  EFB2  F038         	goto	u9060
  3112   007160                     u9061:
  3113   007160  EF6E  F038         	goto	l7740
  3114   007164                     u9060:
  3115   007164  0012               	return		;funcret
  3116   007166                     __end_of_MinMaxValReset:
  3117                           	callstack 0
  3118                           
  3119 ;; *************** function _FormatForPrint *****************
  3120 ;; Defined at:
  3121 ;;		line 340 in file "functions.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;		None
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;Total ram usage:        0 bytes
  3140 ;; Hardware stack levels used: 1
  3141 ;; Hardware stack levels required when called: 10
  3142 ;; This function calls:
  3143 ;;		_UART1_SendFormatted
  3144 ;; This function is called by:
  3145 ;;		_setup
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text7
  3150   007880                     __ptext7:
  3151                           	callstack 0
  3152   007880                     _FormatForPrint:
  3153                           	callstack 19
  3154   007880                     
  3155                           ;functions.c: 341:   UART1_SendFormatted("SpO2:    %%\n");
  3156   007880  0E91               	movlw	low STR_27
  3157   007882  0101               	movlb	1	; () banked
  3158   007884  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3159   007886  0EFF               	movlw	high STR_27
  3160   007888  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3161   00788A  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3162                           
  3163                           ;functions.c: 342:   UART1_SendFormatted("HR:      BPM\n");
  3164   00788E  0E75               	movlw	low STR_28
  3165   007890  0101               	movlb	1	; () banked
  3166   007892  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3167   007894  0EFF               	movlw	high STR_28
  3168   007896  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3169   007898  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3170   00789C                     
  3171                           ;functions.c: 347:     UART1_SendFormatted("IR,RED,SpO2,HR,,Period\n");
  3172   00789C  0E93               	movlw	low STR_30
  3173   00789E  0101               	movlb	1	; () banked
  3174   0078A0  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3175   0078A2  0EFE               	movlw	high STR_30
  3176   0078A4  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3177   0078A6  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3178   0078AA  0012               	return		;funcret
  3179   0078AC                     __end_of_FormatForPrint:
  3180                           	callstack 0
  3181                           
  3182 ;; *************** function _DeviceInitialization *****************
  3183 ;; Defined at:
  3184 ;;		line 234 in file "functions.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;		None
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;Total ram usage:        0 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; Hardware stack levels required when called: 10
  3205 ;; This function calls:
  3206 ;;		_LEDChangeState
  3207 ;;		_UART1_SendFormatted
  3208 ;;		_pinMode
  3209 ;; This function is called by:
  3210 ;;		_setup
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text8
  3215   006420                     __ptext8:
  3216                           	callstack 0
  3217   006420                     _DeviceInitialization:
  3218                           	callstack 19
  3219   006420                     
  3220                           ;functions.c: 236:   UART1_SendFormatted("Initializing Serial Communication...\n");
  3221   006420  0ED5               	movlw	low STR_3
  3222   006422  0101               	movlb	1	; () banked
  3223   006424  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3224   006426  0EFD               	movlw	high STR_3
  3225   006428  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3226   00642A  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3227                           
  3228                           ;functions.c: 237:   UART1_SendFormatted("Baud rate: %d\n", 9600);
  3229   00642E  0E49               	movlw	low STR_4
  3230   006430  0101               	movlb	1	; () banked
  3231   006432  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3232   006434  0EFF               	movlw	high STR_4
  3233   006436  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3234   006438  0E25               	movlw	37
  3235   00643A  6FD3               	movwf	(?_UART1_SendFormatted+3)& (0+255),b
  3236   00643C  0E80               	movlw	128
  3237   00643E  6FD2               	movwf	(?_UART1_SendFormatted+2)& (0+255),b
  3238   006440  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3239                           
  3240                           ;functions.c: 238:   UART1_SendFormatted("Setting pinMode for Buzzer, IRLED, REDLED, Cha
      +                          rge, SW1, SW2, and Detect...\n");
  3241   006444  0E4F               	movlw	low STR_5
  3242   006446  0101               	movlb	1	; () banked
  3243   006448  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3244   00644A  0EFD               	movlw	high STR_5
  3245   00644C  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3246   00644E  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3247   006452                     
  3248                           ;functions.c: 239:   pinMode(PORTBbits.RB5, 0);
  3249   006452  0E00               	movlw	0
  3250   006454  6E01               	movwf	pinMode@mode^0,c
  3251   006456  BA81               	btfsc	129,5,c	;volatile
  3252   006458  EF30  F032         	goto	u12921
  3253   00645C  EF33  F032         	goto	u12920
  3254   006460                     u12921:
  3255   006460  0E01               	movlw	1
  3256   006462  EF34  F032         	goto	u12926
  3257   006466                     u12920:
  3258   006466  0E00               	movlw	0
  3259   006468                     u12926:
  3260   006468  ECB3  F038         	call	_pinMode
  3261   00646C                     
  3262                           ;functions.c: 240:   UART1_SendFormatted("Initializing Buzzer...\n");
  3263   00646C  0E63               	movlw	low STR_6
  3264   00646E  0101               	movlb	1	; () banked
  3265   006470  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3266   006472  0EFE               	movlw	high STR_6
  3267   006474  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3268   006476  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3269   00647A                     
  3270                           ;functions.c: 241:   PORTBbits.RB5 = 0;
  3271   00647A  9A81               	bcf	129,5,c	;volatile
  3272                           
  3273                           ;functions.c: 242:   pinMode( PORTBbits.RB3, 0 );
  3274   00647C  0E00               	movlw	0
  3275   00647E  6E01               	movwf	pinMode@mode^0,c
  3276   006480  B681               	btfsc	129,3,c	;volatile
  3277   006482  EF45  F032         	goto	u12931
  3278   006486  EF48  F032         	goto	u12930
  3279   00648A                     u12931:
  3280   00648A  0E01               	movlw	1
  3281   00648C  EF49  F032         	goto	u12936
  3282   006490                     u12930:
  3283   006490  0E00               	movlw	0
  3284   006492                     u12936:
  3285   006492  ECB3  F038         	call	_pinMode
  3286   006496                     
  3287                           ;functions.c: 243:   UART1_SendFormatted("Initializing Detect...\n");
  3288   006496  0E7B               	movlw	low STR_7
  3289   006498  0101               	movlb	1	; () banked
  3290   00649A  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3291   00649C  0EFE               	movlw	high STR_7
  3292   00649E  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3293   0064A0  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3294   0064A4                     
  3295                           ;functions.c: 244:   pinMode( PORTBbits.RB1, 0 );
  3296   0064A4  0E00               	movlw	0
  3297   0064A6  6E01               	movwf	pinMode@mode^0,c
  3298   0064A8  B281               	btfsc	129,1,c	;volatile
  3299   0064AA  EF59  F032         	goto	u12941
  3300   0064AE  EF5C  F032         	goto	u12940
  3301   0064B2                     u12941:
  3302   0064B2  0E01               	movlw	1
  3303   0064B4  EF5D  F032         	goto	u12946
  3304   0064B8                     u12940:
  3305   0064B8  0E00               	movlw	0
  3306   0064BA                     u12946:
  3307   0064BA  ECB3  F038         	call	_pinMode
  3308                           
  3309                           ;functions.c: 245:   UART1_SendFormatted("Initializing Charge...\n");
  3310   0064BE  0E4B               	movlw	low STR_8
  3311   0064C0  0101               	movlb	1	; () banked
  3312   0064C2  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3313   0064C4  0EFE               	movlw	high STR_8
  3314   0064C6  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3315   0064C8  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3316   0064CC                     
  3317                           ;functions.c: 246:   pinMode( PORTBbits.RB7, 2);
  3318   0064CC  0E02               	movlw	2
  3319   0064CE  6E01               	movwf	pinMode@mode^0,c
  3320   0064D0  BE81               	btfsc	129,7,c	;volatile
  3321   0064D2  EF6D  F032         	goto	u12951
  3322   0064D6  EF70  F032         	goto	u12950
  3323   0064DA                     u12951:
  3324   0064DA  0E01               	movlw	1
  3325   0064DC  EF71  F032         	goto	u12956
  3326   0064E0                     u12950:
  3327   0064E0  0E00               	movlw	0
  3328   0064E2                     u12956:
  3329   0064E2  ECB3  F038         	call	_pinMode
  3330   0064E6                     
  3331                           ;functions.c: 247:   UART1_SendFormatted("Initializing SW1...\n");
  3332   0064E6  0EAB               	movlw	low STR_9
  3333   0064E8  0101               	movlb	1	; () banked
  3334   0064EA  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3335   0064EC  0EFE               	movlw	high STR_9
  3336   0064EE  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3337   0064F0  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3338                           
  3339                           ;functions.c: 248:   pinMode( PORTBbits.RB0, 1);
  3340   0064F4  0E01               	movlw	1
  3341   0064F6  6E01               	movwf	pinMode@mode^0,c
  3342   0064F8  B081               	btfsc	129,0,c	;volatile
  3343   0064FA  EF81  F032         	goto	u12961
  3344   0064FE  EF84  F032         	goto	u12960
  3345   006502                     u12961:
  3346   006502  0E01               	movlw	1
  3347   006504  EF85  F032         	goto	u12966
  3348   006508                     u12960:
  3349   006508  0E00               	movlw	0
  3350   00650A                     u12966:
  3351   00650A  ECB3  F038         	call	_pinMode
  3352   00650E                     
  3353                           ;functions.c: 249:   UART1_SendFormatted("Initializing Detect...\n");
  3354   00650E  0E7B               	movlw	low STR_7
  3355   006510  0101               	movlb	1	; () banked
  3356   006512  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3357   006514  0EFE               	movlw	high STR_7
  3358   006516  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3359   006518  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3360   00651C                     
  3361                           ;functions.c: 250:   UART1_SendFormatted("Setting LED state to 2...\n");
  3362   00651C  0EFB               	movlw	low STR_11
  3363   00651E  0101               	movlb	1	; () banked
  3364   006520  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3365   006522  0EFD               	movlw	high STR_11
  3366   006524  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3367   006526  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3368                           
  3369                           ;functions.c: 251:   LEDChangeState(2);
  3370   00652A  0E02               	movlw	2
  3371   00652C  ECB0  F03A         	call	_LEDChangeState
  3372   006530  0012               	return		;funcret
  3373   006532                     __end_of_DeviceInitialization:
  3374                           	callstack 0
  3375                           
  3376 ;; *************** function _pinMode *****************
  3377 ;; Defined at:
  3378 ;;		line 92 in file "functions.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  pin             1    wreg     unsigned char 
  3381 ;;  mode            1    0[COMRAM] unsigned char 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;  pin             1    3[COMRAM] unsigned char 
  3384 ;;  mask            1    4[COMRAM] unsigned char 
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3394 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;Total ram usage:        5 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; Hardware stack levels required when called: 1
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_DeviceInitialization
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text9
  3409   007166                     __ptext9:
  3410                           	callstack 0
  3411   007166                     _pinMode:
  3412                           	callstack 27
  3413                           
  3414                           ;incstack = 0
  3415                           ;pinMode@pin stored from wreg
  3416   007166  6E04               	movwf	pinMode@pin^0,c
  3417   007168                     
  3418                           ;functions.c: 93:     unsigned char mask = (unsigned char)(1 << pin);
  3419   007168  C004  F002         	movff	pinMode@pin,??_pinMode
  3420   00716C  0E01               	movlw	1
  3421   00716E  6E03               	movwf	(??_pinMode+1)^0,c
  3422   007170  2A02               	incf	??_pinMode^0,f,c
  3423   007172  EFBD  F038         	goto	u8924
  3424   007176                     u8925:
  3425   007176  90D8               	bcf	status,0,c
  3426   007178  3603               	rlcf	(??_pinMode+1)^0,f,c
  3427   00717A                     u8924:
  3428   00717A  2E02               	decfsz	??_pinMode^0,f,c
  3429   00717C  EFBB  F038         	goto	u8925
  3430   007180  5003               	movf	(??_pinMode+1)^0,w,c
  3431   007182  6E05               	movwf	pinMode@mask^0,c
  3432   007184                     
  3433                           ;functions.c: 95:     if (mode == 0) {
  3434   007184  5001               	movf	pinMode@mode^0,w,c
  3435   007186  A4D8               	btfss	status,2,c
  3436   007188  EFC8  F038         	goto	u8931
  3437   00718C  EFCA  F038         	goto	u8930
  3438   007190                     u8931:
  3439   007190  EFCF  F038         	goto	l7662
  3440   007194                     u8930:
  3441   007194                     
  3442                           ;functions.c: 96:         TRISB &= ~mask;
  3443   007194  5005               	movf	pinMode@mask^0,w,c	;volatile
  3444   007196  0AFF               	xorlw	255
  3445   007198  1693               	andwf	147,f,c	;volatile
  3446                           
  3447                           ;functions.c: 97:     } else if (mode == 1) {
  3448   00719A  EFFA  F038         	goto	l291
  3449   00719E                     l7662:
  3450   00719E  0401               	decf	pinMode@mode^0,w,c
  3451   0071A0  A4D8               	btfss	status,2,c
  3452   0071A2  EFD5  F038         	goto	u8941
  3453   0071A6  EFD7  F038         	goto	u8940
  3454   0071AA                     u8941:
  3455   0071AA  EFDB  F038         	goto	l7666
  3456   0071AE                     u8940:
  3457   0071AE                     
  3458                           ;functions.c: 98:         TRISB |= mask;
  3459   0071AE  5005               	movf	pinMode@mask^0,w,c	;volatile
  3460   0071B0  1293               	iorwf	147,f,c	;volatile
  3461                           
  3462                           ;functions.c: 99:     } else if (mode == 2) {
  3463   0071B2  EFFA  F038         	goto	l291
  3464   0071B6                     l7666:
  3465   0071B6  0E02               	movlw	2
  3466   0071B8  1801               	xorwf	pinMode@mode^0,w,c
  3467   0071BA  A4D8               	btfss	status,2,c
  3468   0071BC  EFE2  F038         	goto	u8951
  3469   0071C0  EFE4  F038         	goto	u8950
  3470   0071C4                     u8951:
  3471   0071C4  EFEA  F038         	goto	l7670
  3472   0071C8                     u8950:
  3473   0071C8                     
  3474                           ;functions.c: 100:         TRISB |= mask;
  3475   0071C8  5005               	movf	pinMode@mask^0,w,c	;volatile
  3476   0071CA  1293               	iorwf	147,f,c	;volatile
  3477                           
  3478                           ;functions.c: 101:         LATB |= mask;
  3479   0071CC  5005               	movf	pinMode@mask^0,w,c	;volatile
  3480   0071CE  128A               	iorwf	138,f,c	;volatile
  3481                           
  3482                           ;functions.c: 102:     } else if (mode == 3) {
  3483   0071D0  EFFA  F038         	goto	l291
  3484   0071D4                     l7670:
  3485   0071D4  0E03               	movlw	3
  3486   0071D6  1801               	xorwf	pinMode@mode^0,w,c
  3487   0071D8  A4D8               	btfss	status,2,c
  3488   0071DA  EFF1  F038         	goto	u8961
  3489   0071DE  EFF3  F038         	goto	u8960
  3490   0071E2                     u8961:
  3491   0071E2  EFFA  F038         	goto	l287
  3492   0071E6                     u8960:
  3493   0071E6                     
  3494                           ;functions.c: 103:         TRISB |= mask;
  3495   0071E6  5005               	movf	pinMode@mask^0,w,c	;volatile
  3496   0071E8  1293               	iorwf	147,f,c	;volatile
  3497                           
  3498                           ;functions.c: 104:         LATB &= ~mask;
  3499   0071EA  5005               	movf	pinMode@mask^0,w,c	;volatile
  3500   0071EC  0AFF               	xorlw	255
  3501   0071EE  168A               	andwf	138,f,c	;volatile
  3502   0071F0  EFFA  F038         	goto	l291
  3503   0071F4                     l287:
  3504   0071F4                     l291:
  3505   0071F4  0012               	return		;funcret
  3506   0071F6                     __end_of_pinMode:
  3507                           	callstack 0
  3508                           
  3509 ;; *************** function _ConfigurationCheck *****************
  3510 ;; Defined at:
  3511 ;;		line 223 in file "functions.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  startTime       4   52[BANK1 ] unsigned long 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;Total ram usage:        8 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 13
  3532 ;; This function calls:
  3533 ;;		_Setting
  3534 ;;		_millis
  3535 ;; This function is called by:
  3536 ;;		_setup
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text10
  3541   00727E                     __ptext10:
  3542                           	callstack 0
  3543   00727E                     _ConfigurationCheck:
  3544                           	callstack 16
  3545   00727E                     
  3546                           ;functions.c: 224:     if (!PORTBbits.RB7) {
  3547   00727E  BE81               	btfsc	129,7,c	;volatile
  3548   007280  EF44  F039         	goto	u12971
  3549   007284  EF46  F039         	goto	u12970
  3550   007288                     u12971:
  3551   007288  EF7A  F039         	goto	l358
  3552   00728C                     u12970:
  3553   00728C                     
  3554                           ;functions.c: 225:         unsigned long startTime = millis();
  3555   00728C  EC7B  F039         	call	_millis	;wreg free
  3556   007290  C001  F1F4         	movff	?_millis,ConfigurationCheck@startTime
  3557   007294  C002  F1F5         	movff	?_millis+1,ConfigurationCheck@startTime+1
  3558   007298  C003  F1F6         	movff	?_millis+2,ConfigurationCheck@startTime+2
  3559   00729C  C004  F1F7         	movff	?_millis+3,ConfigurationCheck@startTime+3
  3560                           
  3561                           ;functions.c: 226:         while (!PORTBbits.RB7) {
  3562   0072A0  EF73  F039         	goto	l354
  3563   0072A4                     l10496:
  3564                           
  3565                           ;functions.c: 227:             if (millis() - startTime > 3000) {
  3566   0072A4  EC7B  F039         	call	_millis	;wreg free
  3567   0072A8  0101               	movlb	1	; () banked
  3568   0072AA  51F4               	movf	ConfigurationCheck@startTime& (0+255),w,b
  3569   0072AC  5C01               	subwf	?_millis^0,w,c
  3570   0072AE  6FF0               	movwf	??_ConfigurationCheck& (0+255),b
  3571   0072B0  51F5               	movf	(ConfigurationCheck@startTime+1)& (0+255),w,b
  3572   0072B2  5802               	subwfb	(?_millis+1)^0,w,c
  3573   0072B4  6FF1               	movwf	(??_ConfigurationCheck+1)& (0+255),b
  3574   0072B6  51F6               	movf	(ConfigurationCheck@startTime+2)& (0+255),w,b
  3575   0072B8  5803               	subwfb	(?_millis+2)^0,w,c
  3576   0072BA  6FF2               	movwf	(??_ConfigurationCheck+2)& (0+255),b
  3577   0072BC  51F7               	movf	(ConfigurationCheck@startTime+3)& (0+255),w,b
  3578   0072BE  5804               	subwfb	(?_millis+3)^0,w,c
  3579   0072C0  6FF3               	movwf	(??_ConfigurationCheck+3)& (0+255),b
  3580   0072C2  51F3               	movf	(??_ConfigurationCheck+3)& (0+255),w,b
  3581   0072C4  11F2               	iorwf	(??_ConfigurationCheck+2)& (0+255),w,b
  3582   0072C6  E10B               	bnz	u12980
  3583   0072C8  0EB9               	movlw	185
  3584   0072CA  5DF0               	subwf	??_ConfigurationCheck& (0+255),w,b
  3585   0072CC  0E0B               	movlw	11
  3586   0072CE  59F1               	subwfb	(??_ConfigurationCheck+1)& (0+255),w,b
  3587   0072D0  A0D8               	btfss	status,0,c
  3588   0072D2  EF6D  F039         	goto	u12981
  3589   0072D6  EF6F  F039         	goto	u12980
  3590   0072DA                     u12981:
  3591   0072DA  EF73  F039         	goto	l354
  3592   0072DE                     u12980:
  3593   0072DE                     
  3594                           ; BSR set to: 1
  3595                           ;functions.c: 228:                 Setting();
  3596   0072DE  ECD2  F02F         	call	_Setting	;wreg free
  3597                           
  3598                           ;functions.c: 229:                 break;
  3599   0072E2  EF7A  F039         	goto	l358
  3600   0072E6                     l354:
  3601                           
  3602                           ;functions.c: 226:         while (!PORTBbits.RB7) {
  3603   0072E6  AE81               	btfss	129,7,c	;volatile
  3604   0072E8  EF78  F039         	goto	u12991
  3605   0072EC  EF7A  F039         	goto	u12990
  3606   0072F0                     u12991:
  3607   0072F0  EF52  F039         	goto	l10496
  3608   0072F4                     u12990:
  3609   0072F4                     l358:
  3610   0072F4  0012               	return		;funcret
  3611   0072F6                     __end_of_ConfigurationCheck:
  3612                           	callstack 0
  3613                           
  3614 ;; *************** function _Setting *****************
  3615 ;; Defined at:
  3616 ;;		line 172 in file "functions.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;Total ram usage:        4 bytes
  3635 ;; Hardware stack levels used: 1
  3636 ;; Hardware stack levels required when called: 12
  3637 ;; This function calls:
  3638 ;;		_DetectorTest
  3639 ;;		_Reset_MCLR
  3640 ;;		_ResistorAdjust
  3641 ;;		_UART1_SendFormatted
  3642 ;;		_WaitReleaseSW1
  3643 ;;		_millis
  3644 ;; This function is called by:
  3645 ;;		_ConfigurationCheck
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text11
  3650   005FA4                     __ptext11:
  3651                           	callstack 0
  3652   005FA4                     _Setting:
  3653                           	callstack 16
  3654   005FA4                     
  3655                           ;functions.c: 173:     mode = 0;
  3656   005FA4  0E00               	movlw	0
  3657   005FA6  0101               	movlb	1	; () banked
  3658   005FA8  6FB1               	movwf	_mode& (0+255),b
  3659   005FAA                     
  3660                           ; BSR set to: 1
  3661                           ;functions.c: 174:     WaitReleaseSW1();
  3662   005FAA  ECA9  F03C         	call	_WaitReleaseSW1	;wreg free
  3663   005FAE                     
  3664                           ;functions.c: 175:     UART1_SendFormatted(" Opt Device Test\r\n");
  3665   005FAE  0ED3               	movlw	low STR_1
  3666   005FB0  0101               	movlb	1	; () banked
  3667   005FB2  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3668   005FB4  0EFE               	movlw	high STR_1
  3669   005FB6  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3670   005FB8  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3671   005FBC                     
  3672                           ;functions.c: 176:     UART1_SendFormatted(" Adjust Resistor\r\n");
  3673   005FBC  0EC0               	movlw	low STR_2
  3674   005FBE  0101               	movlb	1	; () banked
  3675   005FC0  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3676   005FC2  0EFE               	movlw	high STR_2
  3677   005FC4  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3678   005FC6  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3679   005FCA                     l10416:
  3680                           
  3681                           ;functions.c: 179:         if (!PORTBbits.RB7) {
  3682   005FCA  BE81               	btfsc	129,7,c	;volatile
  3683   005FCC  EFEA  F02F         	goto	u12841
  3684   005FD0  EFEC  F02F         	goto	u12840
  3685   005FD4                     u12841:
  3686   005FD4  EFE5  F02F         	goto	l10416
  3687   005FD8                     u12840:
  3688   005FD8                     
  3689                           ;functions.c: 180:             StartTime = millis();
  3690   005FD8  EC7B  F039         	call	_millis	;wreg free
  3691   005FDC  C001  F180         	movff	?_millis,_StartTime
  3692   005FE0  C002  F181         	movff	?_millis+1,_StartTime+1
  3693   005FE4  C003  F182         	movff	?_millis+2,_StartTime+2
  3694   005FE8  C004  F183         	movff	?_millis+3,_StartTime+3
  3695   005FEC                     
  3696                           ;functions.c: 181:             _delay((unsigned long)((200)*(8000000/4000.0)));
  3697   005FEC  0E03               	movlw	3
  3698   005FEE  0101               	movlb	1	; () banked
  3699   005FF0  6FED               	movwf	(??_Setting+1)& (0+255),b
  3700   005FF2  0E08               	movlw	8
  3701   005FF4  6FEC               	movwf	??_Setting& (0+255),b
  3702   005FF6  0E77               	movlw	119
  3703   005FF8                     u13337:
  3704   005FF8  2EE8               	decfsz	wreg,f,c
  3705   005FFA  D7FE               	bra	u13337
  3706   005FFC  2FEC               	decfsz	??_Setting& (0+255),f,b
  3707   005FFE  D7FC               	bra	u13337
  3708   006000  2FED               	decfsz	(??_Setting+1)& (0+255),f,b
  3709   006002  D7FA               	bra	u13337
  3710                           
  3711                           ;functions.c: 182:             while (!PORTBbits.RB7) {
  3712   006004  EF23  F030         	goto	l324
  3713   006008                     l10422:
  3714                           
  3715                           ;functions.c: 183:                 if (millis() - StartTime > 3000) {
  3716   006008  EC7B  F039         	call	_millis	;wreg free
  3717   00600C  0101               	movlb	1	; () banked
  3718   00600E  5180               	movf	_StartTime& (0+255),w,b
  3719   006010  5C01               	subwf	?_millis^0,w,c
  3720   006012  6FEC               	movwf	??_Setting& (0+255),b
  3721   006014  5181               	movf	(_StartTime+1)& (0+255),w,b
  3722   006016  5802               	subwfb	(?_millis+1)^0,w,c
  3723   006018  6FED               	movwf	(??_Setting+1)& (0+255),b
  3724   00601A  5182               	movf	(_StartTime+2)& (0+255),w,b
  3725   00601C  5803               	subwfb	(?_millis+2)^0,w,c
  3726   00601E  6FEE               	movwf	(??_Setting+2)& (0+255),b
  3727   006020  5183               	movf	(_StartTime+3)& (0+255),w,b
  3728   006022  5804               	subwfb	(?_millis+3)^0,w,c
  3729   006024  6FEF               	movwf	(??_Setting+3)& (0+255),b
  3730   006026  51EF               	movf	(??_Setting+3)& (0+255),w,b
  3731   006028  11EE               	iorwf	(??_Setting+2)& (0+255),w,b
  3732   00602A  E10B               	bnz	u12850
  3733   00602C  0EB9               	movlw	185
  3734   00602E  5DEC               	subwf	??_Setting& (0+255),w,b
  3735   006030  0E0B               	movlw	11
  3736   006032  59ED               	subwfb	(??_Setting+1)& (0+255),w,b
  3737   006034  A0D8               	btfss	status,0,c
  3738   006036  EF1F  F030         	goto	u12851
  3739   00603A  EF21  F030         	goto	u12850
  3740   00603E                     u12851:
  3741   00603E  EF23  F030         	goto	l324
  3742   006042                     u12850:
  3743   006042  EF2A  F030         	goto	l10426
  3744   006046                     l324:
  3745                           
  3746                           ;functions.c: 182:             while (!PORTBbits.RB7) {
  3747   006046  AE81               	btfss	129,7,c	;volatile
  3748   006048  EF28  F030         	goto	u12861
  3749   00604C  EF2A  F030         	goto	u12860
  3750   006050                     u12861:
  3751   006050  EF04  F030         	goto	l10422
  3752   006054                     u12860:
  3753   006054                     l10426:
  3754                           
  3755                           ;functions.c: 187:             if (millis() - StartTime > 3000) {
  3756   006054  EC7B  F039         	call	_millis	;wreg free
  3757   006058  0101               	movlb	1	; () banked
  3758   00605A  5180               	movf	_StartTime& (0+255),w,b
  3759   00605C  5C01               	subwf	?_millis^0,w,c
  3760   00605E  6FEC               	movwf	??_Setting& (0+255),b
  3761   006060  5181               	movf	(_StartTime+1)& (0+255),w,b
  3762   006062  5802               	subwfb	(?_millis+1)^0,w,c
  3763   006064  6FED               	movwf	(??_Setting+1)& (0+255),b
  3764   006066  5182               	movf	(_StartTime+2)& (0+255),w,b
  3765   006068  5803               	subwfb	(?_millis+2)^0,w,c
  3766   00606A  6FEE               	movwf	(??_Setting+2)& (0+255),b
  3767   00606C  5183               	movf	(_StartTime+3)& (0+255),w,b
  3768   00606E  5804               	subwfb	(?_millis+3)^0,w,c
  3769   006070  6FEF               	movwf	(??_Setting+3)& (0+255),b
  3770   006072  51EF               	movf	(??_Setting+3)& (0+255),w,b
  3771   006074  11EE               	iorwf	(??_Setting+2)& (0+255),w,b
  3772   006076  E10B               	bnz	u12870
  3773   006078  0EB9               	movlw	185
  3774   00607A  5DEC               	subwf	??_Setting& (0+255),w,b
  3775   00607C  0E0B               	movlw	11
  3776   00607E  59ED               	subwfb	(??_Setting+1)& (0+255),w,b
  3777   006080  A0D8               	btfss	status,0,c
  3778   006082  EF45  F030         	goto	u12871
  3779   006086  EF47  F030         	goto	u12870
  3780   00608A                     u12871:
  3781   00608A  EF49  F030         	goto	l10430
  3782   00608E                     u12870:
  3783   00608E  EF4F  F030         	goto	l10434
  3784   006092                     l10430:
  3785                           
  3786                           ; BSR set to: 1
  3787                           ;functions.c: 190:             ++mode;
  3788   006092  2BB1               	incf	_mode& (0+255),f,b
  3789   006094                     
  3790                           ; BSR set to: 1
  3791                           ;functions.c: 191:             mode = mode & 1;
  3792   006094  51B1               	movf	_mode& (0+255),w,b
  3793   006096  0B01               	andlw	1
  3794   006098  6FB1               	movwf	_mode& (0+255),b
  3795   00609A  EFE5  F02F         	goto	l10416
  3796   00609E                     l10434:
  3797                           
  3798                           ; BSR set to: 1
  3799                           ;functions.c: 194:     WaitReleaseSW1();
  3800   00609E  ECA9  F03C         	call	_WaitReleaseSW1	;wreg free
  3801   0060A2                     
  3802                           ;functions.c: 195:     if (mode == 0) {
  3803   0060A2  0101               	movlb	1	; () banked
  3804   0060A4  51B1               	movf	_mode& (0+255),w,b
  3805   0060A6  A4D8               	btfss	status,2,c
  3806   0060A8  EF58  F030         	goto	u12881
  3807   0060AC  EF5A  F030         	goto	u12880
  3808   0060B0                     u12881:
  3809   0060B0  EF5E  F030         	goto	l10440
  3810   0060B4                     u12880:
  3811   0060B4                     
  3812                           ; BSR set to: 1
  3813                           ;functions.c: 196:         DetectorTest();
  3814   0060B4  EC8E  F02D         	call	_DetectorTest	;wreg free
  3815                           
  3816                           ;functions.c: 197:     } else if (mode == 1) {
  3817   0060B8  EF68  F030         	goto	l10444
  3818   0060BC                     l10440:
  3819                           
  3820                           ; BSR set to: 1
  3821   0060BC  05B1               	decf	_mode& (0+255),w,b
  3822   0060BE  A4D8               	btfss	status,2,c
  3823   0060C0  EF64  F030         	goto	u12891
  3824   0060C4  EF66  F030         	goto	u12890
  3825   0060C8                     u12891:
  3826   0060C8  EF68  F030         	goto	l10444
  3827   0060CC                     u12890:
  3828   0060CC                     
  3829                           ; BSR set to: 1
  3830                           ;functions.c: 198:         ResistorAdjust();
  3831   0060CC  ECF9  F030         	call	_ResistorAdjust	;wreg free
  3832   0060D0                     l10444:
  3833                           
  3834                           ;functions.c: 200:     Reset_MCLR();
  3835   0060D0  ECD3  F03C         	call	_Reset_MCLR	;wreg free
  3836   0060D4  0012               	return		;funcret
  3837   0060D6                     __end_of_Setting:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _ResistorAdjust *****************
  3841 ;; Defined at:
  3842 ;;		line 300 in file "functions.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;		None
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      void 
  3849 ;; Registers used:
  3850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;Total ram usage:        2 bytes
  3861 ;; Hardware stack levels used: 1
  3862 ;; Hardware stack levels required when called: 10
  3863 ;; This function calls:
  3864 ;;		_GetTimerVal
  3865 ;;		_UART1_SendFormatted
  3866 ;;		___lmul
  3867 ;; This function is called by:
  3868 ;;		_Setting
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text12
  3873   0061F2                     __ptext12:
  3874                           	callstack 0
  3875   0061F2                     _ResistorAdjust:
  3876                           	callstack 17
  3877   0061F2                     
  3878                           ;functions.c: 301:   UART1_SendFormatted("Adjust Resistor\n");
  3879   0061F2  0EF8               	movlw	low STR_22
  3880   0061F4  0101               	movlb	1	; () banked
  3881   0061F6  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3882   0061F8  0EFE               	movlw	high STR_22
  3883   0061FA  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3884   0061FC  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3885   006200                     
  3886                           ;functions.c: 302:   _delay((unsigned long)((1000)*(8000000/4000.0)));
  3887   006200  0E0B               	movlw	11
  3888   006202  0100               	movlb	0	; () banked
  3889   006204  6FFC               	movwf	(??_ResistorAdjust+1)& (0+255),b
  3890   006206  0E26               	movlw	38
  3891   006208  6FFB               	movwf	??_ResistorAdjust& (0+255),b
  3892   00620A  0E5D               	movlw	93
  3893   00620C                     u13347:
  3894   00620C  2EE8               	decfsz	wreg,f,c
  3895   00620E  D7FE               	bra	u13347
  3896   006210  2FFB               	decfsz	??_ResistorAdjust& (0+255),f,b
  3897   006212  D7FC               	bra	u13347
  3898   006214  2FFC               	decfsz	(??_ResistorAdjust+1)& (0+255),f,b
  3899   006216  D7FA               	bra	u13347
  3900   006218  D000               	nop2	
  3901   00621A                     
  3902                           ;functions.c: 303:   UART1_SendFormatted("\033[H\033[J");
  3903   00621A  0ED9               	movlw	low STR_23
  3904   00621C  0101               	movlb	1	; () banked
  3905   00621E  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3906   006220  0EFF               	movlw	high STR_23
  3907   006222  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3908   006224  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3909                           
  3910                           ;functions.c: 305:   while (PORTBbits.RB7) {
  3911   006228  EF7D  F031         	goto	l10406
  3912   00622C                     l10398:
  3913                           
  3914                           ;functions.c: 306:     GetTimerVal();
  3915   00622C  EC3B  F021         	call	_GetTimerVal	;wreg free
  3916   006230                     
  3917                           ;functions.c: 307:     UART1_SendFormatted("IR : %3lu%%\n", 100 * Tmi[0] / 16384);
  3918   006230  0E9E               	movlw	low STR_24
  3919   006232  0101               	movlb	1	; () banked
  3920   006234  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3921   006236  0EFF               	movlw	high STR_24
  3922   006238  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3923   00623A  C160  F001         	movff	_Tmi,___lmul@multiplier
  3924   00623E  C161  F002         	movff	_Tmi+1,___lmul@multiplier+1
  3925   006242  C162  F003         	movff	_Tmi+2,___lmul@multiplier+2
  3926   006246  C163  F004         	movff	_Tmi+3,___lmul@multiplier+3
  3927   00624A  0E64               	movlw	100
  3928   00624C  6E05               	movwf	___lmul@multiplicand^0,c
  3929   00624E  0E00               	movlw	0
  3930   006250  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3931   006252  0E00               	movlw	0
  3932   006254  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3933   006256  0E00               	movlw	0
  3934   006258  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3935   00625A  ECF1  F039         	call	___lmul	;wreg free
  3936   00625E  0E0F               	movlw	15
  3937   006260  EF37  F031         	goto	u12810
  3938   006264                     u12815:
  3939   006264  90D8               	bcf	status,0,c
  3940   006266  3204               	rrcf	(?___lmul+3)^0,f,c
  3941   006268  3203               	rrcf	(?___lmul+2)^0,f,c
  3942   00626A  3202               	rrcf	(?___lmul+1)^0,f,c
  3943   00626C  3201               	rrcf	?___lmul^0,f,c
  3944   00626E                     u12810:
  3945   00626E  2EE8               	decfsz	wreg,f,c
  3946   006270  EF32  F031         	goto	u12815
  3947   006274  C001  F1D2         	movff	?___lmul,?_UART1_SendFormatted+2
  3948   006278  C002  F1D3         	movff	?___lmul+1,?_UART1_SendFormatted+3
  3949   00627C  C003  F1D4         	movff	?___lmul+2,?_UART1_SendFormatted+4
  3950   006280  C004  F1D5         	movff	?___lmul+3,?_UART1_SendFormatted+5
  3951   006284  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3952   006288                     
  3953                           ;functions.c: 308:     UART1_SendFormatted("Red: %3lu%%\n", 100 * Tmi[1] / 16384);
  3954   006288  0EAB               	movlw	low STR_25
  3955   00628A  0101               	movlb	1	; () banked
  3956   00628C  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  3957   00628E  0EFF               	movlw	high STR_25
  3958   006290  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  3959   006292  C164  F001         	movff	_Tmi+4,___lmul@multiplier
  3960   006296  C165  F002         	movff	_Tmi+5,___lmul@multiplier+1
  3961   00629A  C166  F003         	movff	_Tmi+6,___lmul@multiplier+2
  3962   00629E  C167  F004         	movff	_Tmi+7,___lmul@multiplier+3
  3963   0062A2  0E64               	movlw	100
  3964   0062A4  6E05               	movwf	___lmul@multiplicand^0,c
  3965   0062A6  0E00               	movlw	0
  3966   0062A8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  3967   0062AA  0E00               	movlw	0
  3968   0062AC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  3969   0062AE  0E00               	movlw	0
  3970   0062B0  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  3971   0062B2  ECF1  F039         	call	___lmul	;wreg free
  3972   0062B6  0E0F               	movlw	15
  3973   0062B8  EF63  F031         	goto	u12820
  3974   0062BC                     u12825:
  3975   0062BC  90D8               	bcf	status,0,c
  3976   0062BE  3204               	rrcf	(?___lmul+3)^0,f,c
  3977   0062C0  3203               	rrcf	(?___lmul+2)^0,f,c
  3978   0062C2  3202               	rrcf	(?___lmul+1)^0,f,c
  3979   0062C4  3201               	rrcf	?___lmul^0,f,c
  3980   0062C6                     u12820:
  3981   0062C6  2EE8               	decfsz	wreg,f,c
  3982   0062C8  EF5E  F031         	goto	u12825
  3983   0062CC  C001  F1D2         	movff	?___lmul,?_UART1_SendFormatted+2
  3984   0062D0  C002  F1D3         	movff	?___lmul+1,?_UART1_SendFormatted+3
  3985   0062D4  C003  F1D4         	movff	?___lmul+2,?_UART1_SendFormatted+4
  3986   0062D8  C004  F1D5         	movff	?___lmul+3,?_UART1_SendFormatted+5
  3987   0062DC  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  3988   0062E0                     
  3989                           ;functions.c: 309:     _delay((unsigned long)((100)*(8000000/4000.0)));
  3990   0062E0  0E02               	movlw	2
  3991   0062E2  0100               	movlb	0	; () banked
  3992   0062E4  6FFC               	movwf	(??_ResistorAdjust+1)& (0+255),b
  3993   0062E6  0E04               	movlw	4
  3994   0062E8  6FFB               	movwf	??_ResistorAdjust& (0+255),b
  3995   0062EA  0EBA               	movlw	186
  3996   0062EC                     u13357:
  3997   0062EC  2EE8               	decfsz	wreg,f,c
  3998   0062EE  D7FE               	bra	u13357
  3999   0062F0  2FFB               	decfsz	??_ResistorAdjust& (0+255),f,b
  4000   0062F2  D7FC               	bra	u13357
  4001   0062F4  2FFC               	decfsz	(??_ResistorAdjust+1)& (0+255),f,b
  4002   0062F6  D7FA               	bra	u13357
  4003   0062F8  0000               	nop	
  4004   0062FA                     l10406:
  4005                           
  4006                           ;functions.c: 305:   while (PORTBbits.RB7) {
  4007   0062FA  BE81               	btfsc	129,7,c	;volatile
  4008   0062FC  EF82  F031         	goto	u12831
  4009   006300  EF84  F031         	goto	u12830
  4010   006304                     u12831:
  4011   006304  EF16  F031         	goto	l10398
  4012   006308                     u12830:
  4013   006308  0012               	return		;funcret
  4014   00630A                     __end_of_ResistorAdjust:
  4015                           	callstack 0
  4016                           
  4017 ;; *************** function ___lmul *****************
  4018 ;; Defined at:
  4019 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul32.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  multiplier      4    0[COMRAM] unsigned long 
  4022 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  product         4    8[COMRAM] unsigned long 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  4    0[COMRAM] unsigned long 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4034 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;Total ram usage:       12 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; Hardware stack levels required when called: 1
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_ResistorAdjust
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text13
  4049   0073E2                     __ptext13:
  4050                           	callstack 0
  4051   0073E2                     ___lmul:
  4052                           	callstack 25
  4053   0073E2  0E00               	movlw	0
  4054   0073E4  6E09               	movwf	___lmul@product^0,c
  4055   0073E6  0E00               	movlw	0
  4056   0073E8  6E0A               	movwf	(___lmul@product+1)^0,c
  4057   0073EA  0E00               	movlw	0
  4058   0073EC  6E0B               	movwf	(___lmul@product+2)^0,c
  4059   0073EE  0E00               	movlw	0
  4060   0073F0  6E0C               	movwf	(___lmul@product+3)^0,c
  4061   0073F2                     l7578:
  4062   0073F2  A001               	btfss	___lmul@multiplier^0,0,c
  4063   0073F4  EFFE  F039         	goto	u8781
  4064   0073F8  EF00  F03A         	goto	u8780
  4065   0073FC                     u8781:
  4066   0073FC  EF08  F03A         	goto	l7582
  4067   007400                     u8780:
  4068   007400  5005               	movf	___lmul@multiplicand^0,w,c
  4069   007402  2609               	addwf	___lmul@product^0,f,c
  4070   007404  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  4071   007406  220A               	addwfc	(___lmul@product+1)^0,f,c
  4072   007408  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  4073   00740A  220B               	addwfc	(___lmul@product+2)^0,f,c
  4074   00740C  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  4075   00740E  220C               	addwfc	(___lmul@product+3)^0,f,c
  4076   007410                     l7582:
  4077   007410  90D8               	bcf	status,0,c
  4078   007412  3605               	rlcf	___lmul@multiplicand^0,f,c
  4079   007414  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4080   007416  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4081   007418  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4082   00741A  90D8               	bcf	status,0,c
  4083   00741C  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  4084   00741E  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  4085   007420  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  4086   007422  3201               	rrcf	___lmul@multiplier^0,f,c
  4087   007424  5001               	movf	___lmul@multiplier^0,w,c
  4088   007426  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  4089   007428  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  4090   00742A  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  4091   00742C  A4D8               	btfss	status,2,c
  4092   00742E  EF1B  F03A         	goto	u8791
  4093   007432  EF1D  F03A         	goto	u8790
  4094   007436                     u8791:
  4095   007436  EFF9  F039         	goto	l7578
  4096   00743A                     u8790:
  4097   00743A  C009  F001         	movff	___lmul@product,?___lmul
  4098   00743E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  4099   007442  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  4100   007446  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  4101   00744A  0012               	return		;funcret
  4102   00744C                     __end_of___lmul:
  4103                           	callstack 0
  4104                           
  4105 ;; *************** function _Reset_MCLR *****************
  4106 ;; Defined at:
  4107 ;;		line 65 in file "functions.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;		None
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;		None
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  1    wreg      void 
  4114 ;; Registers used:
  4115 ;;		wreg
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4125 ;;Total ram usage:        1 bytes
  4126 ;; Hardware stack levels used: 1
  4127 ;; Hardware stack levels required when called: 1
  4128 ;; This function calls:
  4129 ;;		Nothing
  4130 ;; This function is called by:
  4131 ;;		_Setting
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text14
  4136   0079A6                     __ptext14:
  4137                           	callstack 0
  4138   0079A6                     _Reset_MCLR:
  4139                           	callstack 26
  4140   0079A6                     
  4141                           ;functions.c: 66:     PORTEbits.MCLR = 0;
  4142   0079A6  9684               	bcf	132,3,c	;volatile
  4143   0079A8                     
  4144                           ;functions.c: 67:     _delay((unsigned long)((10)*(8000000/4000.0)));
  4145   0079A8  0E1A               	movlw	26
  4146   0079AA  6E01               	movwf	??_Reset_MCLR^0,c
  4147   0079AC  0EF8               	movlw	248
  4148   0079AE                     u13367:
  4149   0079AE  2EE8               	decfsz	wreg,f,c
  4150   0079B0  D7FE               	bra	u13367
  4151   0079B2  2E01               	decfsz	??_Reset_MCLR^0,f,c
  4152   0079B4  D7FC               	bra	u13367
  4153   0079B6  D000               	nop2	
  4154   0079B8                     
  4155                           ;functions.c: 68:     PORTEbits.MCLR = 1;
  4156   0079B8  8684               	bsf	132,3,c	;volatile
  4157   0079BA  0012               	return		;funcret
  4158   0079BC                     __end_of_Reset_MCLR:
  4159                           	callstack 0
  4160                           
  4161 ;; *************** function _DetectorTest *****************
  4162 ;; Defined at:
  4163 ;;		line 254 in file "functions.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;Total ram usage:        2 bytes
  4182 ;; Hardware stack levels used: 1
  4183 ;; Hardware stack levels required when called: 11
  4184 ;; This function calls:
  4185 ;;		_GetTimerVal
  4186 ;;		_LEDChangeState
  4187 ;;		_UART1_SendFormatted
  4188 ;;		_WaitReleaseSW1
  4189 ;; This function is called by:
  4190 ;;		_Setting
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text15
  4195   005B1C                     __ptext15:
  4196                           	callstack 0
  4197   005B1C                     _DetectorTest:
  4198                           	callstack 16
  4199   005B1C                     
  4200                           ;functions.c: 255:   UART1_SendFormatted("Opt Device Test\n");
  4201   005B1C  0E09               	movlw	low STR_12
  4202   005B1E  0101               	movlb	1	; () banked
  4203   005B20  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  4204   005B22  0EFF               	movlw	high STR_12
  4205   005B24  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  4206   005B26  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  4207                           
  4208                           ;functions.c: 256:   UART1_SendFormatted("Push SW1\n");
  4209   005B2A  0E6B               	movlw	low (STR_15+4)
  4210   005B2C  0101               	movlb	1	; () banked
  4211   005B2E  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  4212   005B30  0EFF               	movlw	high (STR_15+4)
  4213   005B32  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  4214   005B34  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  4215   005B38                     l364:
  4216                           
  4217                           ;functions.c: 257:   while (PORTBbits.RB7 == 1) {
  4218   005B38  BE81               	btfsc	129,7,c	;volatile
  4219   005B3A  EFA1  F02D         	goto	u12741
  4220   005B3E  EFA3  F02D         	goto	u12740
  4221   005B42                     u12741:
  4222   005B42  EF9C  F02D         	goto	l364
  4223   005B46                     u12740:
  4224   005B46                     
  4225                           ;functions.c: 259:   WaitReleaseSW1();
  4226   005B46  ECA9  F03C         	call	_WaitReleaseSW1	;wreg free
  4227                           
  4228                           ;functions.c: 261:   UART1_SendFormatted("Flashing Red LED\n");
  4229   005B4A  0EE6               	movlw	low STR_14
  4230   005B4C  0101               	movlb	1	; () banked
  4231   005B4E  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  4232   005B50  0EFE               	movlw	high STR_14
  4233   005B52  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  4234   005B54  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  4235                           
  4236                           ;functions.c: 262:   UART1_SendFormatted("OK: Push SW1\n");
  4237   005B58  0E67               	movlw	low STR_15
  4238   005B5A  0101               	movlb	1	; () banked
  4239   005B5C  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  4240   005B5E  0EFF               	movlw	high STR_15
  4241   005B60  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  4242   005B62  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  4243   005B66                     
  4244                           ;functions.c: 263:   count = 0;
  4245   005B66  0E00               	movlw	0
  4246   005B68  0101               	movlb	1	; () banked
  4247   005B6A  6FA0               	movwf	_count& (0+255),b
  4248   005B6C  0E00               	movlw	0
  4249   005B6E  6FA1               	movwf	(_count+1)& (0+255),b
  4250   005B70  0E00               	movlw	0
  4251   005B72  6FA2               	movwf	(_count+2)& (0+255),b
  4252   005B74  0E00               	movlw	0
  4253   005B76  6FA3               	movwf	(_count+3)& (0+255),b
  4254                           
  4255                           ;functions.c: 265:   while (PORTBbits.RB7 == 1) {
  4256   005B78  EFEA  F02D         	goto	l10366
  4257   005B7C                     l368:
  4258                           
  4259                           ; BSR set to: 1
  4260                           ;functions.c: 266:     if (count % 2 == 0) {
  4261   005B7C  B1A0               	btfsc	_count& (0+255),0,b
  4262   005B7E  EFC3  F02D         	goto	u12751
  4263   005B82  EFC5  F02D         	goto	u12750
  4264   005B86                     u12751:
  4265   005B86  EFD3  F02D         	goto	l10360
  4266   005B8A                     u12750:
  4267   005B8A                     
  4268                           ; BSR set to: 1
  4269                           ;functions.c: 267:       LEDChangeState(1);
  4270   005B8A  0E01               	movlw	1
  4271   005B8C  ECB0  F03A         	call	_LEDChangeState
  4272   005B90                     
  4273                           ;functions.c: 268:       _delay((unsigned long)((10)*(8000000/4000.0)));
  4274   005B90  0E1A               	movlw	26
  4275   005B92  0100               	movlb	0	; () banked
  4276   005B94  6FFB               	movwf	??_DetectorTest& (0+255),b
  4277   005B96  0EF8               	movlw	248
  4278   005B98                     u13377:
  4279   005B98  2EE8               	decfsz	wreg,f,c
  4280   005B9A  D7FE               	bra	u13377
  4281   005B9C  2FFB               	decfsz	??_DetectorTest& (0+255),f,b
  4282   005B9E  D7FC               	bra	u13377
  4283   005BA0  0000               	nop	
  4284                           
  4285                           ;functions.c: 269:     } else {
  4286   005BA2  EFE3  F02D         	goto	l10364
  4287   005BA6                     l10360:
  4288                           
  4289                           ; BSR set to: 1
  4290                           ;functions.c: 270:       LEDChangeState(2);
  4291   005BA6  0E02               	movlw	2
  4292   005BA8  ECB0  F03A         	call	_LEDChangeState
  4293   005BAC                     
  4294                           ;functions.c: 271:       _delay((unsigned long)((100)*(8000000/4000.0)));
  4295   005BAC  0E02               	movlw	2
  4296   005BAE  0100               	movlb	0	; () banked
  4297   005BB0  6FFC               	movwf	(??_DetectorTest+1)& (0+255),b
  4298   005BB2  0E04               	movlw	4
  4299   005BB4  6FFB               	movwf	??_DetectorTest& (0+255),b
  4300   005BB6  0EBA               	movlw	186
  4301   005BB8                     u13387:
  4302   005BB8  2EE8               	decfsz	wreg,f,c
  4303   005BBA  D7FE               	bra	u13387
  4304   005BBC  2FFB               	decfsz	??_DetectorTest& (0+255),f,b
  4305   005BBE  D7FC               	bra	u13387
  4306   005BC0  2FFC               	decfsz	(??_DetectorTest+1)& (0+255),f,b
  4307   005BC2  D7FA               	bra	u13387
  4308   005BC4  0000               	nop	
  4309   005BC6                     l10364:
  4310                           
  4311                           ;functions.c: 273:     ++count;
  4312   005BC6  0E01               	movlw	1
  4313   005BC8  0101               	movlb	1	; () banked
  4314   005BCA  27A0               	addwf	_count& (0+255),f,b
  4315   005BCC  0E00               	movlw	0
  4316   005BCE  23A1               	addwfc	(_count+1)& (0+255),f,b
  4317   005BD0  23A2               	addwfc	(_count+2)& (0+255),f,b
  4318   005BD2  23A3               	addwfc	(_count+3)& (0+255),f,b
  4319   005BD4                     l10366:
  4320                           
  4321                           ; BSR set to: 1
  4322                           ;functions.c: 265:   while (PORTBbits.RB7 == 1) {
  4323   005BD4  BE81               	btfsc	129,7,c	;volatile
  4324   005BD6  EFEF  F02D         	goto	u12761
  4325   005BDA  EFF1  F02D         	goto	u12760
  4326   005BDE                     u12761:
  4327   005BDE  EFBE  F02D         	goto	l368
  4328   005BE2                     u12760:
  4329   005BE2                     
  4330                           ; BSR set to: 1
  4331                           ;functions.c: 275:   LEDChangeState(2);
  4332   005BE2  0E02               	movlw	2
  4333   005BE4  ECB0  F03A         	call	_LEDChangeState
  4334   005BE8                     
  4335                           ;functions.c: 277:   UART1_SendFormatted("Checking...\n");
  4336   005BE8  0EB8               	movlw	low STR_16
  4337   005BEA  0101               	movlb	1	; () banked
  4338   005BEC  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  4339   005BEE  0EFF               	movlw	high STR_16
  4340   005BF0  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  4341   005BF2  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  4342   005BF6                     
  4343                           ;functions.c: 278:   count = 0;
  4344   005BF6  0E00               	movlw	0
  4345   005BF8  0101               	movlb	1	; () banked
  4346   005BFA  6FA0               	movwf	_count& (0+255),b
  4347   005BFC  0E00               	movlw	0
  4348   005BFE  6FA1               	movwf	(_count+1)& (0+255),b
  4349   005C00  0E00               	movlw	0
  4350   005C02  6FA2               	movwf	(_count+2)& (0+255),b
  4351   005C04  0E00               	movlw	0
  4352   005C06  6FA3               	movwf	(_count+3)& (0+255),b
  4353   005C08                     
  4354                           ; BSR set to: 1
  4355                           ;functions.c: 279:   GetTimerVal();
  4356   005C08  EC3B  F021         	call	_GetTimerVal	;wreg free
  4357   005C0C                     
  4358                           ;functions.c: 280:   _delay((unsigned long)((1000)*(8000000/4000.0)));
  4359   005C0C  0E0B               	movlw	11
  4360   005C0E  0100               	movlb	0	; () banked
  4361   005C10  6FFC               	movwf	(??_DetectorTest+1)& (0+255),b
  4362   005C12  0E26               	movlw	38
  4363   005C14  6FFB               	movwf	??_DetectorTest& (0+255),b
  4364   005C16  0E5D               	movlw	93
  4365   005C18                     u13397:
  4366   005C18  2EE8               	decfsz	wreg,f,c
  4367   005C1A  D7FE               	bra	u13397
  4368   005C1C  2FFB               	decfsz	??_DetectorTest& (0+255),f,b
  4369   005C1E  D7FC               	bra	u13397
  4370   005C20  2FFC               	decfsz	(??_DetectorTest+1)& (0+255),f,b
  4371   005C22  D7FA               	bra	u13397
  4372   005C24  D000               	nop2	
  4373   005C26                     
  4374                           ;functions.c: 282:   if (PORTBbits.RB0 == 1) {
  4375   005C26  A081               	btfss	129,0,c	;volatile
  4376   005C28  EF18  F02E         	goto	u12771
  4377   005C2C  EF1A  F02E         	goto	u12770
  4378   005C30                     u12771:
  4379   005C30  EF23  F02E         	goto	l10382
  4380   005C34                     u12770:
  4381   005C34                     
  4382                           ;functions.c: 283:     UART1_SendFormatted("PhotoTr Error1\n");
  4383   005C34  0E1A               	movlw	low STR_17
  4384   005C36  0101               	movlb	1	; () banked
  4385   005C38  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  4386   005C3A  0EFF               	movlw	high STR_17
  4387   005C3C  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  4388   005C3E  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  4389                           
  4390                           ;functions.c: 284:   } else if (Tmi[1] > 16384 / 2) {
  4391   005C42  EF54  F02E         	goto	l378
  4392   005C46                     l10382:
  4393   005C46  0101               	movlb	1	; () banked
  4394   005C48  5167               	movf	(_Tmi+7)& (0+255),w,b
  4395   005C4A  1166               	iorwf	(_Tmi+6)& (0+255),w,b
  4396   005C4C  E10A               	bnz	u12780
  4397   005C4E  0564               	decf	(_Tmi+4)& (0+255),w,b
  4398   005C50  0E20               	movlw	32
  4399   005C52  5965               	subwfb	(_Tmi+5)& (0+255),w,b
  4400   005C54  A0D8               	btfss	status,0,c
  4401   005C56  EF2F  F02E         	goto	u12781
  4402   005C5A  EF31  F02E         	goto	u12780
  4403   005C5E                     u12781:
  4404   005C5E  EF39  F02E         	goto	l10386
  4405   005C62                     u12780:
  4406   005C62                     
  4407                           ; BSR set to: 1
  4408                           ;functions.c: 285:     UART1_SendFormatted("PhotoTr Error2\n");
  4409   005C62  0E2A               	movlw	low STR_18
  4410   005C64  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  4411   005C66  0EFF               	movlw	high STR_18
  4412   005C68  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  4413   005C6A  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  4414                           
  4415                           ;functions.c: 286:   } else if (Tmi[0] > 16384 / 2) {
  4416   005C6E  EF54  F02E         	goto	l378
  4417   005C72                     l10386:
  4418                           
  4419                           ; BSR set to: 1
  4420   005C72  5163               	movf	(_Tmi+3)& (0+255),w,b
  4421   005C74  1162               	iorwf	(_Tmi+2)& (0+255),w,b
  4422   005C76  E10A               	bnz	u12790
  4423   005C78  0560               	decf	_Tmi& (0+255),w,b
  4424   005C7A  0E20               	movlw	32
  4425   005C7C  5961               	subwfb	(_Tmi+1)& (0+255),w,b
  4426   005C7E  A0D8               	btfss	status,0,c
  4427   005C80  EF44  F02E         	goto	u12791
  4428   005C84  EF46  F02E         	goto	u12790
  4429   005C88                     u12791:
  4430   005C88  EF4E  F02E         	goto	l10390
  4431   005C8C                     u12790:
  4432   005C8C                     
  4433                           ; BSR set to: 1
  4434                           ;functions.c: 287:     UART1_SendFormatted("IR LED Error\n");
  4435   005C8C  0E83               	movlw	low STR_19
  4436   005C8E  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  4437   005C90  0EFF               	movlw	high STR_19
  4438   005C92  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  4439   005C94  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  4440                           
  4441                           ;functions.c: 288:   } else {
  4442   005C98  EF54  F02E         	goto	l378
  4443   005C9C                     l10390:
  4444                           
  4445                           ; BSR set to: 1
  4446                           ;functions.c: 289:     UART1_SendFormatted("OptDevices OK\n");
  4447   005C9C  0E3A               	movlw	low STR_20
  4448   005C9E  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  4449   005CA0  0EFF               	movlw	high STR_20
  4450   005CA2  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  4451   005CA4  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  4452   005CA8                     l378:
  4453                           
  4454                           ;functions.c: 292:   while (PORTBbits.RB7) {
  4455   005CA8  BE81               	btfsc	129,7,c	;volatile
  4456   005CAA  EF59  F02E         	goto	u12801
  4457   005CAE  EF5B  F02E         	goto	u12800
  4458   005CB2                     u12801:
  4459   005CB2  EF54  F02E         	goto	l378
  4460   005CB6                     u12800:
  4461   005CB6  0012               	return		;funcret
  4462   005CB8                     __end_of_DetectorTest:
  4463                           	callstack 0
  4464                           
  4465 ;; *************** function _WaitReleaseSW1 *****************
  4466 ;; Defined at:
  4467 ;;		line 295 in file "functions.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;		None
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;		None
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  1    wreg      void 
  4474 ;; Registers used:
  4475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;Total ram usage:        0 bytes
  4486 ;; Hardware stack levels used: 1
  4487 ;; Hardware stack levels required when called: 10
  4488 ;; This function calls:
  4489 ;;		_UART1_SendFormatted
  4490 ;; This function is called by:
  4491 ;;		_Setting
  4492 ;;		_DetectorTest
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text16
  4497   007952                     __ptext16:
  4498                           	callstack 0
  4499   007952                     _WaitReleaseSW1:
  4500                           	callstack 17
  4501   007952                     
  4502                           ;functions.c: 296:   UART1_SendFormatted("Release SW1\n");
  4503   007952  0EC5               	movlw	low STR_21
  4504   007954  0101               	movlb	1	; () banked
  4505   007956  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  4506   007958  0EFF               	movlw	high STR_21
  4507   00795A  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  4508   00795C  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  4509   007960                     l384:
  4510                           
  4511                           ;functions.c: 297:   while (PORTBbits.RB7 == 0) {
  4512   007960  AE81               	btfss	129,7,c	;volatile
  4513   007962  EFB5  F03C         	goto	u12711
  4514   007966  EFB7  F03C         	goto	u12710
  4515   00796A                     u12711:
  4516   00796A  EFB0  F03C         	goto	l384
  4517   00796E                     u12710:
  4518   00796E  0012               	return		;funcret
  4519   007970                     __end_of_WaitReleaseSW1:
  4520                           	callstack 0
  4521                           
  4522 ;; *************** function _GetTimerVal *****************
  4523 ;; Defined at:
  4524 ;;		line 150 in file "functions.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;		None
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  i               2  123[COMRAM] int 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      void 
  4531 ;; Registers used:
  4532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;Total ram usage:        6 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; Hardware stack levels required when called: 3
  4545 ;; This function calls:
  4546 ;;		_LEDChangeState
  4547 ;;		_WaitPeriod
  4548 ;;		___fladd
  4549 ;;		___fldiv
  4550 ;;		___llmod
  4551 ;;		___xxtofl
  4552 ;;		_micros
  4553 ;; This function is called by:
  4554 ;;		_main
  4555 ;;		_DetectorTest
  4556 ;;		_ResistorAdjust
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           	psect	text17
  4561   004276                     __ptext17:
  4562                           	callstack 0
  4563   004276                     _GetTimerVal:
  4564                           	callstack 23
  4565   004276                     
  4566                           ;functions.c: 151:     Tm_prev = Timer[4][0];
  4567   004276  C120  F198         	movff	_Timer+32,_Tm_prev
  4568   00427A  C121  F199         	movff	_Timer+33,_Tm_prev+1
  4569   00427E  C122  F19A         	movff	_Timer+34,_Tm_prev+2
  4570   004282  C123  F19B         	movff	_Timer+35,_Tm_prev+3
  4571   004286                     
  4572                           ;functions.c: 152:     for (LED_Color = 0; LED_Color < 2; ++LED_Color) {
  4573   004286  0E00               	movlw	0
  4574   004288  0101               	movlb	1	; () banked
  4575   00428A  6FB3               	movwf	_LED_Color& (0+255),b
  4576   00428C                     l10304:
  4577                           
  4578                           ; BSR set to: 1
  4579   00428C  0E01               	movlw	1
  4580   00428E  65B3               	cpfsgt	_LED_Color& (0+255),b
  4581   004290  EF4C  F021         	goto	u12671
  4582   004294  EF4E  F021         	goto	u12670
  4583   004298                     u12671:
  4584   004298  EF50  F021         	goto	l10308
  4585   00429C                     u12670:
  4586   00429C  EF81  F022         	goto	l319
  4587   0042A0                     l10308:
  4588                           
  4589                           ; BSR set to: 1
  4590                           ;functions.c: 153:         WaitPeriod();
  4591   0042A0  EC85  F031         	call	_WaitPeriod	;wreg free
  4592   0042A4                     
  4593                           ;functions.c: 154:         LEDChangeState(LED_Color);
  4594   0042A4  0101               	movlb	1	; () banked
  4595   0042A6  51B3               	movf	_LED_Color& (0+255),w,b
  4596   0042A8  ECB0  F03A         	call	_LEDChangeState
  4597   0042AC                     
  4598                           ;functions.c: 155:         TimerStart = micros();
  4599   0042AC  ECB7  F039         	call	_micros	;wreg free
  4600   0042B0  C001  F190         	movff	?_micros,_TimerStart
  4601   0042B4  C002  F191         	movff	?_micros+1,_TimerStart+1
  4602   0042B8  C003  F192         	movff	?_micros+2,_TimerStart+2
  4603   0042BC  C004  F193         	movff	?_micros+3,_TimerStart+3
  4604   0042C0                     
  4605                           ;functions.c: 157:         for (Tmi[LED_Color] = 0; Tmi[LED_Color] < 16384; ++Tmi[LED_Co
      +                          lor]) {
  4606   0042C0  0101               	movlb	1	; () banked
  4607   0042C2  51B3               	movf	_LED_Color& (0+255),w,b
  4608   0042C4  0D04               	mullw	4
  4609   0042C6  0E60               	movlw	low _Tmi
  4610   0042C8  24F3               	addwf	243,w,c
  4611   0042CA  6ED9               	movwf	fsr2l,c
  4612   0042CC  0E01               	movlw	high _Tmi
  4613   0042CE  20F4               	addwfc	prodh,w,c
  4614   0042D0  6EDA               	movwf	fsr2h,c
  4615   0042D2  6ADE               	clrf	postinc2,c
  4616   0042D4  6ADE               	clrf	postinc2,c
  4617   0042D6  6ADE               	clrf	postinc2,c
  4618   0042D8  6ADD               	clrf	postdec2,c
  4619   0042DA  EFCA  F021         	goto	l313
  4620   0042DE                     l314:
  4621                           
  4622                           ; BSR set to: 1
  4623                           ;functions.c: 158:             if (PORTBbits.RB0 == 1) {
  4624   0042DE  A081               	btfss	129,0,c	;volatile
  4625   0042E0  EF74  F021         	goto	u12681
  4626   0042E4  EF76  F021         	goto	u12680
  4627   0042E8                     u12681:
  4628   0042E8  EFBD  F021         	goto	l10318
  4629   0042EC                     u12680:
  4630   0042EC                     
  4631                           ; BSR set to: 1
  4632                           ;functions.c: 159:                 Timer[count % 3][LED_Color] = micros() - TimerStart;
  4633   0042EC  C1A0  F00D         	movff	_count,___llmod@dividend
  4634   0042F0  C1A1  F00E         	movff	_count+1,___llmod@dividend+1
  4635   0042F4  C1A2  F00F         	movff	_count+2,___llmod@dividend+2
  4636   0042F8  C1A3  F010         	movff	_count+3,___llmod@dividend+3
  4637   0042FC  0E03               	movlw	3
  4638   0042FE  6E11               	movwf	___llmod@divisor^0,c
  4639   004300  0E00               	movlw	0
  4640   004302  6E12               	movwf	(___llmod@divisor+1)^0,c
  4641   004304  0E00               	movlw	0
  4642   004306  6E13               	movwf	(___llmod@divisor+2)^0,c
  4643   004308  0E00               	movlw	0
  4644   00430A  6E14               	movwf	(___llmod@divisor+3)^0,c
  4645   00430C  ECFB  F038         	call	___llmod	;wreg free
  4646   004310  90D8               	bcf	status,0,c
  4647   004312  360D               	rlcf	?___llmod^0,f,c
  4648   004314  360E               	rlcf	(?___llmod+1)^0,f,c
  4649   004316  90D8               	bcf	status,0,c
  4650   004318  360D               	rlcf	?___llmod^0,f,c
  4651   00431A  360E               	rlcf	(?___llmod+1)^0,f,c
  4652   00431C  90D8               	bcf	status,0,c
  4653   00431E  360D               	rlcf	?___llmod^0,f,c
  4654   004320  360E               	rlcf	(?___llmod+1)^0,f,c
  4655   004322  0101               	movlb	1	; () banked
  4656   004324  51B3               	movf	_LED_Color& (0+255),w,b
  4657   004326  0D04               	mullw	4
  4658   004328  0E00               	movlw	low _Timer
  4659   00432A  24F3               	addwf	243,w,c
  4660   00432C  0100               	movlb	0	; () banked
  4661   00432E  6F90               	movwf	??_GetTimerVal& (0+255),b
  4662   004330  0E01               	movlw	high _Timer
  4663   004332  20F4               	addwfc	prodh,w,c
  4664   004334  6F91               	movwf	(??_GetTimerVal+1)& (0+255),b
  4665   004336  500D               	movf	?___llmod^0,w,c
  4666   004338  2590               	addwf	??_GetTimerVal& (0+255),w,b
  4667   00433A  6ED9               	movwf	fsr2l,c
  4668   00433C  500E               	movf	(?___llmod+1)^0,w,c
  4669   00433E  2191               	addwfc	(??_GetTimerVal+1)& (0+255),w,b
  4670   004340  6EDA               	movwf	fsr2h,c
  4671   004342  ECB7  F039         	call	_micros	;wreg free
  4672   004346  0101               	movlb	1	; () banked
  4673   004348  5190               	movf	_TimerStart& (0+255),w,b
  4674   00434A  5C01               	subwf	?_micros^0,w,c
  4675   00434C  6E16               	movwf	___xxtofl@val^0,c
  4676   00434E  5191               	movf	(_TimerStart+1)& (0+255),w,b
  4677   004350  5802               	subwfb	(?_micros+1)^0,w,c
  4678   004352  6E17               	movwf	(___xxtofl@val+1)^0,c
  4679   004354  5192               	movf	(_TimerStart+2)& (0+255),w,b
  4680   004356  5803               	subwfb	(?_micros+2)^0,w,c
  4681   004358  6E18               	movwf	(___xxtofl@val+2)^0,c
  4682   00435A  5193               	movf	(_TimerStart+3)& (0+255),w,b
  4683   00435C  5804               	subwfb	(?_micros+3)^0,w,c
  4684   00435E  6E19               	movwf	(___xxtofl@val+3)^0,c
  4685   004360  0E00               	movlw	0
  4686   004362  EC06  F02B         	call	___xxtofl
  4687   004366  C016  FFDE         	movff	?___xxtofl,postinc2
  4688   00436A  C017  FFDE         	movff	?___xxtofl+1,postinc2
  4689   00436E  C018  FFDE         	movff	?___xxtofl+2,postinc2
  4690   004372  C019  FFDE         	movff	?___xxtofl+3,postinc2
  4691                           
  4692                           ;functions.c: 160:                 break;
  4693   004376  EFE2  F021         	goto	l10320
  4694   00437A                     l10318:
  4695                           
  4696                           ; BSR set to: 1
  4697                           ;functions.c: 162:         }
  4698   00437A  51B3               	movf	_LED_Color& (0+255),w,b
  4699   00437C  0D04               	mullw	4
  4700   00437E  0E60               	movlw	low _Tmi
  4701   004380  24F3               	addwf	243,w,c
  4702   004382  6ED9               	movwf	fsr2l,c
  4703   004384  0E01               	movlw	high _Tmi
  4704   004386  20F4               	addwfc	prodh,w,c
  4705   004388  6EDA               	movwf	fsr2h,c
  4706   00438A  2ADE               	incf	postinc2,f,c
  4707   00438C  0E00               	movlw	0
  4708   00438E  22DE               	addwfc	postinc2,f,c
  4709   004390  22DE               	addwfc	postinc2,f,c
  4710   004392  22DE               	addwfc	postinc2,f,c
  4711   004394                     l313:
  4712                           
  4713                           ; BSR set to: 1
  4714   004394  51B3               	movf	_LED_Color& (0+255),w,b
  4715   004396  0D04               	mullw	4
  4716   004398  0E60               	movlw	low _Tmi
  4717   00439A  24F3               	addwf	243,w,c
  4718   00439C  6ED9               	movwf	fsr2l,c
  4719   00439E  0E01               	movlw	high _Tmi
  4720   0043A0  20F4               	addwfc	prodh,w,c
  4721   0043A2  6EDA               	movwf	fsr2h,c
  4722   0043A4  0E03               	movlw	3
  4723   0043A6  50DB               	movf	plusw2,w,c
  4724   0043A8  E10D               	bnz	u12690
  4725   0043AA  0E02               	movlw	2
  4726   0043AC  50DB               	movf	plusw2,w,c
  4727   0043AE  E10A               	bnz	u12690
  4728   0043B0  52DE               	movf	postinc2,f,c
  4729   0043B2  0E40               	movlw	64
  4730   0043B4  5CDE               	subwf	postinc2,w,c
  4731   0043B6  A0D8               	btfss	status,0,c
  4732   0043B8  EFE0  F021         	goto	u12691
  4733   0043BC  EFE2  F021         	goto	u12690
  4734   0043C0                     u12691:
  4735   0043C0  EF6F  F021         	goto	l314
  4736   0043C4                     u12690:
  4737   0043C4                     l10320:
  4738                           
  4739                           ;functions.c: 164:         LEDChangeState(2);
  4740   0043C4  0E02               	movlw	2
  4741   0043C6  ECB0  F03A         	call	_LEDChangeState
  4742   0043CA                     
  4743                           ;functions.c: 165:         Timer[4][LED_Color] = 0;
  4744   0043CA  0101               	movlb	1	; () banked
  4745   0043CC  51B3               	movf	_LED_Color& (0+255),w,b
  4746   0043CE  0D04               	mullw	4
  4747   0043D0  0E20               	movlw	low (_Timer+32)
  4748   0043D2  24F3               	addwf	243,w,c
  4749   0043D4  6ED9               	movwf	fsr2l,c
  4750   0043D6  0E01               	movlw	high (_Timer+32)
  4751   0043D8  20F4               	addwfc	prodh,w,c
  4752   0043DA  6EDA               	movwf	fsr2h,c
  4753   0043DC  0E00               	movlw	0
  4754   0043DE  6EDE               	movwf	postinc2,c
  4755   0043E0  0E00               	movlw	0
  4756   0043E2  6EDE               	movwf	postinc2,c
  4757   0043E4  0E00               	movlw	0
  4758   0043E6  6EDE               	movwf	postinc2,c
  4759   0043E8  0E00               	movlw	0
  4760   0043EA  6EDD               	movwf	postdec2,c
  4761   0043EC                     
  4762                           ; BSR set to: 1
  4763                           ;functions.c: 166:         for (int i = 0; i < 3; ++i) {
  4764   0043EC  0E00               	movlw	0
  4765   0043EE  6E7D               	movwf	(GetTimerVal@i+1)^0,c
  4766   0043F0  0E00               	movlw	0
  4767   0043F2  6E7C               	movwf	GetTimerVal@i^0,c
  4768   0043F4                     l10330:
  4769                           
  4770                           ; BSR set to: 1
  4771                           ;functions.c: 167:             Timer[4][LED_Color] += Timer[i][LED_Color];
  4772   0043F4  51B3               	movf	_LED_Color& (0+255),w,b
  4773   0043F6  0D04               	mullw	4
  4774   0043F8  0E20               	movlw	low (_Timer+32)
  4775   0043FA  24F3               	addwf	243,w,c
  4776   0043FC  6ED9               	movwf	fsr2l,c
  4777   0043FE  0E01               	movlw	high (_Timer+32)
  4778   004400  20F4               	addwfc	prodh,w,c
  4779   004402  6EDA               	movwf	fsr2h,c
  4780   004404  CFDE F056          	movff	postinc2,___fladd@b
  4781   004408  CFDE F057          	movff	postinc2,___fladd@b+1
  4782   00440C  CFDE F058          	movff	postinc2,___fladd@b+2
  4783   004410  CFDE F059          	movff	postinc2,___fladd@b+3
  4784   004414  C07C  F090         	movff	GetTimerVal@i,??_GetTimerVal
  4785   004418  C07D  F091         	movff	GetTimerVal@i+1,??_GetTimerVal+1
  4786   00441C  0100               	movlb	0	; () banked
  4787   00441E  90D8               	bcf	status,0,c
  4788   004420  3790               	rlcf	??_GetTimerVal& (0+255),f,b
  4789   004422  3791               	rlcf	(??_GetTimerVal+1)& (0+255),f,b
  4790   004424  90D8               	bcf	status,0,c
  4791   004426  3790               	rlcf	??_GetTimerVal& (0+255),f,b
  4792   004428  3791               	rlcf	(??_GetTimerVal+1)& (0+255),f,b
  4793   00442A  90D8               	bcf	status,0,c
  4794   00442C  3790               	rlcf	??_GetTimerVal& (0+255),f,b
  4795   00442E  3791               	rlcf	(??_GetTimerVal+1)& (0+255),f,b
  4796   004430  0101               	movlb	1	; () banked
  4797   004432  51B3               	movf	_LED_Color& (0+255),w,b
  4798   004434  0D04               	mullw	4
  4799   004436  0E00               	movlw	low _Timer
  4800   004438  24F3               	addwf	243,w,c
  4801   00443A  0100               	movlb	0	; () banked
  4802   00443C  6F92               	movwf	(??_GetTimerVal+2)& (0+255),b
  4803   00443E  0E01               	movlw	high _Timer
  4804   004440  20F4               	addwfc	prodh,w,c
  4805   004442  6F93               	movwf	(??_GetTimerVal+3)& (0+255),b
  4806   004444  5190               	movf	??_GetTimerVal& (0+255),w,b
  4807   004446  2592               	addwf	(??_GetTimerVal+2)& (0+255),w,b
  4808   004448  6ED9               	movwf	fsr2l,c
  4809   00444A  5191               	movf	(??_GetTimerVal+1)& (0+255),w,b
  4810   00444C  2193               	addwfc	(??_GetTimerVal+3)& (0+255),w,b
  4811   00444E  6EDA               	movwf	fsr2h,c
  4812   004450  CFDE F05A          	movff	postinc2,___fladd@a
  4813   004454  CFDE F05B          	movff	postinc2,___fladd@a+1
  4814   004458  CFDE F05C          	movff	postinc2,___fladd@a+2
  4815   00445C  CFDE F05D          	movff	postinc2,___fladd@a+3
  4816   004460  ECB3  F016         	call	___fladd	;wreg free
  4817   004464  0101               	movlb	1	; () banked
  4818   004466  51B3               	movf	_LED_Color& (0+255),w,b
  4819   004468  0D04               	mullw	4
  4820   00446A  0E20               	movlw	low (_Timer+32)
  4821   00446C  24F3               	addwf	243,w,c
  4822   00446E  6ED9               	movwf	fsr2l,c
  4823   004470  0E01               	movlw	high (_Timer+32)
  4824   004472  20F4               	addwfc	prodh,w,c
  4825   004474  6EDA               	movwf	fsr2h,c
  4826   004476  C056  FFDE         	movff	?___fladd,postinc2
  4827   00447A  C057  FFDE         	movff	?___fladd+1,postinc2
  4828   00447E  C058  FFDE         	movff	?___fladd+2,postinc2
  4829   004482  C059  FFDE         	movff	?___fladd+3,postinc2
  4830   004486                     
  4831                           ; BSR set to: 1
  4832                           ;functions.c: 168:         }
  4833   004486  4A7C               	infsnz	GetTimerVal@i^0,f,c
  4834   004488  2A7D               	incf	(GetTimerVal@i+1)^0,f,c
  4835   00448A                     
  4836                           ; BSR set to: 1
  4837   00448A  BE7D               	btfsc	(GetTimerVal@i+1)^0,7,c
  4838   00448C  EF51  F022         	goto	u12701
  4839   004490  507D               	movf	(GetTimerVal@i+1)^0,w,c
  4840   004492  E109               	bnz	u12700
  4841   004494  0E03               	movlw	3
  4842   004496  5C7C               	subwf	GetTimerVal@i^0,w,c
  4843   004498  A0D8               	btfss	status,0,c
  4844   00449A  EF51  F022         	goto	u12701
  4845   00449E  EF53  F022         	goto	u12700
  4846   0044A2                     u12701:
  4847   0044A2  EFFA  F021         	goto	l10330
  4848   0044A6                     u12700:
  4849   0044A6                     
  4850                           ; BSR set to: 1
  4851                           ;functions.c: 169:         Timer[4][LED_Color] /= 3;
  4852   0044A6  51B3               	movf	_LED_Color& (0+255),w,b
  4853   0044A8  0D04               	mullw	4
  4854   0044AA  0E20               	movlw	low (_Timer+32)
  4855   0044AC  24F3               	addwf	243,w,c
  4856   0044AE  6ED9               	movwf	fsr2l,c
  4857   0044B0  0E01               	movlw	high (_Timer+32)
  4858   0044B2  20F4               	addwfc	prodh,w,c
  4859   0044B4  6EDA               	movwf	fsr2h,c
  4860   0044B6  CFDE F024          	movff	postinc2,___fldiv@b
  4861   0044BA  CFDE F025          	movff	postinc2,___fldiv@b+1
  4862   0044BE  CFDE F026          	movff	postinc2,___fldiv@b+2
  4863   0044C2  CFDE F027          	movff	postinc2,___fldiv@b+3
  4864   0044C6  0E00               	movlw	0
  4865   0044C8  6E28               	movwf	___fldiv@a^0,c
  4866   0044CA  0E00               	movlw	0
  4867   0044CC  6E29               	movwf	(___fldiv@a+1)^0,c
  4868   0044CE  0E40               	movlw	64
  4869   0044D0  6E2A               	movwf	(___fldiv@a+2)^0,c
  4870   0044D2  0E40               	movlw	64
  4871   0044D4  6E2B               	movwf	(___fldiv@a+3)^0,c
  4872   0044D6  EC6E  F01F         	call	___fldiv	;wreg free
  4873   0044DA  0101               	movlb	1	; () banked
  4874   0044DC  51B3               	movf	_LED_Color& (0+255),w,b
  4875   0044DE  0D04               	mullw	4
  4876   0044E0  0E20               	movlw	low (_Timer+32)
  4877   0044E2  24F3               	addwf	243,w,c
  4878   0044E4  6ED9               	movwf	fsr2l,c
  4879   0044E6  0E01               	movlw	high (_Timer+32)
  4880   0044E8  20F4               	addwfc	prodh,w,c
  4881   0044EA  6EDA               	movwf	fsr2h,c
  4882   0044EC  C024  FFDE         	movff	?___fldiv,postinc2
  4883   0044F0  C025  FFDE         	movff	?___fldiv+1,postinc2
  4884   0044F4  C026  FFDE         	movff	?___fldiv+2,postinc2
  4885   0044F8  C027  FFDE         	movff	?___fldiv+3,postinc2
  4886   0044FC                     
  4887                           ; BSR set to: 1
  4888                           ;functions.c: 170:     }
  4889   0044FC  2BB3               	incf	_LED_Color& (0+255),f,b
  4890   0044FE  EF46  F021         	goto	l10304
  4891   004502                     l319:
  4892                           
  4893                           ; BSR set to: 1
  4894   004502  0012               	return		;funcret
  4895   004504                     __end_of_GetTimerVal:
  4896                           	callstack 0
  4897                           
  4898 ;; *************** function _WaitPeriod *****************
  4899 ;; Defined at:
  4900 ;;		line 203 in file "functions.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;Total ram usage:        0 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; Hardware stack levels required when called: 2
  4921 ;; This function calls:
  4922 ;;		___flge
  4923 ;;		___flmul
  4924 ;;		___llmod
  4925 ;;		___xxtofl
  4926 ;;		_micros
  4927 ;; This function is called by:
  4928 ;;		_GetTimerVal
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text18
  4933   00630A                     __ptext18:
  4934                           	callstack 0
  4935   00630A                     _WaitPeriod:
  4936                           	callstack 23
  4937   00630A                     
  4938                           ;functions.c: 205:         if (LED_Color == 0) {
  4939   00630A  0101               	movlb	1	; () banked
  4940   00630C  51B3               	movf	_LED_Color& (0+255),w,b
  4941   00630E  A4D8               	btfss	status,2,c
  4942   006310  EF8C  F031         	goto	u12631
  4943   006314  EF8E  F031         	goto	u12630
  4944   006318                     u12631:
  4945   006318  EFB1  F031         	goto	l10292
  4946   00631C                     u12630:
  4947   00631C                     l10288:
  4948                           
  4949                           ;functions.c: 207:                 if (micros() % Measured_Period < 100) {
  4950   00631C  ECB7  F039         	call	_micros	;wreg free
  4951   006320  C001  F00D         	movff	?_micros,___llmod@dividend
  4952   006324  C002  F00E         	movff	?_micros+1,___llmod@dividend+1
  4953   006328  C003  F00F         	movff	?_micros+2,___llmod@dividend+2
  4954   00632C  C004  F010         	movff	?_micros+3,___llmod@dividend+3
  4955   006330  C184  F011         	movff	_Measured_Period,___llmod@divisor
  4956   006334  C185  F012         	movff	_Measured_Period+1,___llmod@divisor+1
  4957   006338  C186  F013         	movff	_Measured_Period+2,___llmod@divisor+2
  4958   00633C  C187  F014         	movff	_Measured_Period+3,___llmod@divisor+3
  4959   006340  ECFB  F038         	call	___llmod	;wreg free
  4960   006344  5010               	movf	(?___llmod+3)^0,w,c
  4961   006346  100F               	iorwf	(?___llmod+2)^0,w,c
  4962   006348  100E               	iorwf	(?___llmod+1)^0,w,c
  4963   00634A  E107               	bnz	u12641
  4964   00634C  0E64               	movlw	100
  4965   00634E  5C0D               	subwf	?___llmod^0,w,c
  4966   006350  B0D8               	btfsc	status,0,c
  4967   006352  EFAD  F031         	goto	u12641
  4968   006356  EFAF  F031         	goto	u12640
  4969   00635A                     u12641:
  4970   00635A  EF8E  F031         	goto	l10288
  4971   00635E                     u12640:
  4972   00635E  EF0F  F032         	goto	l350
  4973   006362                     l10292:
  4974                           
  4975                           ; BSR set to: 1
  4976   006362  05B3               	decf	_LED_Color& (0+255),w,b
  4977   006364  A4D8               	btfss	status,2,c
  4978   006366  EFB7  F031         	goto	u12651
  4979   00636A  EFB9  F031         	goto	u12650
  4980   00636E                     u12651:
  4981   00636E  EF0F  F032         	goto	l350
  4982   006372                     u12650:
  4983   006372                     l10294:
  4984                           
  4985                           ;functions.c: 213:                 if (micros() % Measured_Period > Measured_Period * 0.
      +                          3) {
  4986   006372  0E9A               	movlw	154
  4987   006374  6E41               	movwf	___flmul@a^0,c
  4988   006376  0E99               	movlw	153
  4989   006378  6E42               	movwf	(___flmul@a+1)^0,c
  4990   00637A  0E99               	movlw	153
  4991   00637C  6E43               	movwf	(___flmul@a+2)^0,c
  4992   00637E  0E3E               	movlw	62
  4993   006380  6E44               	movwf	(___flmul@a+3)^0,c
  4994   006382  C184  F016         	movff	_Measured_Period,___xxtofl@val
  4995   006386  C185  F017         	movff	_Measured_Period+1,___xxtofl@val+1
  4996   00638A  C186  F018         	movff	_Measured_Period+2,___xxtofl@val+2
  4997   00638E  C187  F019         	movff	_Measured_Period+3,___xxtofl@val+3
  4998   006392  0E00               	movlw	0
  4999   006394  EC06  F02B         	call	___xxtofl
  5000   006398  C016  F03D         	movff	?___xxtofl,___flmul@b
  5001   00639C  C017  F03E         	movff	?___xxtofl+1,___flmul@b+1
  5002   0063A0  C018  F03F         	movff	?___xxtofl+2,___flmul@b+2
  5003   0063A4  C019  F040         	movff	?___xxtofl+3,___flmul@b+3
  5004   0063A8  EC59  F01D         	call	___flmul	;wreg free
  5005   0063AC  C03D  F084         	movff	?___flmul,___flge@ff1
  5006   0063B0  C03E  F085         	movff	?___flmul+1,___flge@ff1+1
  5007   0063B4  C03F  F086         	movff	?___flmul+2,___flge@ff1+2
  5008   0063B8  C040  F087         	movff	?___flmul+3,___flge@ff1+3
  5009   0063BC  C184  F011         	movff	_Measured_Period,___llmod@divisor
  5010   0063C0  C185  F012         	movff	_Measured_Period+1,___llmod@divisor+1
  5011   0063C4  C186  F013         	movff	_Measured_Period+2,___llmod@divisor+2
  5012   0063C8  C187  F014         	movff	_Measured_Period+3,___llmod@divisor+3
  5013   0063CC  ECB7  F039         	call	_micros	;wreg free
  5014   0063D0  C001  F00D         	movff	?_micros,___llmod@dividend
  5015   0063D4  C002  F00E         	movff	?_micros+1,___llmod@dividend+1
  5016   0063D8  C003  F00F         	movff	?_micros+2,___llmod@dividend+2
  5017   0063DC  C004  F010         	movff	?_micros+3,___llmod@dividend+3
  5018   0063E0  ECFB  F038         	call	___llmod	;wreg free
  5019   0063E4  C00D  F016         	movff	?___llmod,___xxtofl@val
  5020   0063E8  C00E  F017         	movff	?___llmod+1,___xxtofl@val+1
  5021   0063EC  C00F  F018         	movff	?___llmod+2,___xxtofl@val+2
  5022   0063F0  C010  F019         	movff	?___llmod+3,___xxtofl@val+3
  5023   0063F4  0E00               	movlw	0
  5024   0063F6  EC06  F02B         	call	___xxtofl
  5025   0063FA  C016  F088         	movff	?___xxtofl,___flge@ff2
  5026   0063FE  C017  F089         	movff	?___xxtofl+1,___flge@ff2+1
  5027   006402  C018  F08A         	movff	?___xxtofl+2,___flge@ff2+2
  5028   006406  C019  F08B         	movff	?___xxtofl+3,___flge@ff2+3
  5029   00640A  EC1C  F033         	call	___flge	;wreg free
  5030   00640E  0100               	movlb	0	; () banked
  5031   006410  B0D8               	btfsc	status,0,c
  5032   006412  EF0D  F032         	goto	u12661
  5033   006416  EF0F  F032         	goto	u12660
  5034   00641A                     u12661:
  5035   00641A  EFB9  F031         	goto	l10294
  5036   00641E                     u12660:
  5037   00641E                     l350:
  5038   00641E  0012               	return		;funcret
  5039   006420                     __end_of_WaitPeriod:
  5040                           	callstack 0
  5041                           
  5042 ;; *************** function _micros *****************
  5043 ;; Defined at:
  5044 ;;		line 139 in file "functions.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;		None
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  timerValue      2   10[COMRAM] unsigned int 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  4    0[COMRAM] unsigned long 
  5051 ;; Registers used:
  5052 ;;		wreg, status,2, status,0
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5058 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5060 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5061 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5062 ;;Total ram usage:       12 bytes
  5063 ;; Hardware stack levels used: 1
  5064 ;; Hardware stack levels required when called: 1
  5065 ;; This function calls:
  5066 ;;		Nothing
  5067 ;; This function is called by:
  5068 ;;		_GetTimerVal
  5069 ;;		_WaitPeriod
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text19
  5074   00736E                     __ptext19:
  5075                           	callstack 0
  5076   00736E                     _micros:
  5077                           	callstack 24
  5078   00736E                     
  5079                           ;functions.c: 140:     unsigned int timerValue;;functions.c: 144:     timerValue = (unsi
      +                          gned int)(TMR1L | (TMR1H << 8));
  5080   00736E  50CF               	movf	207,w,c	;volatile
  5081   007370  6E06               	movwf	(??_micros+1)^0,c
  5082   007372  6A05               	clrf	??_micros^0,c
  5083   007374  50CE               	movf	206,w,c	;volatile
  5084   007376  6E07               	movwf	(??_micros+2)^0,c
  5085   007378  6A08               	clrf	(??_micros+3)^0,c
  5086   00737A  5005               	movf	??_micros^0,w,c
  5087   00737C  1007               	iorwf	(??_micros+2)^0,w,c
  5088   00737E  6E0B               	movwf	micros@timerValue^0,c
  5089   007380  5006               	movf	(??_micros+1)^0,w,c
  5090   007382  1008               	iorwf	(??_micros+3)^0,w,c
  5091   007384  6E0C               	movwf	(micros@timerValue+1)^0,c
  5092                           
  5093                           ;functions.c: 145:     microseconds = (timerOverflowCount << 16) + (timerValue * 4);
  5094   007386  C00B  F005         	movff	micros@timerValue,??_micros
  5095   00738A  C00C  F006         	movff	micros@timerValue+1,??_micros+1
  5096   00738E  90D8               	bcf	status,0,c
  5097   007390  3605               	rlcf	??_micros^0,f,c
  5098   007392  3606               	rlcf	(??_micros+1)^0,f,c
  5099   007394  90D8               	bcf	status,0,c
  5100   007396  3605               	rlcf	??_micros^0,f,c
  5101   007398  3606               	rlcf	(??_micros+1)^0,f,c
  5102   00739A  C18C  F007         	movff	_timerOverflowCount,??_micros+2	;volatile
  5103   00739E  C18D  F008         	movff	_timerOverflowCount+1,??_micros+3	;volatile
  5104   0073A2  C18E  F009         	movff	_timerOverflowCount+2,??_micros+4	;volatile
  5105   0073A6  C18F  F00A         	movff	_timerOverflowCount+3,??_micros+5	;volatile
  5106   0073AA  C008  F00A         	movff	??_micros+3,??_micros+5
  5107   0073AE  C007  F009         	movff	??_micros+2,??_micros+4
  5108   0073B2  6A08               	clrf	(??_micros+3)^0,c
  5109   0073B4  6A07               	clrf	(??_micros+2)^0,c
  5110   0073B6  5005               	movf	??_micros^0,w,c
  5111   0073B8  2407               	addwf	(??_micros+2)^0,w,c
  5112   0073BA  0101               	movlb	1	; () banked
  5113   0073BC  6F88               	movwf	_microseconds& (0+255),b	;volatile
  5114   0073BE  5006               	movf	(??_micros+1)^0,w,c
  5115   0073C0  2008               	addwfc	(??_micros+3)^0,w,c
  5116   0073C2  6F89               	movwf	(_microseconds+1)& (0+255),b	;volatile
  5117   0073C4  0E00               	movlw	0
  5118   0073C6  2009               	addwfc	(??_micros+4)^0,w,c
  5119   0073C8  6F8A               	movwf	(_microseconds+2)& (0+255),b	;volatile
  5120   0073CA  0E00               	movlw	0
  5121   0073CC  200A               	addwfc	(??_micros+5)^0,w,c
  5122   0073CE  6F8B               	movwf	(_microseconds+3)& (0+255),b	;volatile
  5123   0073D0                     
  5124                           ; BSR set to: 1
  5125                           ;functions.c: 147:     return microseconds;
  5126   0073D0  C188  F001         	movff	_microseconds,?_micros	;volatile
  5127   0073D4  C189  F002         	movff	_microseconds+1,?_micros+1	;volatile
  5128   0073D8  C18A  F003         	movff	_microseconds+2,?_micros+2	;volatile
  5129   0073DC  C18B  F004         	movff	_microseconds+3,?_micros+3	;volatile
  5130   0073E0                     
  5131                           ; BSR set to: 1
  5132   0073E0  0012               	return		;funcret
  5133   0073E2                     __end_of_micros:
  5134                           	callstack 0
  5135                           
  5136 ;; *************** function ___llmod *****************
  5137 ;; Defined at:
  5138 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\llmod.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  dividend        4   12[COMRAM] unsigned long 
  5141 ;;  divisor         4   16[COMRAM] unsigned long 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  counter         1   20[COMRAM] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  4   12[COMRAM] unsigned long 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5153 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;Total ram usage:        9 bytes
  5158 ;; Hardware stack levels used: 1
  5159 ;; Hardware stack levels required when called: 1
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_GetTimerVal
  5164 ;;		_WaitPeriod
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text20
  5169   0071F6                     __ptext20:
  5170                           	callstack 0
  5171   0071F6                     ___llmod:
  5172                           	callstack 24
  5173   0071F6  5011               	movf	___llmod@divisor^0,w,c
  5174   0071F8  1012               	iorwf	(___llmod@divisor+1)^0,w,c
  5175   0071FA  1013               	iorwf	(___llmod@divisor+2)^0,w,c
  5176   0071FC  1014               	iorwf	(___llmod@divisor+3)^0,w,c
  5177   0071FE  B4D8               	btfsc	status,2,c
  5178   007200  EF04  F039         	goto	u8561
  5179   007204  EF06  F039         	goto	u8560
  5180   007208                     u8561:
  5181   007208  EF36  F039         	goto	l876
  5182   00720C                     u8560:
  5183   00720C  0E01               	movlw	1
  5184   00720E  6E15               	movwf	___llmod@counter^0,c
  5185   007210  EF10  F039         	goto	l7446
  5186   007214                     l7444:
  5187   007214  90D8               	bcf	status,0,c
  5188   007216  3611               	rlcf	___llmod@divisor^0,f,c
  5189   007218  3612               	rlcf	(___llmod@divisor+1)^0,f,c
  5190   00721A  3613               	rlcf	(___llmod@divisor+2)^0,f,c
  5191   00721C  3614               	rlcf	(___llmod@divisor+3)^0,f,c
  5192   00721E  2A15               	incf	___llmod@counter^0,f,c
  5193   007220                     l7446:
  5194   007220  AE14               	btfss	(___llmod@divisor+3)^0,7,c
  5195   007222  EF15  F039         	goto	u8571
  5196   007226  EF17  F039         	goto	u8570
  5197   00722A                     u8571:
  5198   00722A  EF0A  F039         	goto	l7444
  5199   00722E                     u8570:
  5200   00722E                     l7448:
  5201   00722E  5011               	movf	___llmod@divisor^0,w,c
  5202   007230  5C0D               	subwf	___llmod@dividend^0,w,c
  5203   007232  5012               	movf	(___llmod@divisor+1)^0,w,c
  5204   007234  580E               	subwfb	(___llmod@dividend+1)^0,w,c
  5205   007236  5013               	movf	(___llmod@divisor+2)^0,w,c
  5206   007238  580F               	subwfb	(___llmod@dividend+2)^0,w,c
  5207   00723A  5014               	movf	(___llmod@divisor+3)^0,w,c
  5208   00723C  5810               	subwfb	(___llmod@dividend+3)^0,w,c
  5209   00723E  A0D8               	btfss	status,0,c
  5210   007240  EF24  F039         	goto	u8581
  5211   007244  EF26  F039         	goto	u8580
  5212   007248                     u8581:
  5213   007248  EF2E  F039         	goto	l7452
  5214   00724C                     u8580:
  5215   00724C  5011               	movf	___llmod@divisor^0,w,c
  5216   00724E  5E0D               	subwf	___llmod@dividend^0,f,c
  5217   007250  5012               	movf	(___llmod@divisor+1)^0,w,c
  5218   007252  5A0E               	subwfb	(___llmod@dividend+1)^0,f,c
  5219   007254  5013               	movf	(___llmod@divisor+2)^0,w,c
  5220   007256  5A0F               	subwfb	(___llmod@dividend+2)^0,f,c
  5221   007258  5014               	movf	(___llmod@divisor+3)^0,w,c
  5222   00725A  5A10               	subwfb	(___llmod@dividend+3)^0,f,c
  5223   00725C                     l7452:
  5224   00725C  90D8               	bcf	status,0,c
  5225   00725E  3214               	rrcf	(___llmod@divisor+3)^0,f,c
  5226   007260  3213               	rrcf	(___llmod@divisor+2)^0,f,c
  5227   007262  3212               	rrcf	(___llmod@divisor+1)^0,f,c
  5228   007264  3211               	rrcf	___llmod@divisor^0,f,c
  5229   007266  2E15               	decfsz	___llmod@counter^0,f,c
  5230   007268  EF17  F039         	goto	l7448
  5231   00726C                     l876:
  5232   00726C  C00D  F00D         	movff	___llmod@dividend,?___llmod
  5233   007270  C00E  F00E         	movff	___llmod@dividend+1,?___llmod+1
  5234   007274  C00F  F00F         	movff	___llmod@dividend+2,?___llmod+2
  5235   007278  C010  F010         	movff	___llmod@dividend+3,?___llmod+3
  5236   00727C  0012               	return		;funcret
  5237   00727E                     __end_of___llmod:
  5238                           	callstack 0
  5239                           
  5240 ;; *************** function _LEDChangeState *****************
  5241 ;; Defined at:
  5242 ;;		line 70 in file "functions.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  State           1    wreg     unsigned char 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  State           1    2[COMRAM] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5257 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;Total ram usage:        3 bytes
  5261 ;; Hardware stack levels used: 1
  5262 ;; Hardware stack levels required when called: 1
  5263 ;; This function calls:
  5264 ;;		Nothing
  5265 ;; This function is called by:
  5266 ;;		_main
  5267 ;;		_GetTimerVal
  5268 ;;		_DeviceInitialization
  5269 ;;		_DetectorTest
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text21
  5274   007560                     __ptext21:
  5275                           	callstack 0
  5276   007560                     _LEDChangeState:
  5277                           	callstack 27
  5278                           
  5279                           ;incstack = 0
  5280                           ;LEDChangeState@State stored from wreg
  5281   007560  6E03               	movwf	LEDChangeState@State^0,c
  5282   007562                     
  5283                           ;functions.c: 71:   switch(State){
  5284   007562  EFC2  F03A         	goto	l7506
  5285   007566                     l276:
  5286                           
  5287                           ;functions.c: 73:       PORTBbits.RB2 = 0;
  5288   007566  9481               	bcf	129,2,c	;volatile
  5289                           
  5290                           ;functions.c: 74:       PORTBbits.RB3 = 1;
  5291   007568  8681               	bsf	129,3,c	;volatile
  5292                           
  5293                           ;functions.c: 75:       PORTBbits.RB1 = 0;
  5294   00756A  9281               	bcf	129,1,c	;volatile
  5295                           
  5296                           ;functions.c: 76:       break;
  5297   00756C  EFDB  F03A         	goto	l281
  5298   007570                     l278:
  5299                           
  5300                           ;functions.c: 78:       PORTBbits.RB2 = 1;
  5301   007570  8481               	bsf	129,2,c	;volatile
  5302                           
  5303                           ;functions.c: 79:       PORTBbits.RB3 = 0;
  5304   007572  9681               	bcf	129,3,c	;volatile
  5305                           
  5306                           ;functions.c: 80:       PORTBbits.RB1 = 0;
  5307   007574  9281               	bcf	129,1,c	;volatile
  5308                           
  5309                           ;functions.c: 81:       break;
  5310   007576  EFDB  F03A         	goto	l281
  5311   00757A                     l279:
  5312                           
  5313                           ;functions.c: 83:       PORTBbits.RB2 = 1;
  5314   00757A  8481               	bsf	129,2,c	;volatile
  5315                           
  5316                           ;functions.c: 84:       PORTBbits.RB3 = 1;
  5317   00757C  8681               	bsf	129,3,c	;volatile
  5318                           
  5319                           ;functions.c: 85:       PORTBbits.RB1 = 1;
  5320   00757E  8281               	bsf	129,1,c	;volatile
  5321                           
  5322                           ;functions.c: 86:       break;
  5323   007580  EFDB  F03A         	goto	l281
  5324   007584                     l7506:
  5325   007584  5003               	movf	LEDChangeState@State^0,w,c
  5326   007586  6E01               	movwf	??_LEDChangeState^0,c
  5327   007588  6A02               	clrf	(??_LEDChangeState+1)^0,c
  5328                           
  5329                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5330                           ; Switch size 1, requested type "simple"
  5331                           ; Number of cases is 1, Range of values is 0 to 0
  5332                           ; switch strategies available:
  5333                           ; Name         Instructions Cycles
  5334                           ; simple_byte            4     3 (average)
  5335                           ;	Chosen strategy is simple_byte
  5336   00758A  5002               	movf	(??_LEDChangeState+1)^0,w,c
  5337   00758C  0A00               	xorlw	0	; case 0
  5338   00758E  B4D8               	btfsc	status,2,c
  5339   007590  EFCC  F03A         	goto	l11048
  5340   007594  EFDB  F03A         	goto	l281
  5341   007598                     l11048:
  5342                           
  5343                           ; Switch size 1, requested type "simple"
  5344                           ; Number of cases is 3, Range of values is 0 to 2
  5345                           ; switch strategies available:
  5346                           ; Name         Instructions Cycles
  5347                           ; simple_byte           10     6 (average)
  5348                           ;	Chosen strategy is simple_byte
  5349   007598  5001               	movf	??_LEDChangeState^0,w,c
  5350   00759A  0A00               	xorlw	0	; case 0
  5351   00759C  B4D8               	btfsc	status,2,c
  5352   00759E  EFB3  F03A         	goto	l276
  5353   0075A2  0A01               	xorlw	1	; case 1
  5354   0075A4  B4D8               	btfsc	status,2,c
  5355   0075A6  EFB8  F03A         	goto	l278
  5356   0075AA  0A03               	xorlw	3	; case 2
  5357   0075AC  B4D8               	btfsc	status,2,c
  5358   0075AE  EFBD  F03A         	goto	l279
  5359   0075B2  EFDB  F03A         	goto	l281
  5360   0075B6                     l281:
  5361   0075B6  0012               	return		;funcret
  5362   0075B8                     __end_of_LEDChangeState:
  5363                           	callstack 0
  5364                           
  5365 ;; *************** function _TimerPeriodCheck *****************
  5366 ;; Defined at:
  5367 ;;		line 411 in file "functions.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  i               2   16[BANK0 ] int 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      void 
  5374 ;; Registers used:
  5375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;Total ram usage:        4 bytes
  5386 ;; Hardware stack levels used: 1
  5387 ;; Hardware stack levels required when called: 3
  5388 ;; This function calls:
  5389 ;;		___fladd
  5390 ;;		___fldiv
  5391 ;;		___flge
  5392 ;;		___flsub
  5393 ;;		_millis
  5394 ;; This function is called by:
  5395 ;;		_main
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text22
  5400   0057C0                     __ptext22:
  5401                           	callstack 0
  5402   0057C0                     _TimerPeriodCheck:
  5403                           	callstack 27
  5404   0057C0                     
  5405                           ;functions.c: 412:   Period=0;
  5406   0057C0  0E00               	movlw	0
  5407   0057C2  0101               	movlb	1	; () banked
  5408   0057C4  6FB2               	movwf	_Period& (0+255),b
  5409   0057C6                     
  5410                           ; BSR set to: 1
  5411                           ;functions.c: 413:   detTimer[count%8]=Tm_prev-Timer[4][0];
  5412   0057C6  C198  F074         	movff	_Tm_prev,___flsub@b
  5413   0057CA  C199  F075         	movff	_Tm_prev+1,___flsub@b+1
  5414   0057CE  C19A  F076         	movff	_Tm_prev+2,___flsub@b+2
  5415   0057D2  C19B  F077         	movff	_Tm_prev+3,___flsub@b+3
  5416   0057D6  C120  F078         	movff	_Timer+32,___flsub@a
  5417   0057DA  C121  F079         	movff	_Timer+33,___flsub@a+1
  5418   0057DE  C122  F07A         	movff	_Timer+34,___flsub@a+2
  5419   0057E2  C123  F07B         	movff	_Timer+35,___flsub@a+3
  5420   0057E6  EC54  F03B         	call	___flsub	;wreg free
  5421   0057EA  0E07               	movlw	7
  5422   0057EC  0101               	movlb	1	; () banked
  5423   0057EE  15A0               	andwf	_count& (0+255),w,b
  5424   0057F0  6E7C               	movwf	??_TimerPeriodCheck^0,c
  5425   0057F2  0E00               	movlw	0
  5426   0057F4  15A1               	andwf	(_count+1)& (0+255),w,b
  5427   0057F6  6E7D               	movwf	(??_TimerPeriodCheck+1)^0,c
  5428   0057F8  90D8               	bcf	status,0,c
  5429   0057FA  367C               	rlcf	??_TimerPeriodCheck^0,f,c
  5430   0057FC  367D               	rlcf	(??_TimerPeriodCheck+1)^0,f,c
  5431   0057FE  90D8               	bcf	status,0,c
  5432   005800  367C               	rlcf	??_TimerPeriodCheck^0,f,c
  5433   005802  367D               	rlcf	(??_TimerPeriodCheck+1)^0,f,c
  5434   005804  0E00               	movlw	low _detTimer
  5435   005806  247C               	addwf	??_TimerPeriodCheck^0,w,c
  5436   005808  6ED9               	movwf	fsr2l,c
  5437   00580A  0E03               	movlw	high _detTimer
  5438   00580C  207D               	addwfc	(??_TimerPeriodCheck+1)^0,w,c
  5439   00580E  6EDA               	movwf	fsr2h,c
  5440   005810  C074  FFDE         	movff	?___flsub,postinc2
  5441   005814  C075  FFDE         	movff	?___flsub+1,postinc2
  5442   005818  C076  FFDE         	movff	?___flsub+2,postinc2
  5443   00581C  C077  FFDE         	movff	?___flsub+3,postinc2
  5444   005820                     
  5445                           ; BSR set to: 1
  5446                           ;functions.c: 414:   average_detTimer8=0;
  5447   005820  0E00               	movlw	0
  5448   005822  6F94               	movwf	_average_detTimer8& (0+255),b
  5449   005824  0E00               	movlw	0
  5450   005826  6F95               	movwf	(_average_detTimer8+1)& (0+255),b
  5451   005828  0E00               	movlw	0
  5452   00582A  6F96               	movwf	(_average_detTimer8+2)& (0+255),b
  5453   00582C  0E00               	movlw	0
  5454   00582E  6F97               	movwf	(_average_detTimer8+3)& (0+255),b
  5455   005830                     
  5456                           ; BSR set to: 1
  5457                           ;functions.c: 415:   for(int i=0;i<8;++i){
  5458   005830  0E00               	movlw	0
  5459   005832  0100               	movlb	0	; () banked
  5460   005834  6F91               	movwf	(TimerPeriodCheck@i+1)& (0+255),b
  5461   005836  0E00               	movlw	0
  5462   005838  6F90               	movwf	TimerPeriodCheck@i& (0+255),b
  5463   00583A                     l10584:
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;functions.c: 416:     average_detTimer8+=detTimer[i];
  5467   00583A  C194  F056         	movff	_average_detTimer8,___fladd@b
  5468   00583E  C195  F057         	movff	_average_detTimer8+1,___fladd@b+1
  5469   005842  C196  F058         	movff	_average_detTimer8+2,___fladd@b+2
  5470   005846  C197  F059         	movff	_average_detTimer8+3,___fladd@b+3
  5471   00584A  0E00               	movlw	low _detTimer
  5472   00584C  6E7C               	movwf	??_TimerPeriodCheck^0,c
  5473   00584E  0E03               	movlw	high _detTimer
  5474   005850  6E7D               	movwf	(??_TimerPeriodCheck+1)^0,c
  5475   005852  90D8               	bcf	status,0,c
  5476   005854  3590               	rlcf	TimerPeriodCheck@i& (0+255),w,b
  5477   005856  6ED9               	movwf	fsr2l,c
  5478   005858  3591               	rlcf	(TimerPeriodCheck@i+1)& (0+255),w,b
  5479   00585A  6EDA               	movwf	fsr2h,c
  5480   00585C  90D8               	bcf	status,0,c
  5481   00585E  36D9               	rlcf	fsr2l,f,c
  5482   005860  36DA               	rlcf	fsr2h,f,c
  5483   005862  507C               	movf	??_TimerPeriodCheck^0,w,c
  5484   005864  26D9               	addwf	fsr2l,f,c
  5485   005866  507D               	movf	(??_TimerPeriodCheck+1)^0,w,c
  5486   005868  22DA               	addwfc	fsr2h,f,c
  5487   00586A  CFDE F05A          	movff	postinc2,___fladd@a
  5488   00586E  CFDE F05B          	movff	postinc2,___fladd@a+1
  5489   005872  CFDE F05C          	movff	postinc2,___fladd@a+2
  5490   005876  CFDE F05D          	movff	postinc2,___fladd@a+3
  5491   00587A  ECB3  F016         	call	___fladd	;wreg free
  5492   00587E  C056  F194         	movff	?___fladd,_average_detTimer8
  5493   005882  C057  F195         	movff	?___fladd+1,_average_detTimer8+1
  5494   005886  C058  F196         	movff	?___fladd+2,_average_detTimer8+2
  5495   00588A  C059  F197         	movff	?___fladd+3,_average_detTimer8+3
  5496   00588E                     
  5497                           ;functions.c: 417:   }
  5498   00588E  0100               	movlb	0	; () banked
  5499   005890  4B90               	infsnz	TimerPeriodCheck@i& (0+255),f,b
  5500   005892  2B91               	incf	(TimerPeriodCheck@i+1)& (0+255),f,b
  5501   005894                     
  5502                           ; BSR set to: 0
  5503   005894  BF91               	btfsc	(TimerPeriodCheck@i+1)& (0+255),7,b
  5504   005896  EF56  F02C         	goto	u13061
  5505   00589A  5191               	movf	(TimerPeriodCheck@i+1)& (0+255),w,b
  5506   00589C  E109               	bnz	u13060
  5507   00589E  0E08               	movlw	8
  5508   0058A0  5D90               	subwf	TimerPeriodCheck@i& (0+255),w,b
  5509   0058A2  A0D8               	btfss	status,0,c
  5510   0058A4  EF56  F02C         	goto	u13061
  5511   0058A8  EF58  F02C         	goto	u13060
  5512   0058AC                     u13061:
  5513   0058AC  EF1D  F02C         	goto	l10584
  5514   0058B0                     u13060:
  5515   0058B0                     
  5516                           ; BSR set to: 0
  5517                           ;functions.c: 418:   average_detTimer8=average_detTimer8/8;
  5518   0058B0  C194  F024         	movff	_average_detTimer8,___fldiv@b
  5519   0058B4  C195  F025         	movff	_average_detTimer8+1,___fldiv@b+1
  5520   0058B8  C196  F026         	movff	_average_detTimer8+2,___fldiv@b+2
  5521   0058BC  C197  F027         	movff	_average_detTimer8+3,___fldiv@b+3
  5522   0058C0  0E00               	movlw	0
  5523   0058C2  6E28               	movwf	___fldiv@a^0,c
  5524   0058C4  0E00               	movlw	0
  5525   0058C6  6E29               	movwf	(___fldiv@a+1)^0,c
  5526   0058C8  0E00               	movlw	0
  5527   0058CA  6E2A               	movwf	(___fldiv@a+2)^0,c
  5528   0058CC  0E41               	movlw	65
  5529   0058CE  6E2B               	movwf	(___fldiv@a+3)^0,c
  5530   0058D0  EC6E  F01F         	call	___fldiv	;wreg free
  5531   0058D4  C024  F194         	movff	?___fldiv,_average_detTimer8
  5532   0058D8  C025  F195         	movff	?___fldiv+1,_average_detTimer8+1
  5533   0058DC  C026  F196         	movff	?___fldiv+2,_average_detTimer8+2
  5534   0058E0  C027  F197         	movff	?___fldiv+3,_average_detTimer8+3
  5535   0058E4                     
  5536                           ;functions.c: 419:   if(average_detTimer8<0 && PeriodEndCount>5){
  5537   0058E4  0101               	movlb	1	; () banked
  5538   0058E6  BF97               	btfsc	(_average_detTimer8+3)& (0+255),7,b
  5539   0058E8  EF7A  F02C         	goto	u13070
  5540   0058EC  EF78  F02C         	goto	u13071
  5541   0058F0                     u13071:
  5542   0058F0  EF9B  F02C         	goto	l10604
  5543   0058F4                     u13070:
  5544   0058F4                     
  5545                           ; BSR set to: 1
  5546   0058F4  0E05               	movlw	5
  5547   0058F6  65B5               	cpfsgt	_PeriodEndCount& (0+255),b
  5548   0058F8  EF80  F02C         	goto	u13081
  5549   0058FC  EF82  F02C         	goto	u13080
  5550   005900                     u13081:
  5551   005900  EF9B  F02C         	goto	l10604
  5552   005904                     u13080:
  5553   005904                     
  5554                           ; BSR set to: 1
  5555                           ;functions.c: 420:     PeakTime[1]=PeakTime[0];
  5556   005904  C158  F15C         	movff	_PeakTime,_PeakTime+4
  5557   005908  C159  F15D         	movff	_PeakTime+1,_PeakTime+5
  5558   00590C  C15A  F15E         	movff	_PeakTime+2,_PeakTime+6
  5559   005910  C15B  F15F         	movff	_PeakTime+3,_PeakTime+7
  5560   005914                     
  5561                           ; BSR set to: 1
  5562                           ;functions.c: 421:     PeakTime[0]=millis();
  5563   005914  EC7B  F039         	call	_millis	;wreg free
  5564   005918  C001  F158         	movff	?_millis,_PeakTime
  5565   00591C  C002  F159         	movff	?_millis+1,_PeakTime+1
  5566   005920  C003  F15A         	movff	?_millis+2,_PeakTime+2
  5567   005924  C004  F15B         	movff	?_millis+3,_PeakTime+3
  5568   005928                     
  5569                           ;functions.c: 422:     Period=1;
  5570   005928  0E01               	movlw	1
  5571   00592A  0101               	movlb	1	; () banked
  5572   00592C  6FB2               	movwf	_Period& (0+255),b
  5573   00592E                     
  5574                           ; BSR set to: 1
  5575                           ;functions.c: 423:     PeriodEndCount=0;
  5576   00592E  0E00               	movlw	0
  5577   005930  6FB5               	movwf	_PeriodEndCount& (0+255),b
  5578                           
  5579                           ;functions.c: 424:   }
  5580   005932  EFB8  F02C         	goto	l453
  5581   005936                     l10604:
  5582                           
  5583                           ; BSR set to: 1
  5584   005936  0E00               	movlw	0
  5585   005938  0100               	movlb	0	; () banked
  5586   00593A  6F84               	movwf	___flge@ff1& (0+255),b
  5587   00593C  0E00               	movlw	0
  5588   00593E  6F85               	movwf	(___flge@ff1+1)& (0+255),b
  5589   005940  0E00               	movlw	0
  5590   005942  6F86               	movwf	(___flge@ff1+2)& (0+255),b
  5591   005944  0E00               	movlw	0
  5592   005946  6F87               	movwf	(___flge@ff1+3)& (0+255),b
  5593   005948  C194  F088         	movff	_average_detTimer8,___flge@ff2
  5594   00594C  C195  F089         	movff	_average_detTimer8+1,___flge@ff2+1
  5595   005950  C196  F08A         	movff	_average_detTimer8+2,___flge@ff2+2
  5596   005954  C197  F08B         	movff	_average_detTimer8+3,___flge@ff2+3
  5597   005958  EC1C  F033         	call	___flge	;wreg free
  5598   00595C  0100               	movlb	0	; () banked
  5599   00595E  B0D8               	btfsc	status,0,c
  5600   005960  EFB4  F02C         	goto	u13091
  5601   005964  EFB6  F02C         	goto	u13090
  5602   005968                     u13091:
  5603   005968  EFB8  F02C         	goto	l453
  5604   00596C                     u13090:
  5605   00596C                     
  5606                           ; BSR set to: 0
  5607                           ;functions.c: 426:     ++PeriodEndCount;
  5608   00596C  0101               	movlb	1	; () banked
  5609   00596E  2BB5               	incf	_PeriodEndCount& (0+255),f,b
  5610   005970                     l453:
  5611   005970  0012               	return		;funcret
  5612   005972                     __end_of_TimerPeriodCheck:
  5613                           	callstack 0
  5614                           
  5615 ;; *************** function _PrintNoData *****************
  5616 ;; Defined at:
  5617 ;;		line 374 in file "functions.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;Total ram usage:        0 bytes
  5636 ;; Hardware stack levels used: 1
  5637 ;; Hardware stack levels required when called: 10
  5638 ;; This function calls:
  5639 ;;		_UART1_SendFormatted
  5640 ;; This function is called by:
  5641 ;;		_main
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           	psect	text23
  5646   007970                     __ptext23:
  5647                           	callstack 0
  5648   007970                     _PrintNoData:
  5649                           	callstack 20
  5650   007970                     
  5651                           ;functions.c: 375:   UART1_SendFormatted(" - \n");
  5652   007970  0EE0               	movlw	low STR_37
  5653   007972  0101               	movlb	1	; () banked
  5654   007974  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  5655   007976  0EFF               	movlw	high STR_37
  5656   007978  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  5657   00797A  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  5658                           
  5659                           ;functions.c: 376:   UART1_SendFormatted(" - \n");
  5660   00797E  0EE0               	movlw	low STR_37
  5661   007980  0101               	movlb	1	; () banked
  5662   007982  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  5663   007984  0EFF               	movlw	high STR_37
  5664   007986  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  5665   007988  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  5666   00798C  0012               	return		;funcret
  5667   00798E                     __end_of_PrintNoData:
  5668                           	callstack 0
  5669                           
  5670 ;; *************** function _OxygenSPO2Calc *****************
  5671 ;; Defined at:
  5672 ;;		line 385 in file "functions.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;		None
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;  i               2   44[BANK0 ] int 
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5689 ;;      Totals:         2      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;Total ram usage:       32 bytes
  5691 ;; Hardware stack levels used: 1
  5692 ;; Hardware stack levels required when called: 3
  5693 ;; This function calls:
  5694 ;;		___fladd
  5695 ;;		___fldiv
  5696 ;;		___flge
  5697 ;;		___flmul
  5698 ;;		___flsub
  5699 ;;		___fltol
  5700 ;;		___xxtofl
  5701 ;;		_fabs
  5702 ;; This function is called by:
  5703 ;;		_main
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text24
  5708   003680                     __ptext24:
  5709                           	callstack 0
  5710   003680                     _OxygenSPO2Calc:
  5711                           	callstack 27
  5712   003680                     
  5713                           ;functions.c: 386:   R=(beta_MinMax[1][1]/beta_MinMax[0][1]-1)/(beta_MinMax[1][0]/beta_M
      +                          inMax[0][0]-1);
  5714   003680  0E00               	movlw	0
  5715   003682  6E5A               	movwf	___fladd@a^0,c
  5716   003684  0E00               	movlw	0
  5717   003686  6E5B               	movwf	(___fladd@a+1)^0,c
  5718   003688  0E80               	movlw	128
  5719   00368A  6E5C               	movwf	(___fladd@a+2)^0,c
  5720   00368C  0EBF               	movlw	191
  5721   00368E  6E5D               	movwf	(___fladd@a+3)^0,c
  5722   003690  C12C  F028         	movff	_beta_MinMax+4,___fldiv@a
  5723   003694  C12D  F029         	movff	_beta_MinMax+5,___fldiv@a+1
  5724   003698  C12E  F02A         	movff	_beta_MinMax+6,___fldiv@a+2
  5725   00369C  C12F  F02B         	movff	_beta_MinMax+7,___fldiv@a+3
  5726   0036A0  C134  F024         	movff	_beta_MinMax+12,___fldiv@b
  5727   0036A4  C135  F025         	movff	_beta_MinMax+13,___fldiv@b+1
  5728   0036A8  C136  F026         	movff	_beta_MinMax+14,___fldiv@b+2
  5729   0036AC  C137  F027         	movff	_beta_MinMax+15,___fldiv@b+3
  5730   0036B0  EC6E  F01F         	call	___fldiv	;wreg free
  5731   0036B4  C024  F056         	movff	?___fldiv,___fladd@b
  5732   0036B8  C025  F057         	movff	?___fldiv+1,___fladd@b+1
  5733   0036BC  C026  F058         	movff	?___fldiv+2,___fladd@b+2
  5734   0036C0  C027  F059         	movff	?___fldiv+3,___fladd@b+3
  5735   0036C4  ECB3  F016         	call	___fladd	;wreg free
  5736   0036C8  C056  F090         	movff	?___fladd,_OxygenSPO2Calc$1719
  5737   0036CC  C057  F091         	movff	?___fladd+1,_OxygenSPO2Calc$1719+1
  5738   0036D0  C058  F092         	movff	?___fladd+2,_OxygenSPO2Calc$1719+2
  5739   0036D4  C059  F093         	movff	?___fladd+3,_OxygenSPO2Calc$1719+3
  5740                           
  5741                           ;functions.c: 386:   R=(beta_MinMax[1][1]/beta_MinMax[0][1]-1)/(beta_MinMax[1][0]/beta_M
      +                          inMax[0][0]-1);
  5742   0036D8  0E00               	movlw	0
  5743   0036DA  6E5A               	movwf	___fladd@a^0,c
  5744   0036DC  0E00               	movlw	0
  5745   0036DE  6E5B               	movwf	(___fladd@a+1)^0,c
  5746   0036E0  0E80               	movlw	128
  5747   0036E2  6E5C               	movwf	(___fladd@a+2)^0,c
  5748   0036E4  0EBF               	movlw	191
  5749   0036E6  6E5D               	movwf	(___fladd@a+3)^0,c
  5750   0036E8  C128  F028         	movff	_beta_MinMax,___fldiv@a
  5751   0036EC  C129  F029         	movff	_beta_MinMax+1,___fldiv@a+1
  5752   0036F0  C12A  F02A         	movff	_beta_MinMax+2,___fldiv@a+2
  5753   0036F4  C12B  F02B         	movff	_beta_MinMax+3,___fldiv@a+3
  5754   0036F8  C130  F024         	movff	_beta_MinMax+8,___fldiv@b
  5755   0036FC  C131  F025         	movff	_beta_MinMax+9,___fldiv@b+1
  5756   003700  C132  F026         	movff	_beta_MinMax+10,___fldiv@b+2
  5757   003704  C133  F027         	movff	_beta_MinMax+11,___fldiv@b+3
  5758   003708  EC6E  F01F         	call	___fldiv	;wreg free
  5759   00370C  C024  F056         	movff	?___fldiv,___fladd@b
  5760   003710  C025  F057         	movff	?___fldiv+1,___fladd@b+1
  5761   003714  C026  F058         	movff	?___fldiv+2,___fladd@b+2
  5762   003718  C027  F059         	movff	?___fldiv+3,___fladd@b+3
  5763   00371C  ECB3  F016         	call	___fladd	;wreg free
  5764   003720  C056  F094         	movff	?___fladd,_OxygenSPO2Calc$1720
  5765   003724  C057  F095         	movff	?___fladd+1,_OxygenSPO2Calc$1720+1
  5766   003728  C058  F096         	movff	?___fladd+2,_OxygenSPO2Calc$1720+2
  5767   00372C  C059  F097         	movff	?___fladd+3,_OxygenSPO2Calc$1720+3
  5768                           
  5769                           ;functions.c: 386:   R=(beta_MinMax[1][1]/beta_MinMax[0][1]-1)/(beta_MinMax[1][0]/beta_M
      +                          inMax[0][0]-1);
  5770   003730  C090  F024         	movff	_OxygenSPO2Calc$1719,___fldiv@b
  5771   003734  C091  F025         	movff	_OxygenSPO2Calc$1719+1,___fldiv@b+1
  5772   003738  C092  F026         	movff	_OxygenSPO2Calc$1719+2,___fldiv@b+2
  5773   00373C  C093  F027         	movff	_OxygenSPO2Calc$1719+3,___fldiv@b+3
  5774   003740  C094  F028         	movff	_OxygenSPO2Calc$1720,___fldiv@a
  5775   003744  C095  F029         	movff	_OxygenSPO2Calc$1720+1,___fldiv@a+1
  5776   003748  C096  F02A         	movff	_OxygenSPO2Calc$1720+2,___fldiv@a+2
  5777   00374C  C097  F02B         	movff	_OxygenSPO2Calc$1720+3,___fldiv@a+3
  5778   003750  EC6E  F01F         	call	___fldiv	;wreg free
  5779   003754  C024  F1B8         	movff	?___fldiv,_R
  5780   003758  C025  F1B9         	movff	?___fldiv+1,_R+1
  5781   00375C  C026  F1BA         	movff	?___fldiv+2,_R+2
  5782   003760  C027  F1BB         	movff	?___fldiv+3,_R+3
  5783   003764                     
  5784                           ;functions.c: 387:   SPO2_OxyLevelArray[Heart_Rate_Count % 4] = 0.3557f * R * R * R - 5.
      +                          1864f * R * R - 18.342f * R + 108.381f;
  5785   003764  0EFD               	movlw	253
  5786   003766  6E41               	movwf	___flmul@a^0,c
  5787   003768  0EF6               	movlw	246
  5788   00376A  6E42               	movwf	(___flmul@a+1)^0,c
  5789   00376C  0EA5               	movlw	165
  5790   00376E  6E43               	movwf	(___flmul@a+2)^0,c
  5791   003770  0E40               	movlw	64
  5792   003772  6E44               	movwf	(___flmul@a+3)^0,c
  5793   003774  C1B8  F03D         	movff	_R,___flmul@b
  5794   003778  C1B9  F03E         	movff	_R+1,___flmul@b+1
  5795   00377C  C1BA  F03F         	movff	_R+2,___flmul@b+2
  5796   003780  C1BB  F040         	movff	_R+3,___flmul@b+3
  5797   003784  EC59  F01D         	call	___flmul	;wreg free
  5798   003788  C03D  F098         	movff	?___flmul,_OxygenSPO2Calc$1721
  5799   00378C  C03E  F099         	movff	?___flmul+1,_OxygenSPO2Calc$1721+1
  5800   003790  C03F  F09A         	movff	?___flmul+2,_OxygenSPO2Calc$1721+2
  5801   003794  C040  F09B         	movff	?___flmul+3,_OxygenSPO2Calc$1721+3
  5802   003798                     
  5803                           ;functions.c: 387:   SPO2_OxyLevelArray[Heart_Rate_Count % 4] = 0.3557f * R * R * R - 5.
      +                          1864f * R * R - 18.342f * R + 108.381f;
  5804   003798  0E4F               	movlw	79
  5805   00379A  6E41               	movwf	___flmul@a^0,c
  5806   00379C  0E1E               	movlw	30
  5807   00379E  6E42               	movwf	(___flmul@a+1)^0,c
  5808   0037A0  0EB6               	movlw	182
  5809   0037A2  6E43               	movwf	(___flmul@a+2)^0,c
  5810   0037A4  0E3E               	movlw	62
  5811   0037A6  6E44               	movwf	(___flmul@a+3)^0,c
  5812   0037A8  C1B8  F03D         	movff	_R,___flmul@b
  5813   0037AC  C1B9  F03E         	movff	_R+1,___flmul@b+1
  5814   0037B0  C1BA  F03F         	movff	_R+2,___flmul@b+2
  5815   0037B4  C1BB  F040         	movff	_R+3,___flmul@b+3
  5816   0037B8  EC59  F01D         	call	___flmul	;wreg free
  5817   0037BC  C03D  F09C         	movff	?___flmul,_OxygenSPO2Calc$1722
  5818   0037C0  C03E  F09D         	movff	?___flmul+1,_OxygenSPO2Calc$1722+1
  5819   0037C4  C03F  F09E         	movff	?___flmul+2,_OxygenSPO2Calc$1722+2
  5820   0037C8  C040  F09F         	movff	?___flmul+3,_OxygenSPO2Calc$1722+3
  5821   0037CC                     
  5822                           ;functions.c: 387:   SPO2_OxyLevelArray[Heart_Rate_Count % 4] = 0.3557f * R * R * R - 5.
      +                          1864f * R * R - 18.342f * R + 108.381f;
  5823   0037CC  C1B8  F041         	movff	_R,___flmul@a
  5824   0037D0  C1B9  F042         	movff	_R+1,___flmul@a+1
  5825   0037D4  C1BA  F043         	movff	_R+2,___flmul@a+2
  5826   0037D8  C1BB  F044         	movff	_R+3,___flmul@a+3
  5827   0037DC  C09C  F03D         	movff	_OxygenSPO2Calc$1722,___flmul@b
  5828   0037E0  C09D  F03E         	movff	_OxygenSPO2Calc$1722+1,___flmul@b+1
  5829   0037E4  C09E  F03F         	movff	_OxygenSPO2Calc$1722+2,___flmul@b+2
  5830   0037E8  C09F  F040         	movff	_OxygenSPO2Calc$1722+3,___flmul@b+3
  5831   0037EC  EC59  F01D         	call	___flmul	;wreg free
  5832   0037F0  C03D  F0A0         	movff	?___flmul,_OxygenSPO2Calc$1723
  5833   0037F4  C03E  F0A1         	movff	?___flmul+1,_OxygenSPO2Calc$1723+1
  5834   0037F8  C03F  F0A2         	movff	?___flmul+2,_OxygenSPO2Calc$1723+2
  5835   0037FC  C040  F0A3         	movff	?___flmul+3,_OxygenSPO2Calc$1723+3
  5836   003800                     
  5837                           ;functions.c: 387:   SPO2_OxyLevelArray[Heart_Rate_Count % 4] = 0.3557f * R * R * R - 5.
      +                          1864f * R * R - 18.342f * R + 108.381f;
  5838   003800  C1B8  F041         	movff	_R,___flmul@a
  5839   003804  C1B9  F042         	movff	_R+1,___flmul@a+1
  5840   003808  C1BA  F043         	movff	_R+2,___flmul@a+2
  5841   00380C  C1BB  F044         	movff	_R+3,___flmul@a+3
  5842   003810  C098  F03D         	movff	_OxygenSPO2Calc$1721,___flmul@b
  5843   003814  C099  F03E         	movff	_OxygenSPO2Calc$1721+1,___flmul@b+1
  5844   003818  C09A  F03F         	movff	_OxygenSPO2Calc$1721+2,___flmul@b+2
  5845   00381C  C09B  F040         	movff	_OxygenSPO2Calc$1721+3,___flmul@b+3
  5846   003820  EC59  F01D         	call	___flmul	;wreg free
  5847   003824  C03D  F078         	movff	?___flmul,___flsub@a
  5848   003828  C03E  F079         	movff	?___flmul+1,___flsub@a+1
  5849   00382C  C03F  F07A         	movff	?___flmul+2,___flsub@a+2
  5850   003830  C040  F07B         	movff	?___flmul+3,___flsub@a+3
  5851   003834  C1B8  F041         	movff	_R,___flmul@a
  5852   003838  C1B9  F042         	movff	_R+1,___flmul@a+1
  5853   00383C  C1BA  F043         	movff	_R+2,___flmul@a+2
  5854   003840  C1BB  F044         	movff	_R+3,___flmul@a+3
  5855   003844  C0A0  F03D         	movff	_OxygenSPO2Calc$1723,___flmul@b
  5856   003848  C0A1  F03E         	movff	_OxygenSPO2Calc$1723+1,___flmul@b+1
  5857   00384C  C0A2  F03F         	movff	_OxygenSPO2Calc$1723+2,___flmul@b+2
  5858   003850  C0A3  F040         	movff	_OxygenSPO2Calc$1723+3,___flmul@b+3
  5859   003854  EC59  F01D         	call	___flmul	;wreg free
  5860   003858  C03D  F074         	movff	?___flmul,___flsub@b
  5861   00385C  C03E  F075         	movff	?___flmul+1,___flsub@b+1
  5862   003860  C03F  F076         	movff	?___flmul+2,___flsub@b+2
  5863   003864  C040  F077         	movff	?___flmul+3,___flsub@b+3
  5864   003868  EC54  F03B         	call	___flsub	;wreg free
  5865   00386C  C074  F0A4         	movff	?___flsub,_OxygenSPO2Calc$1724
  5866   003870  C075  F0A5         	movff	?___flsub+1,_OxygenSPO2Calc$1724+1
  5867   003874  C076  F0A6         	movff	?___flsub+2,_OxygenSPO2Calc$1724+2
  5868   003878  C077  F0A7         	movff	?___flsub+3,_OxygenSPO2Calc$1724+3
  5869   00387C                     
  5870                           ;functions.c: 387:   SPO2_OxyLevelArray[Heart_Rate_Count % 4] = 0.3557f * R * R * R - 5.
      +                          1864f * R * R - 18.342f * R + 108.381f;
  5871   00387C  0E6A               	movlw	106
  5872   00387E  6E41               	movwf	___flmul@a^0,c
  5873   003880  0EBC               	movlw	188
  5874   003882  6E42               	movwf	(___flmul@a+1)^0,c
  5875   003884  0E92               	movlw	146
  5876   003886  6E43               	movwf	(___flmul@a+2)^0,c
  5877   003888  0E41               	movlw	65
  5878   00388A  6E44               	movwf	(___flmul@a+3)^0,c
  5879   00388C  C1B8  F03D         	movff	_R,___flmul@b
  5880   003890  C1B9  F03E         	movff	_R+1,___flmul@b+1
  5881   003894  C1BA  F03F         	movff	_R+2,___flmul@b+2
  5882   003898  C1BB  F040         	movff	_R+3,___flmul@b+3
  5883   00389C  EC59  F01D         	call	___flmul	;wreg free
  5884   0038A0  C03D  F078         	movff	?___flmul,___flsub@a
  5885   0038A4  C03E  F079         	movff	?___flmul+1,___flsub@a+1
  5886   0038A8  C03F  F07A         	movff	?___flmul+2,___flsub@a+2
  5887   0038AC  C040  F07B         	movff	?___flmul+3,___flsub@a+3
  5888   0038B0  C0A4  F074         	movff	_OxygenSPO2Calc$1724,___flsub@b
  5889   0038B4  C0A5  F075         	movff	_OxygenSPO2Calc$1724+1,___flsub@b+1
  5890   0038B8  C0A6  F076         	movff	_OxygenSPO2Calc$1724+2,___flsub@b+2
  5891   0038BC  C0A7  F077         	movff	_OxygenSPO2Calc$1724+3,___flsub@b+3
  5892   0038C0  EC54  F03B         	call	___flsub	;wreg free
  5893   0038C4  C074  F0A8         	movff	?___flsub,_OxygenSPO2Calc$1725
  5894   0038C8  C075  F0A9         	movff	?___flsub+1,_OxygenSPO2Calc$1725+1
  5895   0038CC  C076  F0AA         	movff	?___flsub+2,_OxygenSPO2Calc$1725+2
  5896   0038D0  C077  F0AB         	movff	?___flsub+3,_OxygenSPO2Calc$1725+3
  5897   0038D4                     
  5898                           ;functions.c: 387:   SPO2_OxyLevelArray[Heart_Rate_Count % 4] = 0.3557f * R * R * R - 5.
      +                          1864f * R * R - 18.342f * R + 108.381f;
  5899   0038D4  C0A8  F056         	movff	_OxygenSPO2Calc$1725,___fladd@b
  5900   0038D8  C0A9  F057         	movff	_OxygenSPO2Calc$1725+1,___fladd@b+1
  5901   0038DC  C0AA  F058         	movff	_OxygenSPO2Calc$1725+2,___fladd@b+2
  5902   0038E0  C0AB  F059         	movff	_OxygenSPO2Calc$1725+3,___fladd@b+3
  5903   0038E4  0E12               	movlw	18
  5904   0038E6  6E5A               	movwf	___fladd@a^0,c
  5905   0038E8  0EC3               	movlw	195
  5906   0038EA  6E5B               	movwf	(___fladd@a+1)^0,c
  5907   0038EC  0ED8               	movlw	216
  5908   0038EE  6E5C               	movwf	(___fladd@a+2)^0,c
  5909   0038F0  0E42               	movlw	66
  5910   0038F2  6E5D               	movwf	(___fladd@a+3)^0,c
  5911   0038F4  ECB3  F016         	call	___fladd	;wreg free
  5912   0038F8  0E03               	movlw	3
  5913   0038FA  0101               	movlb	1	; () banked
  5914   0038FC  159C               	andwf	_Heart_Rate_Count& (0+255),w,b
  5915   0038FE  6E7C               	movwf	??_OxygenSPO2Calc^0,c
  5916   003900  0E00               	movlw	0
  5917   003902  159D               	andwf	(_Heart_Rate_Count+1)& (0+255),w,b
  5918   003904  6E7D               	movwf	(??_OxygenSPO2Calc+1)^0,c
  5919   003906  90D8               	bcf	status,0,c
  5920   003908  367C               	rlcf	??_OxygenSPO2Calc^0,f,c
  5921   00390A  367D               	rlcf	(??_OxygenSPO2Calc+1)^0,f,c
  5922   00390C  90D8               	bcf	status,0,c
  5923   00390E  367C               	rlcf	??_OxygenSPO2Calc^0,f,c
  5924   003910  367D               	rlcf	(??_OxygenSPO2Calc+1)^0,f,c
  5925   003912  0E38               	movlw	low _SPO2_OxyLevelArray
  5926   003914  247C               	addwf	??_OxygenSPO2Calc^0,w,c
  5927   003916  6ED9               	movwf	fsr2l,c
  5928   003918  0E01               	movlw	high _SPO2_OxyLevelArray
  5929   00391A  207D               	addwfc	(??_OxygenSPO2Calc+1)^0,w,c
  5930   00391C  6EDA               	movwf	fsr2h,c
  5931   00391E  C056  FFDE         	movff	?___fladd,postinc2
  5932   003922  C057  FFDE         	movff	?___fladd+1,postinc2
  5933   003926  C058  FFDE         	movff	?___fladd+2,postinc2
  5934   00392A  C059  FFDE         	movff	?___fladd+3,postinc2
  5935   00392E                     
  5936                           ; BSR set to: 1
  5937                           ;functions.c: 388:   SpO2_value=0;
  5938   00392E  0E00               	movlw	0
  5939   003930  6FA4               	movwf	_SpO2_value& (0+255),b
  5940   003932  0E00               	movlw	0
  5941   003934  6FA5               	movwf	(_SpO2_value+1)& (0+255),b
  5942   003936  0E00               	movlw	0
  5943   003938  6FA6               	movwf	(_SpO2_value+2)& (0+255),b
  5944   00393A  0E00               	movlw	0
  5945   00393C  6FA7               	movwf	(_SpO2_value+3)& (0+255),b
  5946   00393E                     
  5947                           ; BSR set to: 1
  5948                           ;functions.c: 389:   for(int i=0;i<4;++i){
  5949   00393E  0E00               	movlw	0
  5950   003940  0100               	movlb	0	; () banked
  5951   003942  6FAD               	movwf	(OxygenSPO2Calc@i+1)& (0+255),b
  5952   003944  0E00               	movlw	0
  5953   003946  6FAC               	movwf	OxygenSPO2Calc@i& (0+255),b
  5954   003948                     l10650:
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;functions.c: 390:     SpO2_value+=SPO2_OxyLevelArray[i];
  5958   003948  C1A4  F056         	movff	_SpO2_value,___fladd@b
  5959   00394C  C1A5  F057         	movff	_SpO2_value+1,___fladd@b+1
  5960   003950  C1A6  F058         	movff	_SpO2_value+2,___fladd@b+2
  5961   003954  C1A7  F059         	movff	_SpO2_value+3,___fladd@b+3
  5962   003958  0E38               	movlw	low _SPO2_OxyLevelArray
  5963   00395A  6E7C               	movwf	??_OxygenSPO2Calc^0,c
  5964   00395C  0E01               	movlw	high _SPO2_OxyLevelArray
  5965   00395E  6E7D               	movwf	(??_OxygenSPO2Calc+1)^0,c
  5966   003960  90D8               	bcf	status,0,c
  5967   003962  35AC               	rlcf	OxygenSPO2Calc@i& (0+255),w,b
  5968   003964  6ED9               	movwf	fsr2l,c
  5969   003966  35AD               	rlcf	(OxygenSPO2Calc@i+1)& (0+255),w,b
  5970   003968  6EDA               	movwf	fsr2h,c
  5971   00396A  90D8               	bcf	status,0,c
  5972   00396C  36D9               	rlcf	fsr2l,f,c
  5973   00396E  36DA               	rlcf	fsr2h,f,c
  5974   003970  507C               	movf	??_OxygenSPO2Calc^0,w,c
  5975   003972  26D9               	addwf	fsr2l,f,c
  5976   003974  507D               	movf	(??_OxygenSPO2Calc+1)^0,w,c
  5977   003976  22DA               	addwfc	fsr2h,f,c
  5978   003978  CFDE F05A          	movff	postinc2,___fladd@a
  5979   00397C  CFDE F05B          	movff	postinc2,___fladd@a+1
  5980   003980  CFDE F05C          	movff	postinc2,___fladd@a+2
  5981   003984  CFDE F05D          	movff	postinc2,___fladd@a+3
  5982   003988  ECB3  F016         	call	___fladd	;wreg free
  5983   00398C  C056  F1A4         	movff	?___fladd,_SpO2_value
  5984   003990  C057  F1A5         	movff	?___fladd+1,_SpO2_value+1
  5985   003994  C058  F1A6         	movff	?___fladd+2,_SpO2_value+2
  5986   003998  C059  F1A7         	movff	?___fladd+3,_SpO2_value+3
  5987   00399C                     
  5988                           ;functions.c: 391:   }
  5989   00399C  0100               	movlb	0	; () banked
  5990   00399E  4BAC               	infsnz	OxygenSPO2Calc@i& (0+255),f,b
  5991   0039A0  2BAD               	incf	(OxygenSPO2Calc@i+1)& (0+255),f,b
  5992   0039A2                     
  5993                           ; BSR set to: 0
  5994   0039A2  BFAD               	btfsc	(OxygenSPO2Calc@i+1)& (0+255),7,b
  5995   0039A4  EFDD  F01C         	goto	u13121
  5996   0039A8  51AD               	movf	(OxygenSPO2Calc@i+1)& (0+255),w,b
  5997   0039AA  E109               	bnz	u13120
  5998   0039AC  0E04               	movlw	4
  5999   0039AE  5DAC               	subwf	OxygenSPO2Calc@i& (0+255),w,b
  6000   0039B0  A0D8               	btfss	status,0,c
  6001   0039B2  EFDD  F01C         	goto	u13121
  6002   0039B6  EFDF  F01C         	goto	u13120
  6003   0039BA                     u13121:
  6004   0039BA  EFA4  F01C         	goto	l10650
  6005   0039BE                     u13120:
  6006   0039BE                     
  6007                           ; BSR set to: 0
  6008                           ;functions.c: 392:   SpO2_value/=4;
  6009   0039BE  C1A4  F024         	movff	_SpO2_value,___fldiv@b
  6010   0039C2  C1A5  F025         	movff	_SpO2_value+1,___fldiv@b+1
  6011   0039C6  C1A6  F026         	movff	_SpO2_value+2,___fldiv@b+2
  6012   0039CA  C1A7  F027         	movff	_SpO2_value+3,___fldiv@b+3
  6013   0039CE  0E00               	movlw	0
  6014   0039D0  6E28               	movwf	___fldiv@a^0,c
  6015   0039D2  0E00               	movlw	0
  6016   0039D4  6E29               	movwf	(___fldiv@a+1)^0,c
  6017   0039D6  0E80               	movlw	128
  6018   0039D8  6E2A               	movwf	(___fldiv@a+2)^0,c
  6019   0039DA  0E40               	movlw	64
  6020   0039DC  6E2B               	movwf	(___fldiv@a+3)^0,c
  6021   0039DE  EC6E  F01F         	call	___fldiv	;wreg free
  6022   0039E2  C024  F1A4         	movff	?___fldiv,_SpO2_value
  6023   0039E6  C025  F1A5         	movff	?___fldiv+1,_SpO2_value+1
  6024   0039EA  C026  F1A6         	movff	?___fldiv+2,_SpO2_value+2
  6025   0039EE  C027  F1A7         	movff	?___fldiv+3,_SpO2_value+3
  6026                           
  6027                           ;functions.c: 393:   if(fabs(SpO2_Hysteresis-SpO2_value)>1){
  6028   0039F2  0E00               	movlw	0
  6029   0039F4  0100               	movlb	0	; () banked
  6030   0039F6  6F84               	movwf	___flge@ff1& (0+255),b
  6031   0039F8  0E00               	movlw	0
  6032   0039FA  6F85               	movwf	(___flge@ff1+1)& (0+255),b
  6033   0039FC  0E80               	movlw	128
  6034   0039FE  6F86               	movwf	(___flge@ff1+2)& (0+255),b
  6035   003A00  0E3F               	movlw	63
  6036   003A02  6F87               	movwf	(___flge@ff1+3)& (0+255),b
  6037   003A04  C1A4  F078         	movff	_SpO2_value,___flsub@a
  6038   003A08  C1A5  F079         	movff	_SpO2_value+1,___flsub@a+1
  6039   003A0C  C1A6  F07A         	movff	_SpO2_value+2,___flsub@a+2
  6040   003A10  C1A7  F07B         	movff	_SpO2_value+3,___flsub@a+3
  6041   003A14  0101               	movlb	1	; () banked
  6042   003A16  51B6               	movf	_SpO2_Hysteresis& (0+255),w,b
  6043   003A18  6E16               	movwf	___xxtofl@val^0,c
  6044   003A1A  6A17               	clrf	(___xxtofl@val+1)^0,c
  6045   003A1C  6A18               	clrf	(___xxtofl@val+2)^0,c
  6046   003A1E  6A19               	clrf	(___xxtofl@val+3)^0,c
  6047   003A20  0E01               	movlw	1
  6048   003A22  EC06  F02B         	call	___xxtofl
  6049   003A26  C016  F074         	movff	?___xxtofl,___flsub@b
  6050   003A2A  C017  F075         	movff	?___xxtofl+1,___flsub@b+1
  6051   003A2E  C018  F076         	movff	?___xxtofl+2,___flsub@b+2
  6052   003A32  C019  F077         	movff	?___xxtofl+3,___flsub@b+3
  6053   003A36  EC54  F03B         	call	___flsub	;wreg free
  6054   003A3A  C074  F080         	movff	?___flsub,fabs@num
  6055   003A3E  C075  F081         	movff	?___flsub+1,fabs@num+1
  6056   003A42  C076  F082         	movff	?___flsub+2,fabs@num+2
  6057   003A46  C077  F083         	movff	?___flsub+3,fabs@num+3
  6058   003A4A  EC2F  F03B         	call	_fabs	;wreg free
  6059   003A4E  C080  F088         	movff	?_fabs,___flge@ff2
  6060   003A52  C081  F089         	movff	?_fabs+1,___flge@ff2+1
  6061   003A56  C082  F08A         	movff	?_fabs+2,___flge@ff2+2
  6062   003A5A  C083  F08B         	movff	?_fabs+3,___flge@ff2+3
  6063   003A5E  EC1C  F033         	call	___flge	;wreg free
  6064   003A62  0100               	movlb	0	; () banked
  6065   003A64  B0D8               	btfsc	status,0,c
  6066   003A66  EF37  F01D         	goto	u13131
  6067   003A6A  EF39  F01D         	goto	u13130
  6068   003A6E                     u13131:
  6069   003A6E  EF58  F01D         	goto	l439
  6070   003A72                     u13130:
  6071   003A72                     
  6072                           ; BSR set to: 0
  6073                           ;functions.c: 394:     SpO2_Hysteresis=(unsigned char)(SpO2_value+0.5);
  6074   003A72  0E00               	movlw	0
  6075   003A74  6E5A               	movwf	___fladd@a^0,c
  6076   003A76  0E00               	movlw	0
  6077   003A78  6E5B               	movwf	(___fladd@a+1)^0,c
  6078   003A7A  0E00               	movlw	0
  6079   003A7C  6E5C               	movwf	(___fladd@a+2)^0,c
  6080   003A7E  0E3F               	movlw	63
  6081   003A80  6E5D               	movwf	(___fladd@a+3)^0,c
  6082   003A82  C1A4  F056         	movff	_SpO2_value,___fladd@b
  6083   003A86  C1A5  F057         	movff	_SpO2_value+1,___fladd@b+1
  6084   003A8A  C1A6  F058         	movff	_SpO2_value+2,___fladd@b+2
  6085   003A8E  C1A7  F059         	movff	_SpO2_value+3,___fladd@b+3
  6086   003A92  ECB3  F016         	call	___fladd	;wreg free
  6087   003A96  C056  F066         	movff	?___fladd,___fltol@f1
  6088   003A9A  C057  F067         	movff	?___fladd+1,___fltol@f1+1
  6089   003A9E  C058  F068         	movff	?___fladd+2,___fltol@f1+2
  6090   003AA2  C059  F069         	movff	?___fladd+3,___fltol@f1+3
  6091   003AA6  EC99  F032         	call	___fltol	;wreg free
  6092   003AAA  5066               	movf	?___fltol^0,w,c
  6093   003AAC  0101               	movlb	1	; () banked
  6094   003AAE  6FB6               	movwf	_SpO2_Hysteresis& (0+255),b
  6095   003AB0                     l439:
  6096   003AB0  0012               	return		;funcret
  6097   003AB2                     __end_of_OxygenSPO2Calc:
  6098                           	callstack 0
  6099                           
  6100 ;; *************** function _OSC_Init *****************
  6101 ;; Defined at:
  6102 ;;		line 19 in file "functions.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;		None
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;		None
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      void 
  6109 ;; Registers used:
  6110 ;;		wreg, status,2
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;Total ram usage:        0 bytes
  6121 ;; Hardware stack levels used: 1
  6122 ;; Hardware stack levels required when called: 1
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		_main
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text25
  6131   0079C4                     __ptext25:
  6132                           	callstack 0
  6133   0079C4                     _OSC_Init:
  6134                           	callstack 29
  6135   0079C4                     
  6136                           ;functions.c: 20:     OSCCON = 0b01110000;
  6137   0079C4  0E70               	movlw	112
  6138   0079C6  6ED3               	movwf	211,c	;volatile
  6139   0079C8  0012               	return		;funcret
  6140   0079CA                     __end_of_OSC_Init:
  6141                           	callstack 0
  6142                           
  6143 ;; *************** function _HeartRateCalc *****************
  6144 ;; Defined at:
  6145 ;;		line 398 in file "functions.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;		None
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  i               2  123[COMRAM] int 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6162 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6163 ;;Total ram usage:        6 bytes
  6164 ;; Hardware stack levels used: 1
  6165 ;; Hardware stack levels required when called: 3
  6166 ;; This function calls:
  6167 ;;		___fladd
  6168 ;;		___fldiv
  6169 ;;		___flge
  6170 ;;		___flsub
  6171 ;;		___fltol
  6172 ;;		___xxtofl
  6173 ;;		_fabs
  6174 ;; This function is called by:
  6175 ;;		_main
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text26
  6180   00526C                     __ptext26:
  6181                           	callstack 0
  6182   00526C                     _HeartRateCalc:
  6183                           	callstack 27
  6184   00526C                     
  6185                           ;functions.c: 399:   Timer_HeartRateArray[Heart_Rate_Count%4]=(PeakTime[0]-PeakTime[1]) 
      +                          & 0xFFFF;
  6186   00526C  0101               	movlb	1	; () banked
  6187   00526E  515C               	movf	(_PeakTime+4)& (0+255),w,b
  6188   005270  5D58               	subwf	_PeakTime& (0+255),w,b
  6189   005272  0100               	movlb	0	; () banked
  6190   005274  6F90               	movwf	??_HeartRateCalc& (0+255),b
  6191   005276  0101               	movlb	1	; () banked
  6192   005278  515D               	movf	(_PeakTime+5)& (0+255),w,b
  6193   00527A  5959               	subwfb	(_PeakTime+1)& (0+255),w,b
  6194   00527C  0100               	movlb	0	; () banked
  6195   00527E  6F91               	movwf	(??_HeartRateCalc+1)& (0+255),b
  6196   005280  0E03               	movlw	3
  6197   005282  0101               	movlb	1	; () banked
  6198   005284  159C               	andwf	_Heart_Rate_Count& (0+255),w,b
  6199   005286  0100               	movlb	0	; () banked
  6200   005288  6F92               	movwf	(??_HeartRateCalc+2)& (0+255),b
  6201   00528A  0E00               	movlw	0
  6202   00528C  0101               	movlb	1	; () banked
  6203   00528E  159D               	andwf	(_Heart_Rate_Count+1)& (0+255),w,b
  6204   005290  0100               	movlb	0	; () banked
  6205   005292  6F93               	movwf	(??_HeartRateCalc+3)& (0+255),b
  6206   005294  90D8               	bcf	status,0,c
  6207   005296  3792               	rlcf	(??_HeartRateCalc+2)& (0+255),f,b
  6208   005298  3793               	rlcf	(??_HeartRateCalc+3)& (0+255),f,b
  6209   00529A  0E68               	movlw	low _Timer_HeartRateArray
  6210   00529C  2592               	addwf	(??_HeartRateCalc+2)& (0+255),w,b
  6211   00529E  6ED9               	movwf	fsr2l,c
  6212   0052A0  0E01               	movlw	high _Timer_HeartRateArray
  6213   0052A2  2193               	addwfc	(??_HeartRateCalc+3)& (0+255),w,b
  6214   0052A4  6EDA               	movwf	fsr2h,c
  6215   0052A6  C090  FFDE         	movff	??_HeartRateCalc,postinc2
  6216   0052AA  C091  FFDD         	movff	??_HeartRateCalc+1,postdec2
  6217   0052AE                     
  6218                           ; BSR set to: 0
  6219                           ;functions.c: 400:   HR_val=0;
  6220   0052AE  0E00               	movlw	0
  6221   0052B0  0101               	movlb	1	; () banked
  6222   0052B2  6FBC               	movwf	_HR_val& (0+255),b
  6223   0052B4  0E00               	movlw	0
  6224   0052B6  6FBD               	movwf	(_HR_val+1)& (0+255),b
  6225   0052B8  0E00               	movlw	0
  6226   0052BA  6FBE               	movwf	(_HR_val+2)& (0+255),b
  6227   0052BC  0E00               	movlw	0
  6228   0052BE  6FBF               	movwf	(_HR_val+3)& (0+255),b
  6229   0052C0                     
  6230                           ; BSR set to: 1
  6231                           ;functions.c: 401:   for(int i=0;i<4;++i){
  6232   0052C0  0E00               	movlw	0
  6233   0052C2  6E7D               	movwf	(HeartRateCalc@i+1)^0,c
  6234   0052C4  0E00               	movlw	0
  6235   0052C6  6E7C               	movwf	HeartRateCalc@i^0,c
  6236   0052C8                     l10618:
  6237                           
  6238                           ;functions.c: 402:     HR_val+=Timer_HeartRateArray[i];
  6239   0052C8  C1BC  F056         	movff	_HR_val,___fladd@b
  6240   0052CC  C1BD  F057         	movff	_HR_val+1,___fladd@b+1
  6241   0052D0  C1BE  F058         	movff	_HR_val+2,___fladd@b+2
  6242   0052D4  C1BF  F059         	movff	_HR_val+3,___fladd@b+3
  6243   0052D8  90D8               	bcf	status,0,c
  6244   0052DA  347C               	rlcf	HeartRateCalc@i^0,w,c
  6245   0052DC  6ED9               	movwf	fsr2l,c
  6246   0052DE  347D               	rlcf	(HeartRateCalc@i+1)^0,w,c
  6247   0052E0  6EDA               	movwf	fsr2h,c
  6248   0052E2  0E68               	movlw	low _Timer_HeartRateArray
  6249   0052E4  26D9               	addwf	fsr2l,f,c
  6250   0052E6  0E01               	movlw	high _Timer_HeartRateArray
  6251   0052E8  22DA               	addwfc	fsr2h,f,c
  6252   0052EA  CFDE F090          	movff	postinc2,??_HeartRateCalc
  6253   0052EE  CFDD F091          	movff	postdec2,??_HeartRateCalc+1
  6254   0052F2  C090  F016         	movff	??_HeartRateCalc,___xxtofl@val
  6255   0052F6  C091  F017         	movff	??_HeartRateCalc+1,___xxtofl@val+1
  6256   0052FA  6A18               	clrf	(___xxtofl@val+2)^0,c
  6257   0052FC  6A19               	clrf	(___xxtofl@val+3)^0,c
  6258   0052FE  0E00               	movlw	0
  6259   005300  EC06  F02B         	call	___xxtofl
  6260   005304  C016  F05A         	movff	?___xxtofl,___fladd@a
  6261   005308  C017  F05B         	movff	?___xxtofl+1,___fladd@a+1
  6262   00530C  C018  F05C         	movff	?___xxtofl+2,___fladd@a+2
  6263   005310  C019  F05D         	movff	?___xxtofl+3,___fladd@a+3
  6264   005314  ECB3  F016         	call	___fladd	;wreg free
  6265   005318  C056  F1BC         	movff	?___fladd,_HR_val
  6266   00531C  C057  F1BD         	movff	?___fladd+1,_HR_val+1
  6267   005320  C058  F1BE         	movff	?___fladd+2,_HR_val+2
  6268   005324  C059  F1BF         	movff	?___fladd+3,_HR_val+3
  6269   005328                     
  6270                           ;functions.c: 403:   }
  6271   005328  4A7C               	infsnz	HeartRateCalc@i^0,f,c
  6272   00532A  2A7D               	incf	(HeartRateCalc@i+1)^0,f,c
  6273   00532C  BE7D               	btfsc	(HeartRateCalc@i+1)^0,7,c
  6274   00532E  EFA2  F029         	goto	u13101
  6275   005332  507D               	movf	(HeartRateCalc@i+1)^0,w,c
  6276   005334  E109               	bnz	u13100
  6277   005336  0E04               	movlw	4
  6278   005338  5C7C               	subwf	HeartRateCalc@i^0,w,c
  6279   00533A  A0D8               	btfss	status,0,c
  6280   00533C  EFA2  F029         	goto	u13101
  6281   005340  EFA4  F029         	goto	u13100
  6282   005344                     u13101:
  6283   005344  EF64  F029         	goto	l10618
  6284   005348                     u13100:
  6285   005348                     
  6286                           ;functions.c: 404:   HR_val=60000*4/HR_val;
  6287   005348  0E00               	movlw	0
  6288   00534A  6E24               	movwf	___fldiv@b^0,c
  6289   00534C  0E60               	movlw	96
  6290   00534E  6E25               	movwf	(___fldiv@b+1)^0,c
  6291   005350  0E6A               	movlw	106
  6292   005352  6E26               	movwf	(___fldiv@b+2)^0,c
  6293   005354  0E48               	movlw	72
  6294   005356  6E27               	movwf	(___fldiv@b+3)^0,c
  6295   005358  C1BC  F028         	movff	_HR_val,___fldiv@a
  6296   00535C  C1BD  F029         	movff	_HR_val+1,___fldiv@a+1
  6297   005360  C1BE  F02A         	movff	_HR_val+2,___fldiv@a+2
  6298   005364  C1BF  F02B         	movff	_HR_val+3,___fldiv@a+3
  6299   005368  EC6E  F01F         	call	___fldiv	;wreg free
  6300   00536C  C024  F1BC         	movff	?___fldiv,_HR_val
  6301   005370  C025  F1BD         	movff	?___fldiv+1,_HR_val+1
  6302   005374  C026  F1BE         	movff	?___fldiv+2,_HR_val+2
  6303   005378  C027  F1BF         	movff	?___fldiv+3,_HR_val+3
  6304                           
  6305                           ;functions.c: 405:   if(fabs(HR_Hysteresis-HR_val)>2){
  6306   00537C  0E00               	movlw	0
  6307   00537E  0100               	movlb	0	; () banked
  6308   005380  6F84               	movwf	___flge@ff1& (0+255),b
  6309   005382  0E00               	movlw	0
  6310   005384  6F85               	movwf	(___flge@ff1+1)& (0+255),b
  6311   005386  0E00               	movlw	0
  6312   005388  6F86               	movwf	(___flge@ff1+2)& (0+255),b
  6313   00538A  0E40               	movlw	64
  6314   00538C  6F87               	movwf	(___flge@ff1+3)& (0+255),b
  6315   00538E  C1BC  F078         	movff	_HR_val,___flsub@a
  6316   005392  C1BD  F079         	movff	_HR_val+1,___flsub@a+1
  6317   005396  C1BE  F07A         	movff	_HR_val+2,___flsub@a+2
  6318   00539A  C1BF  F07B         	movff	_HR_val+3,___flsub@a+3
  6319   00539E  0101               	movlb	1	; () banked
  6320   0053A0  51B7               	movf	_HR_Hysteresis& (0+255),w,b
  6321   0053A2  6E16               	movwf	___xxtofl@val^0,c
  6322   0053A4  6A17               	clrf	(___xxtofl@val+1)^0,c
  6323   0053A6  6A18               	clrf	(___xxtofl@val+2)^0,c
  6324   0053A8  6A19               	clrf	(___xxtofl@val+3)^0,c
  6325   0053AA  0E01               	movlw	1
  6326   0053AC  EC06  F02B         	call	___xxtofl
  6327   0053B0  C016  F074         	movff	?___xxtofl,___flsub@b
  6328   0053B4  C017  F075         	movff	?___xxtofl+1,___flsub@b+1
  6329   0053B8  C018  F076         	movff	?___xxtofl+2,___flsub@b+2
  6330   0053BC  C019  F077         	movff	?___xxtofl+3,___flsub@b+3
  6331   0053C0  EC54  F03B         	call	___flsub	;wreg free
  6332   0053C4  C074  F080         	movff	?___flsub,fabs@num
  6333   0053C8  C075  F081         	movff	?___flsub+1,fabs@num+1
  6334   0053CC  C076  F082         	movff	?___flsub+2,fabs@num+2
  6335   0053D0  C077  F083         	movff	?___flsub+3,fabs@num+3
  6336   0053D4  EC2F  F03B         	call	_fabs	;wreg free
  6337   0053D8  C080  F088         	movff	?_fabs,___flge@ff2
  6338   0053DC  C081  F089         	movff	?_fabs+1,___flge@ff2+1
  6339   0053E0  C082  F08A         	movff	?_fabs+2,___flge@ff2+2
  6340   0053E4  C083  F08B         	movff	?_fabs+3,___flge@ff2+3
  6341   0053E8  EC1C  F033         	call	___flge	;wreg free
  6342   0053EC  0100               	movlb	0	; () banked
  6343   0053EE  B0D8               	btfsc	status,0,c
  6344   0053F0  EFFC  F029         	goto	u13111
  6345   0053F4  EFFE  F029         	goto	u13110
  6346   0053F8                     u13111:
  6347   0053F8  EF1D  F02A         	goto	l445
  6348   0053FC                     u13110:
  6349   0053FC                     
  6350                           ; BSR set to: 0
  6351                           ;functions.c: 406:     HR_Hysteresis = (unsigned char)(HR_val+0.5);
  6352   0053FC  0E00               	movlw	0
  6353   0053FE  6E5A               	movwf	___fladd@a^0,c
  6354   005400  0E00               	movlw	0
  6355   005402  6E5B               	movwf	(___fladd@a+1)^0,c
  6356   005404  0E00               	movlw	0
  6357   005406  6E5C               	movwf	(___fladd@a+2)^0,c
  6358   005408  0E3F               	movlw	63
  6359   00540A  6E5D               	movwf	(___fladd@a+3)^0,c
  6360   00540C  C1BC  F056         	movff	_HR_val,___fladd@b
  6361   005410  C1BD  F057         	movff	_HR_val+1,___fladd@b+1
  6362   005414  C1BE  F058         	movff	_HR_val+2,___fladd@b+2
  6363   005418  C1BF  F059         	movff	_HR_val+3,___fladd@b+3
  6364   00541C  ECB3  F016         	call	___fladd	;wreg free
  6365   005420  C056  F066         	movff	?___fladd,___fltol@f1
  6366   005424  C057  F067         	movff	?___fladd+1,___fltol@f1+1
  6367   005428  C058  F068         	movff	?___fladd+2,___fltol@f1+2
  6368   00542C  C059  F069         	movff	?___fladd+3,___fltol@f1+3
  6369   005430  EC99  F032         	call	___fltol	;wreg free
  6370   005434  5066               	movf	?___fltol^0,w,c
  6371   005436  0101               	movlb	1	; () banked
  6372   005438  6FB7               	movwf	_HR_Hysteresis& (0+255),b
  6373   00543A                     l445:
  6374   00543A  0012               	return		;funcret
  6375   00543C                     __end_of_HeartRateCalc:
  6376                           	callstack 0
  6377                           
  6378 ;; *************** function _fabs *****************
  6379 ;; Defined at:
  6380 ;;		line 51 in file "functions.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;  num             4    0[BANK0 ] float 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;		None
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  4    0[BANK0 ] float 
  6387 ;; Registers used:
  6388 ;;		wreg, status,2, status,0, cstack
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6394 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6397 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6398 ;;Total ram usage:        4 bytes
  6399 ;; Hardware stack levels used: 1
  6400 ;; Hardware stack levels required when called: 2
  6401 ;; This function calls:
  6402 ;;		___flneg
  6403 ;; This function is called by:
  6404 ;;		_OxygenSPO2Calc
  6405 ;;		_HeartRateCalc
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           	psect	text27
  6410   00765E                     __ptext27:
  6411                           	callstack 0
  6412   00765E                     _fabs:
  6413                           	callstack 27
  6414   00765E                     
  6415                           ;functions.c: 52:     if (num < 0)
  6416   00765E  0100               	movlb	0	; () banked
  6417   007660  BF83               	btfsc	(fabs@num+3)& (0+255),7,b
  6418   007662  EF37  F03B         	goto	u12910
  6419   007666  EF35  F03B         	goto	u12911
  6420   00766A                     u12911:
  6421   00766A  EF4B  F03B         	goto	l264
  6422   00766E                     u12910:
  6423   00766E                     
  6424                           ; BSR set to: 0
  6425                           ;functions.c: 53:         return -num;
  6426   00766E  C080  F001         	movff	fabs@num,___flneg@f1
  6427   007672  C081  F002         	movff	fabs@num+1,___flneg@f1+1
  6428   007676  C082  F003         	movff	fabs@num+2,___flneg@f1+2
  6429   00767A  C083  F004         	movff	fabs@num+3,___flneg@f1+3
  6430   00767E  ECEF  F03B         	call	___flneg	;wreg free
  6431   007682  C001  F080         	movff	?___flneg,?_fabs
  6432   007686  C002  F081         	movff	?___flneg+1,?_fabs+1
  6433   00768A  C003  F082         	movff	?___flneg+2,?_fabs+2
  6434   00768E  C004  F083         	movff	?___flneg+3,?_fabs+3
  6435   007692  EF53  F03B         	goto	l265
  6436   007696                     l264:
  6437                           
  6438                           ; BSR set to: 0
  6439                           ;functions.c: 55:         return num;
  6440   007696  C080  F080         	movff	fabs@num,?_fabs
  6441   00769A  C081  F081         	movff	fabs@num+1,?_fabs+1
  6442   00769E  C082  F082         	movff	fabs@num+2,?_fabs+2
  6443   0076A2  C083  F083         	movff	fabs@num+3,?_fabs+3
  6444   0076A6                     l265:
  6445   0076A6  0012               	return		;funcret
  6446   0076A8                     __end_of_fabs:
  6447                           	callstack 0
  6448                           
  6449 ;; *************** function _DataPrinting *****************
  6450 ;; Defined at:
  6451 ;;		line 351 in file "functions.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;		None
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;		None
  6456 ;; Return value:  Size  Location     Type
  6457 ;;                  1    wreg      void 
  6458 ;; Registers used:
  6459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6466 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6468 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;Total ram usage:       16 bytes
  6470 ;; Hardware stack levels used: 1
  6471 ;; Hardware stack levels required when called: 10
  6472 ;; This function calls:
  6473 ;;		_UART1_SendFormatted
  6474 ;;		___fladd
  6475 ;;		___fldiv
  6476 ;;		___flmul
  6477 ;;		___flsub
  6478 ;;		_millis
  6479 ;; This function is called by:
  6480 ;;		_main
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text28
  6485   0049FE                     __ptext28:
  6486                           	callstack 0
  6487   0049FE                     _DataPrinting:
  6488                           	callstack 20
  6489   0049FE                     
  6490                           ;functions.c: 352:   if (Period == 1) {
  6491   0049FE  0101               	movlb	1	; () banked
  6492   004A00  05B2               	decf	_Period& (0+255),w,b
  6493   004A02  A4D8               	btfss	status,2,c
  6494   004A04  EF06  F025         	goto	u13141
  6495   004A08  EF08  F025         	goto	u13140
  6496   004A0C                     u13141:
  6497   004A0C  EF14  F025         	goto	l10664
  6498   004A10                     u13140:
  6499   004A10                     
  6500                           ; BSR set to: 1
  6501                           ;functions.c: 353:     UART1_SendFormatted("%c", 0);
  6502   004A10  0EF9               	movlw	low STR_31
  6503   004A12  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  6504   004A14  0EFF               	movlw	high STR_31
  6505   004A16  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  6506   004A18  0E00               	movlw	0
  6507   004A1A  6FD3               	movwf	(?_UART1_SendFormatted+3)& (0+255),b
  6508   004A1C  0E00               	movlw	0
  6509   004A1E  6FD2               	movwf	(?_UART1_SendFormatted+2)& (0+255),b
  6510   004A20  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  6511                           
  6512                           ;functions.c: 354:   } else if (PeriodEndCount == 2) {
  6513   004A24  EF23  F025         	goto	l10668
  6514   004A28                     l10664:
  6515                           
  6516                           ; BSR set to: 1
  6517   004A28  0E02               	movlw	2
  6518   004A2A  19B5               	xorwf	_PeriodEndCount& (0+255),w,b
  6519   004A2C  A4D8               	btfss	status,2,c
  6520   004A2E  EF1B  F025         	goto	u13151
  6521   004A32  EF1D  F025         	goto	u13150
  6522   004A36                     u13151:
  6523   004A36  EF23  F025         	goto	l10668
  6524   004A3A                     u13150:
  6525   004A3A                     
  6526                           ; BSR set to: 1
  6527                           ;functions.c: 355:     UART1_SendFormatted(" ");
  6528   004A3A  0EFC               	movlw	low STR_32
  6529   004A3C  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  6530   004A3E  0EFF               	movlw	high STR_32
  6531   004A40  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  6532   004A42  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  6533   004A46                     l10668:
  6534                           
  6535                           ;functions.c: 358:   if (Heart_Rate_Count > 4) {
  6536   004A46  0101               	movlb	1	; () banked
  6537   004A48  519F               	movf	(_Heart_Rate_Count+3)& (0+255),w,b
  6538   004A4A  119E               	iorwf	(_Heart_Rate_Count+2)& (0+255),w,b
  6539   004A4C  119D               	iorwf	(_Heart_Rate_Count+1)& (0+255),w,b
  6540   004A4E  E109               	bnz	u13160
  6541   004A50  0E05               	movlw	5
  6542   004A52  5D9C               	subwf	_Heart_Rate_Count& (0+255),w,b
  6543   004A54  A0D8               	btfss	status,0,c
  6544   004A56  EF2F  F025         	goto	u13161
  6545   004A5A  EF31  F025         	goto	u13160
  6546   004A5E                     u13161:
  6547   004A5E  EF2A  F026         	goto	l425
  6548   004A62                     u13160:
  6549   004A62                     
  6550                           ; BSR set to: 1
  6551                           ;functions.c: 359:     if (PeriodEndCount == 8) {
  6552   004A62  0E08               	movlw	8
  6553   004A64  19B5               	xorwf	_PeriodEndCount& (0+255),w,b
  6554   004A66  A4D8               	btfss	status,2,c
  6555   004A68  EF38  F025         	goto	u13171
  6556   004A6C  EF3A  F025         	goto	u13170
  6557   004A70                     u13171:
  6558   004A70  EF4D  F025         	goto	l10676
  6559   004A74                     u13170:
  6560   004A74                     
  6561                           ; BSR set to: 1
  6562                           ;functions.c: 360:       UART1_SendFormatted("%3d", (unsigned char)SpO2_Hysteresis);
  6563   004A74  0EF5               	movlw	low STR_33
  6564   004A76  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  6565   004A78  0EFF               	movlw	high STR_33
  6566   004A7A  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  6567   004A7C  C1B6  F1D2         	movff	_SpO2_Hysteresis,?_UART1_SendFormatted+2
  6568   004A80  6BD3               	clrf	(?_UART1_SendFormatted+3)& (0+255),b
  6569   004A82  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  6570                           
  6571                           ;functions.c: 361:       UART1_SendFormatted("%3d", (unsigned char)HR_Hysteresis);
  6572   004A86  0EF5               	movlw	low STR_33
  6573   004A88  0101               	movlb	1	; () banked
  6574   004A8A  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  6575   004A8C  0EFF               	movlw	high STR_33
  6576   004A8E  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  6577   004A90  C1B7  F1D2         	movff	_HR_Hysteresis,?_UART1_SendFormatted+2
  6578   004A94  6BD3               	clrf	(?_UART1_SendFormatted+3)& (0+255),b
  6579   004A96  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  6580   004A9A                     l10676:
  6581                           
  6582                           ;functions.c: 368:         UART1_SendFormatted("%f,%f,%d,%d,%d,Time:%lums\n", (1.05 - Ab
      +                          sorption_Coefficents[0] / beta_Average[0]) * 250 + 10, (1.05 - Absorption_Coefficents[1]
      +                           / beta_Average[1]) * 250 + 30, SpO2_Hysteresis, HR_Hysteresis, Period * 10, millis());
  6583   004A9A  0E00               	movlw	0
  6584   004A9C  6E41               	movwf	___flmul@a^0,c
  6585   004A9E  0E00               	movlw	0
  6586   004AA0  6E42               	movwf	(___flmul@a+1)^0,c
  6587   004AA2  0E7A               	movlw	122
  6588   004AA4  6E43               	movwf	(___flmul@a+2)^0,c
  6589   004AA6  0E43               	movlw	67
  6590   004AA8  6E44               	movwf	(___flmul@a+3)^0,c
  6591   004AAA  C148  F028         	movff	_beta_Average,___fldiv@a
  6592   004AAE  C149  F029         	movff	_beta_Average+1,___fldiv@a+1
  6593   004AB2  C14A  F02A         	movff	_beta_Average+2,___fldiv@a+2
  6594   004AB6  C14B  F02B         	movff	_beta_Average+3,___fldiv@a+3
  6595   004ABA  C150  F024         	movff	_Absorption_Coefficents,___fldiv@b
  6596   004ABE  C151  F025         	movff	_Absorption_Coefficents+1,___fldiv@b+1
  6597   004AC2  C152  F026         	movff	_Absorption_Coefficents+2,___fldiv@b+2
  6598   004AC6  C153  F027         	movff	_Absorption_Coefficents+3,___fldiv@b+3
  6599   004ACA  EC6E  F01F         	call	___fldiv	;wreg free
  6600   004ACE  C024  F078         	movff	?___fldiv,___flsub@a
  6601   004AD2  C025  F079         	movff	?___fldiv+1,___flsub@a+1
  6602   004AD6  C026  F07A         	movff	?___fldiv+2,___flsub@a+2
  6603   004ADA  C027  F07B         	movff	?___fldiv+3,___flsub@a+3
  6604   004ADE  0E66               	movlw	102
  6605   004AE0  6E74               	movwf	___flsub@b^0,c
  6606   004AE2  0E66               	movlw	102
  6607   004AE4  6E75               	movwf	(___flsub@b+1)^0,c
  6608   004AE6  0E86               	movlw	134
  6609   004AE8  6E76               	movwf	(___flsub@b+2)^0,c
  6610   004AEA  0E3F               	movlw	63
  6611   004AEC  6E77               	movwf	(___flsub@b+3)^0,c
  6612   004AEE  EC54  F03B         	call	___flsub	;wreg free
  6613   004AF2  C074  F03D         	movff	?___flsub,___flmul@b
  6614   004AF6  C075  F03E         	movff	?___flsub+1,___flmul@b+1
  6615   004AFA  C076  F03F         	movff	?___flsub+2,___flmul@b+2
  6616   004AFE  C077  F040         	movff	?___flsub+3,___flmul@b+3
  6617   004B02  EC59  F01D         	call	___flmul	;wreg free
  6618   004B06  C03D  F1EC         	movff	?___flmul,_DataPrinting$1715
  6619   004B0A  C03E  F1ED         	movff	?___flmul+1,_DataPrinting$1715+1
  6620   004B0E  C03F  F1EE         	movff	?___flmul+2,_DataPrinting$1715+2
  6621   004B12  C040  F1EF         	movff	?___flmul+3,_DataPrinting$1715+3
  6622                           
  6623                           ;functions.c: 368:         UART1_SendFormatted("%f,%f,%d,%d,%d,Time:%lums\n", (1.05 - Ab
      +                          sorption_Coefficents[0] / beta_Average[0]) * 250 + 10, (1.05 - Absorption_Coefficents[1]
      +                           / beta_Average[1]) * 250 + 30, SpO2_Hysteresis, HR_Hysteresis, Period * 10, millis());
  6624   004B16  0E00               	movlw	0
  6625   004B18  6E41               	movwf	___flmul@a^0,c
  6626   004B1A  0E00               	movlw	0
  6627   004B1C  6E42               	movwf	(___flmul@a+1)^0,c
  6628   004B1E  0E7A               	movlw	122
  6629   004B20  6E43               	movwf	(___flmul@a+2)^0,c
  6630   004B22  0E43               	movlw	67
  6631   004B24  6E44               	movwf	(___flmul@a+3)^0,c
  6632   004B26  C14C  F028         	movff	_beta_Average+4,___fldiv@a
  6633   004B2A  C14D  F029         	movff	_beta_Average+5,___fldiv@a+1
  6634   004B2E  C14E  F02A         	movff	_beta_Average+6,___fldiv@a+2
  6635   004B32  C14F  F02B         	movff	_beta_Average+7,___fldiv@a+3
  6636   004B36  C154  F024         	movff	_Absorption_Coefficents+4,___fldiv@b
  6637   004B3A  C155  F025         	movff	_Absorption_Coefficents+5,___fldiv@b+1
  6638   004B3E  C156  F026         	movff	_Absorption_Coefficents+6,___fldiv@b+2
  6639   004B42  C157  F027         	movff	_Absorption_Coefficents+7,___fldiv@b+3
  6640   004B46  EC6E  F01F         	call	___fldiv	;wreg free
  6641   004B4A  C024  F078         	movff	?___fldiv,___flsub@a
  6642   004B4E  C025  F079         	movff	?___fldiv+1,___flsub@a+1
  6643   004B52  C026  F07A         	movff	?___fldiv+2,___flsub@a+2
  6644   004B56  C027  F07B         	movff	?___fldiv+3,___flsub@a+3
  6645   004B5A  0E66               	movlw	102
  6646   004B5C  6E74               	movwf	___flsub@b^0,c
  6647   004B5E  0E66               	movlw	102
  6648   004B60  6E75               	movwf	(___flsub@b+1)^0,c
  6649   004B62  0E86               	movlw	134
  6650   004B64  6E76               	movwf	(___flsub@b+2)^0,c
  6651   004B66  0E3F               	movlw	63
  6652   004B68  6E77               	movwf	(___flsub@b+3)^0,c
  6653   004B6A  EC54  F03B         	call	___flsub	;wreg free
  6654   004B6E  C074  F03D         	movff	?___flsub,___flmul@b
  6655   004B72  C075  F03E         	movff	?___flsub+1,___flmul@b+1
  6656   004B76  C076  F03F         	movff	?___flsub+2,___flmul@b+2
  6657   004B7A  C077  F040         	movff	?___flsub+3,___flmul@b+3
  6658   004B7E  EC59  F01D         	call	___flmul	;wreg free
  6659   004B82  C03D  F1F0         	movff	?___flmul,_DataPrinting$1716
  6660   004B86  C03E  F1F1         	movff	?___flmul+1,_DataPrinting$1716+1
  6661   004B8A  C03F  F1F2         	movff	?___flmul+2,_DataPrinting$1716+2
  6662   004B8E  C040  F1F3         	movff	?___flmul+3,_DataPrinting$1716+3
  6663   004B92                     
  6664                           ;functions.c: 368:         UART1_SendFormatted("%f,%f,%d,%d,%d,Time:%lums\n", (1.05 - Ab
      +                          sorption_Coefficents[0] / beta_Average[0]) * 250 + 10, (1.05 - Absorption_Coefficents[1]
      +                           / beta_Average[1]) * 250 + 30, SpO2_Hysteresis, HR_Hysteresis, Period * 10, millis());
  6665   004B92  C1EC  F056         	movff	_DataPrinting$1715,___fladd@b
  6666   004B96  C1ED  F057         	movff	_DataPrinting$1715+1,___fladd@b+1
  6667   004B9A  C1EE  F058         	movff	_DataPrinting$1715+2,___fladd@b+2
  6668   004B9E  C1EF  F059         	movff	_DataPrinting$1715+3,___fladd@b+3
  6669   004BA2  0E00               	movlw	0
  6670   004BA4  6E5A               	movwf	___fladd@a^0,c
  6671   004BA6  0E00               	movlw	0
  6672   004BA8  6E5B               	movwf	(___fladd@a+1)^0,c
  6673   004BAA  0E20               	movlw	32
  6674   004BAC  6E5C               	movwf	(___fladd@a+2)^0,c
  6675   004BAE  0E41               	movlw	65
  6676   004BB0  6E5D               	movwf	(___fladd@a+3)^0,c
  6677   004BB2  ECB3  F016         	call	___fladd	;wreg free
  6678   004BB6  C056  F1F4         	movff	?___fladd,_DataPrinting$1717
  6679   004BBA  C057  F1F5         	movff	?___fladd+1,_DataPrinting$1717+1
  6680   004BBE  C058  F1F6         	movff	?___fladd+2,_DataPrinting$1717+2
  6681   004BC2  C059  F1F7         	movff	?___fladd+3,_DataPrinting$1717+3
  6682   004BC6                     
  6683                           ;functions.c: 368:         UART1_SendFormatted("%f,%f,%d,%d,%d,Time:%lums\n", (1.05 - Ab
      +                          sorption_Coefficents[0] / beta_Average[0]) * 250 + 10, (1.05 - Absorption_Coefficents[1]
      +                           / beta_Average[1]) * 250 + 30, SpO2_Hysteresis, HR_Hysteresis, Period * 10, millis());
  6684   004BC6  C1F0  F056         	movff	_DataPrinting$1716,___fladd@b
  6685   004BCA  C1F1  F057         	movff	_DataPrinting$1716+1,___fladd@b+1
  6686   004BCE  C1F2  F058         	movff	_DataPrinting$1716+2,___fladd@b+2
  6687   004BD2  C1F3  F059         	movff	_DataPrinting$1716+3,___fladd@b+3
  6688   004BD6  0E00               	movlw	0
  6689   004BD8  6E5A               	movwf	___fladd@a^0,c
  6690   004BDA  0E00               	movlw	0
  6691   004BDC  6E5B               	movwf	(___fladd@a+1)^0,c
  6692   004BDE  0EF0               	movlw	240
  6693   004BE0  6E5C               	movwf	(___fladd@a+2)^0,c
  6694   004BE2  0E41               	movlw	65
  6695   004BE4  6E5D               	movwf	(___fladd@a+3)^0,c
  6696   004BE6  ECB3  F016         	call	___fladd	;wreg free
  6697   004BEA  C056  F1F8         	movff	?___fladd,_DataPrinting$1718
  6698   004BEE  C057  F1F9         	movff	?___fladd+1,_DataPrinting$1718+1
  6699   004BF2  C058  F1FA         	movff	?___fladd+2,_DataPrinting$1718+2
  6700   004BF6  C059  F1FB         	movff	?___fladd+3,_DataPrinting$1718+3
  6701   004BFA                     
  6702                           ;functions.c: 368:         UART1_SendFormatted("%f,%f,%d,%d,%d,Time:%lums\n", (1.05 - Ab
      +                          sorption_Coefficents[0] / beta_Average[0]) * 250 + 10, (1.05 - Absorption_Coefficents[1]
      +                           / beta_Average[1]) * 250 + 30, SpO2_Hysteresis, HR_Hysteresis, Period * 10, millis());
  6703   004BFA  0E16               	movlw	low STR_36
  6704   004BFC  0101               	movlb	1	; () banked
  6705   004BFE  6FD0               	movwf	UART1_SendFormatted@format& (0+255),b
  6706   004C00  0EFE               	movlw	high STR_36
  6707   004C02  6FD1               	movwf	(UART1_SendFormatted@format+1)& (0+255),b
  6708   004C04  C1F4  F1D2         	movff	_DataPrinting$1717,?_UART1_SendFormatted+2
  6709   004C08  C1F5  F1D3         	movff	_DataPrinting$1717+1,?_UART1_SendFormatted+3
  6710   004C0C  C1F6  F1D4         	movff	_DataPrinting$1717+2,?_UART1_SendFormatted+4
  6711   004C10  C1F7  F1D5         	movff	_DataPrinting$1717+3,?_UART1_SendFormatted+5
  6712   004C14  C1F8  F1D6         	movff	_DataPrinting$1718,?_UART1_SendFormatted+6
  6713   004C18  C1F9  F1D7         	movff	_DataPrinting$1718+1,?_UART1_SendFormatted+7
  6714   004C1C  C1FA  F1D8         	movff	_DataPrinting$1718+2,?_UART1_SendFormatted+8
  6715   004C20  C1FB  F1D9         	movff	_DataPrinting$1718+3,?_UART1_SendFormatted+9
  6716   004C24  C1B6  F1DA         	movff	_SpO2_Hysteresis,?_UART1_SendFormatted+10
  6717   004C28  6BDB               	clrf	(?_UART1_SendFormatted+11)& (0+255),b
  6718   004C2A  C1B7  F1DC         	movff	_HR_Hysteresis,?_UART1_SendFormatted+12
  6719   004C2E  6BDD               	clrf	(?_UART1_SendFormatted+13)& (0+255),b
  6720   004C30  51B2               	movf	_Period& (0+255),w,b
  6721   004C32  0D0A               	mullw	10
  6722   004C34  CFF3 F1DE          	movff	prodl,?_UART1_SendFormatted+14
  6723   004C38  CFF4 F1DF          	movff	prodh,?_UART1_SendFormatted+15
  6724   004C3C  EC7B  F039         	call	_millis	;wreg free
  6725   004C40  C001  F1E0         	movff	?_millis,?_UART1_SendFormatted+16
  6726   004C44  C002  F1E1         	movff	?_millis+1,?_UART1_SendFormatted+17
  6727   004C48  C003  F1E2         	movff	?_millis+2,?_UART1_SendFormatted+18
  6728   004C4C  C004  F1E3         	movff	?_millis+3,?_UART1_SendFormatted+19
  6729   004C50  ECB7  F03B         	call	_UART1_SendFormatted	;wreg free
  6730   004C54                     l425:
  6731   004C54  0012               	return		;funcret
  6732   004C56                     __end_of_DataPrinting:
  6733                           	callstack 0
  6734                           
  6735 ;; *************** function _millis *****************
  6736 ;; Defined at:
  6737 ;;		line 126 in file "functions.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;		None
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;  milliseconds    4   11[COMRAM] unsigned long 
  6742 ;;  tmr1Val         2   15[COMRAM] unsigned int 
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  4    0[COMRAM] unsigned long 
  6745 ;; Registers used:
  6746 ;;		wreg, status,2, status,0
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;Total ram usage:       17 bytes
  6757 ;; Hardware stack levels used: 1
  6758 ;; Hardware stack levels required when called: 1
  6759 ;; This function calls:
  6760 ;;		Nothing
  6761 ;; This function is called by:
  6762 ;;		_Setting
  6763 ;;		_ConfigurationCheck
  6764 ;;		_DataPrinting
  6765 ;;		_TimerPeriodCheck
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text29
  6770   0072F6                     __ptext29:
  6771                           	callstack 0
  6772   0072F6                     _millis:
  6773                           	callstack 27
  6774   0072F6                     l303:
  6775   0072F6                     
  6776                           ;functions.c: 132:         tmr1Val = ((unsigned int)TMR1H << 8) | TMR1L;
  6777   0072F6  50CF               	movf	207,w,c	;volatile
  6778   0072F8  6E05               	movwf	??_millis^0,c
  6779   0072FA  50CE               	movf	206,w,c	;volatile
  6780   0072FC  6E10               	movwf	millis@tmr1Val^0,c
  6781   0072FE  C005  F011         	movff	??_millis,millis@tmr1Val+1
  6782   007302                     
  6783                           ;functions.c: 134:         milliseconds = (timerOverflowCount << 16) + (tmr1Val >> 6);
  6784   007302  C010  F005         	movff	millis@tmr1Val,??_millis
  6785   007306  C011  F006         	movff	millis@tmr1Val+1,??_millis+1
  6786   00730A  0E06               	movlw	6
  6787   00730C  6E07               	movwf	(??_millis+2)^0,c
  6788   00730E                     u12725:
  6789   00730E  90D8               	bcf	status,0,c
  6790   007310  3206               	rrcf	(??_millis+1)^0,f,c
  6791   007312  3205               	rrcf	??_millis^0,f,c
  6792   007314  2E07               	decfsz	(??_millis+2)^0,f,c
  6793   007316  EF87  F039         	goto	u12725
  6794   00731A  C18C  F008         	movff	_timerOverflowCount,??_millis+3	;volatile
  6795   00731E  C18D  F009         	movff	_timerOverflowCount+1,??_millis+4	;volatile
  6796   007322  C18E  F00A         	movff	_timerOverflowCount+2,??_millis+5	;volatile
  6797   007326  C18F  F00B         	movff	_timerOverflowCount+3,??_millis+6	;volatile
  6798   00732A  C009  F00B         	movff	??_millis+4,??_millis+6
  6799   00732E  C008  F00A         	movff	??_millis+3,??_millis+5
  6800   007332  6A09               	clrf	(??_millis+4)^0,c
  6801   007334  6A08               	clrf	(??_millis+3)^0,c
  6802   007336  5005               	movf	??_millis^0,w,c
  6803   007338  2408               	addwf	(??_millis+3)^0,w,c
  6804   00733A  6E0C               	movwf	millis@milliseconds^0,c
  6805   00733C  5006               	movf	(??_millis+1)^0,w,c
  6806   00733E  2009               	addwfc	(??_millis+4)^0,w,c
  6807   007340  6E0D               	movwf	(millis@milliseconds+1)^0,c
  6808   007342  0E00               	movlw	0
  6809   007344  200A               	addwfc	(??_millis+5)^0,w,c
  6810   007346  6E0E               	movwf	(millis@milliseconds+2)^0,c
  6811   007348  0E00               	movlw	0
  6812   00734A  200B               	addwfc	(??_millis+6)^0,w,c
  6813   00734C  6E0F               	movwf	(millis@milliseconds+3)^0,c
  6814   00734E                     
  6815                           ;functions.c: 135:     } while (TMR1IF);
  6816   00734E  B09E               	btfsc	3998,0,c	;volatile
  6817   007350  EFAC  F039         	goto	u12731
  6818   007354  EFAE  F039         	goto	u12730
  6819   007358                     u12731:
  6820   007358  EF7B  F039         	goto	l303
  6821   00735C                     u12730:
  6822   00735C                     
  6823                           ;functions.c: 137:     return milliseconds;
  6824   00735C  C00C  F001         	movff	millis@milliseconds,?_millis
  6825   007360  C00D  F002         	movff	millis@milliseconds+1,?_millis+1
  6826   007364  C00E  F003         	movff	millis@milliseconds+2,?_millis+2
  6827   007368  C00F  F004         	movff	millis@milliseconds+3,?_millis+3
  6828   00736C  0012               	return		;funcret
  6829   00736E                     __end_of_millis:
  6830                           	callstack 0
  6831                           
  6832 ;; *************** function _UART1_SendFormatted *****************
  6833 ;; Defined at:
  6834 ;;		line 43 in file "functions.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  format          2   16[BANK1 ] PTR const unsigned char 
  6837 ;;		 -> STR_38(5), STR_37(5), STR_36(27), STR_35(26), 
  6838 ;;		 -> STR_34(4), STR_33(4), STR_32(2), STR_31(3), 
  6839 ;;		 -> STR_30(24), STR_29(58), STR_28(14), STR_27(13), 
  6840 ;;		 -> STR_26(15), STR_25(13), STR_24(13), STR_23(7), 
  6841 ;;		 -> STR_22(17), STR_21(13), STR_20(15), STR_19(14), 
  6842 ;;		 -> STR_18(16), STR_17(16), STR_16(13), STR_15(14), 
  6843 ;;		 -> STR_14(18), STR_13(10), STR_12(17), STR_11(27), 
  6844 ;;		 -> STR_10(24), STR_9(21), STR_8(24), STR_7(24), 
  6845 ;;		 -> STR_6(24), STR_5(76), STR_4(15), STR_3(38), 
  6846 ;;		 -> STR_2(19), STR_1(19), 
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;  buffer        256    0[BANK2 ] unsigned char [256]
  6849 ;;  args            2  121[BANK0 ] PTR void [1]
  6850 ;;		 -> ?_UART1_SendFormatted(1), 
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  1    wreg      void 
  6853 ;; Registers used:
  6854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6860 ;;      Params:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;      Locals:         0       2       0     256       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6863 ;;      Totals:         0       2      28     256       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;Total ram usage:      286 bytes
  6865 ;; Hardware stack levels used: 1
  6866 ;; Hardware stack levels required when called: 9
  6867 ;; This function calls:
  6868 ;;		_UART1_Send
  6869 ;;		_vsnprintf
  6870 ;; This function is called by:
  6871 ;;		_Setting
  6872 ;;		_DeviceInitialization
  6873 ;;		_DetectorTest
  6874 ;;		_WaitReleaseSW1
  6875 ;;		_ResistorAdjust
  6876 ;;		_StartPrinting
  6877 ;;		_FormatForPrint
  6878 ;;		_DataPrinting
  6879 ;;		_PrintNoData
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text30
  6884   00776E                     __ptext30:
  6885                           	callstack 0
  6886   00776E                     _UART1_SendFormatted:
  6887                           	callstack 19
  6888   00776E                     
  6889                           ;functions.c: 44:     char buffer[256];;functions.c: 45:     va_list args;;functions.c: 
      +                          46:     *args = __va_start();
  6890   00776E  0ED2               	movlw	low (?_UART1_SendFormatted+2)
  6891   007770  0100               	movlb	0	; () banked
  6892   007772  6FF9               	movwf	UART1_SendFormatted@args& (0+255),b
  6893   007774  0E01               	movlw	high (?_UART1_SendFormatted+2)
  6894   007776  6FFA               	movwf	(UART1_SendFormatted@args+1)& (0+255),b
  6895   007778                     
  6896                           ; BSR set to: 0
  6897                           ;functions.c: 47:     vsnprintf(buffer, sizeof(buffer), format, args);
  6898   007778  0E00               	movlw	low UART1_SendFormatted@buffer
  6899   00777A  6FEF               	movwf	vsnprintf@s& (0+255),b
  6900   00777C  0E02               	movlw	high UART1_SendFormatted@buffer
  6901   00777E  6FF0               	movwf	(vsnprintf@s+1)& (0+255),b
  6902   007780  0E01               	movlw	1
  6903   007782  6FF2               	movwf	(vsnprintf@n+1)& (0+255),b
  6904   007784  0E00               	movlw	0
  6905   007786  6FF1               	movwf	vsnprintf@n& (0+255),b
  6906   007788  C1D0  F0F3         	movff	UART1_SendFormatted@format,vsnprintf@fmt
  6907   00778C  C1D1  F0F4         	movff	UART1_SendFormatted@format+1,vsnprintf@fmt+1
  6908   007790  0EF9               	movlw	low UART1_SendFormatted@args
  6909   007792  6FF5               	movwf	vsnprintf@ap& (0+255),b
  6910   007794  EC6B  F030         	call	_vsnprintf	;wreg free
  6911   007798                     
  6912                           ;functions.c: 49:     UART1_Send(buffer);
  6913   007798  0E00               	movlw	low UART1_SendFormatted@buffer
  6914   00779A  6E01               	movwf	UART1_Send@data^0,c
  6915   00779C  0E02               	movlw	high UART1_SendFormatted@buffer
  6916   00779E  6E02               	movwf	(UART1_Send@data+1)^0,c
  6917   0077A0  EC99  F03B         	call	_UART1_Send	;wreg free
  6918   0077A4  0012               	return		;funcret
  6919   0077A6                     __end_of_UART1_SendFormatted:
  6920                           	callstack 0
  6921                           
  6922 ;; *************** function _vsnprintf *****************
  6923 ;; Defined at:
  6924 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_vsnprintf.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  s               2  111[BANK0 ] PTR unsigned char 
  6927 ;;		 -> UART1_SendFormatted@buffer(256), 
  6928 ;;  n               2  113[BANK0 ] unsigned int 
  6929 ;;  fmt             2  115[BANK0 ] PTR const unsigned char 
  6930 ;;		 -> STR_38(5), STR_37(5), STR_36(27), STR_35(26), 
  6931 ;;		 -> STR_34(4), STR_33(4), STR_32(2), STR_31(3), 
  6932 ;;		 -> STR_30(24), STR_29(58), STR_28(14), STR_27(13), 
  6933 ;;		 -> STR_26(15), STR_25(13), STR_24(13), STR_23(7), 
  6934 ;;		 -> STR_22(17), STR_21(13), STR_20(15), STR_19(14), 
  6935 ;;		 -> STR_18(16), STR_17(16), STR_16(13), STR_15(14), 
  6936 ;;		 -> STR_14(18), STR_13(10), STR_12(17), STR_11(27), 
  6937 ;;		 -> STR_10(24), STR_9(21), STR_8(24), STR_7(24), 
  6938 ;;		 -> STR_6(24), STR_5(76), STR_4(15), STR_3(38), 
  6939 ;;		 -> STR_2(19), STR_1(19), 
  6940 ;;  ap              1  117[BANK0 ] PTR PTR void 
  6941 ;;		 -> UART1_SendFormatted@args(2), 
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;  f              12    4[BANK1 ] struct _IO_FILE
  6944 ;;  cnt             2    2[BANK1 ] int 
  6945 ;; Return value:  Size  Location     Type
  6946 ;;                  2  111[BANK0 ] int 
  6947 ;; Registers used:
  6948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/0
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6954 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6957 ;;      Totals:         0      10      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6958 ;;Total ram usage:       26 bytes
  6959 ;; Hardware stack levels used: 1
  6960 ;; Hardware stack levels required when called: 8
  6961 ;; This function calls:
  6962 ;;		_vfprintf
  6963 ;; This function is called by:
  6964 ;;		_UART1_SendFormatted
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           	psect	text31
  6969   0060D6                     __ptext31:
  6970                           	callstack 0
  6971   0060D6                     _vsnprintf:
  6972                           	callstack 19
  6973   0060D6  0E80               	movlw	128
  6974   0060D8  0100               	movlb	0	; () banked
  6975   0060DA  5DF2               	subwf	(vsnprintf@n+1)& (0+255),w,b
  6976   0060DC  A0D8               	btfss	status,0,c
  6977   0060DE  EF73  F030         	goto	u12481
  6978   0060E2  EF75  F030         	goto	u12480
  6979   0060E6                     u12481:
  6980   0060E6  EF7C  F030         	goto	l10212
  6981   0060EA                     u12480:
  6982   0060EA                     
  6983                           ; BSR set to: 0
  6984   0060EA  0E00               	movlw	0
  6985   0060EC  0101               	movlb	1	; () banked
  6986   0060EE  6FAF               	movwf	(_errno+1)& (0+255),b
  6987   0060F0  0E4B               	movlw	75
  6988   0060F2  6FAE               	movwf	_errno& (0+255),b
  6989   0060F4  EFF8  F030         	goto	l1135
  6990   0060F8                     l10212:
  6991                           
  6992                           ; BSR set to: 0
  6993   0060F8  C0EF  F1C4         	movff	vsnprintf@s,vsnprintf@f
  6994   0060FC  C0F0  F1C5         	movff	vsnprintf@s+1,vsnprintf@f+1
  6995   006100  51F2               	movf	(vsnprintf@n+1)& (0+255),w,b
  6996   006102  E109               	bnz	u12490
  6997   006104  0E02               	movlw	2
  6998   006106  5DF1               	subwf	vsnprintf@n& (0+255),w,b
  6999   006108  A0D8               	btfss	status,0,c
  7000   00610A  EF89  F030         	goto	u12491
  7001   00610E  EF8B  F030         	goto	u12490
  7002   006112                     u12491:
  7003   006112  EF9A  F030         	goto	l10218
  7004   006116                     u12490:
  7005   006116                     
  7006                           ; BSR set to: 0
  7007   006116  0EFF               	movlw	255
  7008   006118  25F1               	addwf	vsnprintf@n& (0+255),w,b
  7009   00611A  0101               	movlb	1	; () banked
  7010   00611C  6FCE               	movwf	(vsnprintf@f+10)& (0+255),b
  7011   00611E  0EFF               	movlw	255
  7012   006120  0100               	movlb	0	; () banked
  7013   006122  21F2               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  7014   006124  0101               	movlb	1	; () banked
  7015   006126  6FCF               	movwf	(vsnprintf@f+11)& (0+255),b
  7016   006128                     
  7017                           ; BSR set to: 1
  7018   006128  0E00               	movlw	0
  7019   00612A  6FC8               	movwf	(vsnprintf@f+4)& (0+255),b
  7020   00612C  0E00               	movlw	0
  7021   00612E  6FC7               	movwf	(vsnprintf@f+3)& (0+255),b
  7022   006130  EFA3  F030         	goto	l10220
  7023   006134                     l10218:
  7024                           
  7025                           ; BSR set to: 0
  7026   006134  0E00               	movlw	0
  7027   006136  0101               	movlb	1	; () banked
  7028   006138  6FCF               	movwf	(vsnprintf@f+11)& (0+255),b
  7029   00613A  0E01               	movlw	1
  7030   00613C  6FCE               	movwf	(vsnprintf@f+10)& (0+255),b
  7031   00613E  0E00               	movlw	0
  7032   006140  6FC8               	movwf	(vsnprintf@f+4)& (0+255),b
  7033   006142  0E01               	movlw	1
  7034   006144  6FC7               	movwf	(vsnprintf@f+3)& (0+255),b
  7035   006146                     l10220:
  7036                           
  7037                           ; BSR set to: 1
  7038   006146  0EC4               	movlw	low vsnprintf@f
  7039   006148  0100               	movlb	0	; () banked
  7040   00614A  6FE8               	movwf	vfprintf@fp& (0+255),b
  7041   00614C  0E01               	movlw	high vsnprintf@f
  7042   00614E  6FE9               	movwf	(vfprintf@fp+1)& (0+255),b
  7043   006150  C0F3  F0EA         	movff	vsnprintf@fmt,vfprintf@fmt
  7044   006154  C0F4  F0EB         	movff	vsnprintf@fmt+1,vfprintf@fmt+1
  7045   006158  C0F5  F0EC         	movff	vsnprintf@ap,vfprintf@ap
  7046   00615C  EC26  F03A         	call	_vfprintf	;wreg free
  7047   006160  C0E8  F1C2         	movff	?_vfprintf,vsnprintf@cnt
  7048   006164  C0E9  F1C3         	movff	?_vfprintf+1,vsnprintf@cnt+1
  7049   006168  0100               	movlb	0	; () banked
  7050   00616A  51F1               	movf	vsnprintf@n& (0+255),w,b
  7051   00616C  11F2               	iorwf	(vsnprintf@n+1)& (0+255),w,b
  7052   00616E  B4D8               	btfsc	status,2,c
  7053   006170  EFBC  F030         	goto	u12501
  7054   006174  EFBE  F030         	goto	u12500
  7055   006178                     u12501:
  7056   006178  EFF8  F030         	goto	l1135
  7057   00617C                     u12500:
  7058   00617C                     
  7059                           ; BSR set to: 0
  7060   00617C  0101               	movlb	1	; () banked
  7061   00617E  BFC3               	btfsc	(vsnprintf@cnt+1)& (0+255),7,b
  7062   006180  EFC4  F030         	goto	u12511
  7063   006184  EFC6  F030         	goto	u12510
  7064   006188                     u12511:
  7065   006188  EFF8  F030         	goto	l1135
  7066   00618C                     u12510:
  7067   00618C                     
  7068                           ; BSR set to: 1
  7069   00618C  0EFF               	movlw	255
  7070   00618E  0100               	movlb	0	; () banked
  7071   006190  25F1               	addwf	vsnprintf@n& (0+255),w,b
  7072   006192  6FF6               	movwf	??_vsnprintf& (0+255),b
  7073   006194  0EFF               	movlw	255
  7074   006196  21F2               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  7075   006198  6FF7               	movwf	(??_vsnprintf+1)& (0+255),b
  7076   00619A  51F6               	movf	??_vsnprintf& (0+255),w,b
  7077   00619C  0101               	movlb	1	; () banked
  7078   00619E  5DC2               	subwf	vsnprintf@cnt& (0+255),w,b
  7079   0061A0  51C3               	movf	(vsnprintf@cnt+1)& (0+255),w,b
  7080   0061A2  0A80               	xorlw	128
  7081   0061A4  0100               	movlb	0	; () banked
  7082   0061A6  6FF8               	movwf	(??_vsnprintf+2)& (0+255),b
  7083   0061A8  51F7               	movf	(??_vsnprintf+1)& (0+255),w,b
  7084   0061AA  0A80               	xorlw	128
  7085   0061AC  59F8               	subwfb	(??_vsnprintf+2)& (0+255),w,b
  7086   0061AE  A0D8               	btfss	status,0,c
  7087   0061B0  EFDC  F030         	goto	u12521
  7088   0061B4  EFDE  F030         	goto	u12520
  7089   0061B8                     u12521:
  7090   0061B8  EFE9  F030         	goto	l1140
  7091   0061BC                     u12520:
  7092   0061BC                     
  7093                           ; BSR set to: 0
  7094   0061BC  0EFF               	movlw	255
  7095   0061BE  25F1               	addwf	vsnprintf@n& (0+255),w,b
  7096   0061C0  0101               	movlb	1	; () banked
  7097   0061C2  6FC0               	movwf	_vsnprintf$1184& (0+255),b
  7098   0061C4  0EFF               	movlw	255
  7099   0061C6  0100               	movlb	0	; () banked
  7100   0061C8  21F2               	addwfc	(vsnprintf@n+1)& (0+255),w,b
  7101   0061CA  0101               	movlb	1	; () banked
  7102   0061CC  6FC1               	movwf	(_vsnprintf$1184+1)& (0+255),b
  7103   0061CE  EFED  F030         	goto	l10230
  7104   0061D2                     l1140:
  7105                           
  7106                           ; BSR set to: 0
  7107   0061D2  C1C2  F1C0         	movff	vsnprintf@cnt,_vsnprintf$1184
  7108   0061D6  C1C3  F1C1         	movff	vsnprintf@cnt+1,_vsnprintf$1184+1
  7109   0061DA                     l10230:
  7110   0061DA  0101               	movlb	1	; () banked
  7111   0061DC  51C0               	movf	_vsnprintf$1184& (0+255),w,b
  7112   0061DE  0100               	movlb	0	; () banked
  7113   0061E0  25EF               	addwf	vsnprintf@s& (0+255),w,b
  7114   0061E2  6ED9               	movwf	fsr2l,c
  7115   0061E4  0101               	movlb	1	; () banked
  7116   0061E6  51C1               	movf	(_vsnprintf$1184+1)& (0+255),w,b
  7117   0061E8  0100               	movlb	0	; () banked
  7118   0061EA  21F0               	addwfc	(vsnprintf@s+1)& (0+255),w,b
  7119   0061EC  6EDA               	movwf	fsr2h,c
  7120   0061EE  6ADF               	clrf	indf2,c
  7121   0061F0                     l1135:
  7122   0061F0  0012               	return		;funcret
  7123   0061F2                     __end_of_vsnprintf:
  7124                           	callstack 0
  7125                           
  7126 ;; *************** function _vfprintf *****************
  7127 ;; Defined at:
  7128 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  fp              2  104[BANK0 ] PTR struct _IO_FILE
  7131 ;;		 -> vsnprintf@f(12), 
  7132 ;;  fmt             2  106[BANK0 ] PTR const unsigned char 
  7133 ;;		 -> STR_38(5), STR_37(5), STR_36(27), STR_35(26), 
  7134 ;;		 -> STR_34(4), STR_33(4), STR_32(2), STR_31(3), 
  7135 ;;		 -> STR_30(24), STR_29(58), STR_28(14), STR_27(13), 
  7136 ;;		 -> STR_26(15), STR_25(13), STR_24(13), STR_23(7), 
  7137 ;;		 -> STR_22(17), STR_21(13), STR_20(15), STR_19(14), 
  7138 ;;		 -> STR_18(16), STR_17(16), STR_16(13), STR_15(14), 
  7139 ;;		 -> STR_14(18), STR_13(10), STR_12(17), STR_11(27), 
  7140 ;;		 -> STR_10(24), STR_9(21), STR_8(24), STR_7(24), 
  7141 ;;		 -> STR_6(24), STR_5(76), STR_4(15), STR_3(38), 
  7142 ;;		 -> STR_2(19), STR_1(19), 
  7143 ;;  ap              1  108[BANK0 ] PTR PTR void 
  7144 ;;		 -> UART1_SendFormatted@args(2), 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  7147 ;;		 -> STR_38(5), STR_37(5), STR_36(27), STR_35(26), 
  7148 ;;		 -> STR_34(4), STR_33(4), STR_32(2), STR_31(3), 
  7149 ;;		 -> STR_30(24), STR_29(58), STR_28(14), STR_27(13), 
  7150 ;;		 -> STR_26(15), STR_25(13), STR_24(13), STR_23(7), 
  7151 ;;		 -> STR_22(17), STR_21(13), STR_20(15), STR_19(14), 
  7152 ;;		 -> STR_18(16), STR_17(16), STR_16(13), STR_15(14), 
  7153 ;;		 -> STR_14(18), STR_13(10), STR_12(17), STR_11(27), 
  7154 ;;		 -> STR_10(24), STR_9(21), STR_8(24), STR_7(24), 
  7155 ;;		 -> STR_6(24), STR_5(76), STR_4(15), STR_3(38), 
  7156 ;;		 -> STR_2(19), STR_1(19), 
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  2  104[BANK0 ] int 
  7159 ;; Registers used:
  7160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7166 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7167 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7169 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7170 ;;Total ram usage:        7 bytes
  7171 ;; Hardware stack levels used: 1
  7172 ;; Hardware stack levels required when called: 7
  7173 ;; This function calls:
  7174 ;;		_vfpfcnvrt
  7175 ;; This function is called by:
  7176 ;;		_vsnprintf
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180                           	psect	text32
  7181   00744C                     __ptext32:
  7182                           	callstack 0
  7183   00744C                     _vfprintf:
  7184                           	callstack 19
  7185   00744C                     
  7186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  7187   00744C  C0EA  F0ED         	movff	vfprintf@fmt,vfprintf@cfmt
  7188   007450  C0EB  F0EE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7189   007454                     
  7190                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  7191   007454  0E00               	movlw	0
  7192   007456  0101               	movlb	1	; () banked
  7193   007458  6FA9               	movwf	(_nout+1)& (0+255),b
  7194   00745A  0E00               	movlw	0
  7195   00745C  6FA8               	movwf	_nout& (0+255),b
  7196                           
  7197                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7198   00745E  EF44  F03A         	goto	l10204
  7199   007462                     l10202:
  7200                           
  7201                           ; BSR set to: 1
  7202                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  7203   007462  C0E8  F0CA         	movff	vfprintf@fp,vfpfcnvrt@fp
  7204   007466  C0E9  F0CB         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7205   00746A  0EED               	movlw	low vfprintf@cfmt
  7206   00746C  0100               	movlb	0	; () banked
  7207   00746E  6FCC               	movwf	vfpfcnvrt@fmt& (0+255),b
  7208   007470  C0EC  F0CD         	movff	vfprintf@ap,vfpfcnvrt@ap
  7209   007474  EC09  F000         	call	_vfpfcnvrt	;wreg free
  7210   007478  0100               	movlb	0	; () banked
  7211   00747A  51CA               	movf	?_vfpfcnvrt& (0+255),w,b
  7212   00747C  0101               	movlb	1	; () banked
  7213   00747E  27A8               	addwf	_nout& (0+255),f,b
  7214   007480  0100               	movlb	0	; () banked
  7215   007482  51CB               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  7216   007484  0101               	movlb	1	; () banked
  7217   007486  23A9               	addwfc	(_nout+1)& (0+255),f,b
  7218   007488                     l10204:
  7219                           
  7220                           ; BSR set to: 1
  7221                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  7222   007488  C0ED  FFF6         	movff	vfprintf@cfmt,tblptrl
  7223   00748C  C0EE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7224   007490                     	if	0	;tblptru may be non-zero
  7225   007490                     	endif
  7226   007490                     	if	0	;tblptru may be non-zero
  7227   007490                     	endif
  7228   007490  0008               	tblrd		*
  7229   007492  50F5               	movf	tablat,w,c
  7230   007494  0900               	iorlw	0
  7231   007496  A4D8               	btfss	status,2,c
  7232   007498  EF50  F03A         	goto	u12471
  7233   00749C  EF52  F03A         	goto	u12470
  7234   0074A0                     u12471:
  7235   0074A0  EF31  F03A         	goto	l10202
  7236   0074A4                     u12470:
  7237   0074A4                     
  7238                           ; BSR set to: 1
  7239                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1833:     return 
      +                          nout;
  7240   0074A4  C1A8  F0E8         	movff	_nout,?_vfprintf
  7241   0074A8  C1A9  F0E9         	movff	_nout+1,?_vfprintf+1
  7242   0074AC                     
  7243                           ; BSR set to: 1
  7244   0074AC  0012               	return		;funcret
  7245   0074AE                     __end_of_vfprintf:
  7246                           	callstack 0
  7247                           
  7248 ;; *************** function _vfpfcnvrt *****************
  7249 ;; Defined at:
  7250 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
  7253 ;;		 -> vsnprintf@f(12), 
  7254 ;;  fmt             1   76[BANK0 ] PTR PTR unsigned char 
  7255 ;;		 -> vfprintf@cfmt(2), 
  7256 ;;  ap              1   77[BANK0 ] PTR PTR void 
  7257 ;;		 -> UART1_SendFormatted@args(2), 
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;  convarg         8   94[BANK0 ] struct .
  7260 ;;  cp              2  102[BANK0 ] PTR unsigned char 
  7261 ;;		 -> STR_38(5), STR_37(5), STR_36(27), STR_35(26), 
  7262 ;;		 -> STR_34(4), STR_33(4), STR_32(2), STR_31(3), 
  7263 ;;		 -> STR_30(24), STR_29(58), STR_28(14), STR_27(13), 
  7264 ;;		 -> STR_26(15), STR_25(13), STR_24(13), STR_23(7), 
  7265 ;;		 -> STR_22(17), STR_21(13), STR_20(15), STR_19(14), 
  7266 ;;		 -> STR_18(16), STR_17(16), STR_16(13), STR_15(14), 
  7267 ;;		 -> STR_14(18), STR_13(10), STR_12(17), STR_11(27), 
  7268 ;;		 -> STR_10(24), STR_9(21), STR_8(24), STR_7(24), 
  7269 ;;		 -> STR_6(24), STR_5(76), STR_4(15), STR_3(38), 
  7270 ;;		 -> STR_2(19), STR_1(19), 
  7271 ;;  c               1   93[BANK0 ] unsigned char 
  7272 ;;  done            1   92[BANK0 ] _Bool 
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  2   74[BANK0 ] int 
  7275 ;; Registers used:
  7276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7282 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7283 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7284 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;Total ram usage:       30 bytes
  7287 ;; Hardware stack levels used: 1
  7288 ;; Hardware stack levels required when called: 6
  7289 ;; This function calls:
  7290 ;;		_atoa
  7291 ;;		_ctoa
  7292 ;;		_dtoa
  7293 ;;		_efgtoa
  7294 ;;		_fputc
  7295 ;;		_otoa
  7296 ;;		_read_prec_or_width
  7297 ;;		_stoa
  7298 ;;		_utoa
  7299 ;;		_xtoa
  7300 ;; This function is called by:
  7301 ;;		_vfprintf
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text33
  7306   000012                     __ptext33:
  7307                           	callstack 0
  7308   000012                     _vfpfcnvrt:
  7309                           	callstack 19
  7310   000012                     
  7311                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  7312   000012  0100               	movlb	0	; () banked
  7313   000014  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7314   000016  6ED9               	movwf	fsr2l,c
  7315   000018  6ADA               	clrf	fsr2h,c
  7316   00001A  CFDE FFF6          	movff	postinc2,tblptrl
  7317   00001E  CFDD FFF7          	movff	postdec2,tblptrh
  7318   000022                     	if	0	;tblptru may be non-zero
  7319   000022                     	endif
  7320   000022                     	if	0	;tblptru may be non-zero
  7321   000022                     	endif
  7322   000022  0008               	tblrd		*
  7323   000024  50F5               	movf	tablat,w,c
  7324   000026  0A25               	xorlw	37
  7325   000028  A4D8               	btfss	status,2,c
  7326   00002A  EF19  F000         	goto	u12171
  7327   00002E  EF1B  F000         	goto	u12170
  7328   000032                     u12171:
  7329   000032  EF26  F009         	goto	l10136
  7330   000036                     u12170:
  7331   000036                     
  7332                           ; BSR set to: 0
  7333                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  7334   000036  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7335   000038  6ED9               	movwf	fsr2l,c
  7336   00003A  6ADA               	clrf	fsr2h,c
  7337   00003C  2ADE               	incf	postinc2,f,c
  7338   00003E  0E00               	movlw	0
  7339   000040  22DD               	addwfc	postdec2,f,c
  7340   000042                     
  7341                           ; BSR set to: 0
  7342                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  7343   000042  0E00               	movlw	0
  7344   000044  0101               	movlb	1	; () banked
  7345   000046  6FAB               	movwf	(_width+1)& (0+255),b
  7346   000048  0E00               	movlw	0
  7347   00004A  6FAA               	movwf	_width& (0+255),b
  7348   00004C  C1AA  F1B0         	movff	_width,_flags
  7349   000050                     
  7350                           ; BSR set to: 1
  7351                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  7352   000050  69AC               	setf	_prec& (0+255),b
  7353   000052  69AD               	setf	(_prec+1)& (0+255),b
  7354   000054                     
  7355                           ; BSR set to: 1
  7356                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  7357   000054  0E00               	movlw	0
  7358   000056  0100               	movlb	0	; () banked
  7359   000058  6FDC               	movwf	vfpfcnvrt@done& (0+255),b
  7360                           
  7361                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  7362   00005A  EF77  F000         	goto	l9876
  7363   00005E                     l9850:
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
  7367   00005E  0101               	movlb	1	; () banked
  7368   000060  81B0               	bsf	_flags& (0+255),0,b
  7369   000062                     l9852:
  7370                           
  7371                           ; BSR set to: 1
  7372                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
  7373   000062  0100               	movlb	0	; () banked
  7374   000064  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7375   000066  6ED9               	movwf	fsr2l,c
  7376   000068  6ADA               	clrf	fsr2h,c
  7377   00006A  2ADE               	incf	postinc2,f,c
  7378   00006C  0E00               	movlw	0
  7379   00006E  22DD               	addwfc	postdec2,f,c
  7380                           
  7381                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
  7382   000070  EF77  F000         	goto	l9876
  7383   000074                     l9854:
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  7387   000074  0101               	movlb	1	; () banked
  7388   000076  83B0               	bsf	_flags& (0+255),1,b
  7389   000078  EF31  F000         	goto	l9852
  7390   00007C                     l9858:
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1226:            
      +                                   flags |= (1 << 2);
  7394   00007C  0101               	movlb	1	; () banked
  7395   00007E  85B0               	bsf	_flags& (0+255),2,b
  7396   000080  EF31  F000         	goto	l9852
  7397   000084                     l9862:
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1232:            
      +                                   flags |= (1 << 3);
  7401   000084  0101               	movlb	1	; () banked
  7402   000086  87B0               	bsf	_flags& (0+255),3,b
  7403   000088  EF31  F000         	goto	l9852
  7404   00008C                     l9866:
  7405                           
  7406                           ; BSR set to: 0
  7407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1238:            
      +                                   flags |= (1 << 4);
  7408   00008C  0101               	movlb	1	; () banked
  7409   00008E  89B0               	bsf	_flags& (0+255),4,b
  7410   000090  EF31  F000         	goto	l9852
  7411   000094                     l9870:
  7412                           
  7413                           ; BSR set to: 0
  7414                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  7415   000094  0E01               	movlw	1
  7416   000096  6FDC               	movwf	vfpfcnvrt@done& (0+255),b
  7417                           
  7418                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  7419   000098  EF77  F000         	goto	l9876
  7420   00009C                     l9874:
  7421                           
  7422                           ; BSR set to: 0
  7423   00009C  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7424   00009E  6ED9               	movwf	fsr2l,c
  7425   0000A0  6ADA               	clrf	fsr2h,c
  7426   0000A2  CFDE FFF6          	movff	postinc2,tblptrl
  7427   0000A6  CFDD FFF7          	movff	postdec2,tblptrh
  7428   0000AA                     	if	0	;tblptru may be non-zero
  7429   0000AA                     	endif
  7430   0000AA                     	if	0	;tblptru may be non-zero
  7431   0000AA                     	endif
  7432   0000AA  0008               	tblrd		*
  7433   0000AC  50F5               	movf	tablat,w,c
  7434   0000AE  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  7435   0000B0  6BCF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  7436                           
  7437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7438                           ; Switch size 1, requested type "simple"
  7439                           ; Number of cases is 1, Range of values is 0 to 0
  7440                           ; switch strategies available:
  7441                           ; Name         Instructions Cycles
  7442                           ; simple_byte            4     3 (average)
  7443                           ;	Chosen strategy is simple_byte
  7444   0000B2  51CF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7445   0000B4  0A00               	xorlw	0	; case 0
  7446   0000B6  B4D8               	btfsc	status,2,c
  7447   0000B8  EF60  F000         	goto	l11050
  7448   0000BC  EF4A  F000         	goto	l9870
  7449   0000C0                     l11050:
  7450                           
  7451                           ; BSR set to: 0
  7452                           ; Switch size 1, requested type "simple"
  7453                           ; Number of cases is 5, Range of values is 32 to 48
  7454                           ; switch strategies available:
  7455                           ; Name         Instructions Cycles
  7456                           ; simple_byte           16     9 (average)
  7457                           ;	Chosen strategy is simple_byte
  7458   0000C0  51CE               	movf	??_vfpfcnvrt& (0+255),w,b
  7459   0000C2  0A20               	xorlw	32	; case 32
  7460   0000C4  B4D8               	btfsc	status,2,c
  7461   0000C6  EF42  F000         	goto	l9862
  7462   0000CA  0A03               	xorlw	3	; case 35
  7463   0000CC  B4D8               	btfsc	status,2,c
  7464   0000CE  EF46  F000         	goto	l9866
  7465   0000D2  0A08               	xorlw	8	; case 43
  7466   0000D4  B4D8               	btfsc	status,2,c
  7467   0000D6  EF3E  F000         	goto	l9858
  7468   0000DA  0A06               	xorlw	6	; case 45
  7469   0000DC  B4D8               	btfsc	status,2,c
  7470   0000DE  EF2F  F000         	goto	l9850
  7471   0000E2  0A1D               	xorlw	29	; case 48
  7472   0000E4  B4D8               	btfsc	status,2,c
  7473   0000E6  EF3A  F000         	goto	l9854
  7474   0000EA  EF4A  F000         	goto	l9870
  7475   0000EE                     l9876:
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  7479   0000EE  51DC               	movf	vfpfcnvrt@done& (0+255),w,b
  7480   0000F0  B4D8               	btfsc	status,2,c
  7481   0000F2  EF7D  F000         	goto	u12181
  7482   0000F6  EF7F  F000         	goto	u12180
  7483   0000FA                     u12181:
  7484   0000FA  EF4E  F000         	goto	l9874
  7485   0000FE                     u12180:
  7486   0000FE                     
  7487                           ; BSR set to: 0
  7488                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1248:         if 
      +                          (flags & (1 << 0)) {
  7489   0000FE  0101               	movlb	1	; () banked
  7490   000100  A1B0               	btfss	_flags& (0+255),0,b
  7491   000102  EF85  F000         	goto	u12191
  7492   000106  EF87  F000         	goto	u12190
  7493   00010A                     u12191:
  7494   00010A  EF88  F000         	goto	l9880
  7495   00010E                     u12190:
  7496   00010E                     
  7497                           ; BSR set to: 1
  7498                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1249:            
      +                           flags &= ~(1 << 1);
  7499   00010E  93B0               	bcf	_flags& (0+255),1,b
  7500   000110                     l9880:
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  7504   000110  C0CC  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  7505   000114  C0CD  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  7506   000118  ECB0  F036         	call	_read_prec_or_width	;wreg free
  7507   00011C  C007  F1AA         	movff	?_read_prec_or_width,_width
  7508   000120  C008  F1AB         	movff	?_read_prec_or_width+1,_width+1
  7509   000124                     
  7510                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  7511   000124  0101               	movlb	1	; () banked
  7512   000126  BFAB               	btfsc	(_width+1)& (0+255),7,b
  7513   000128  EF9A  F000         	goto	u12200
  7514   00012C  EF98  F000         	goto	u12201
  7515   000130                     u12201:
  7516   000130  EF9F  F000         	goto	l9886
  7517   000134                     u12200:
  7518   000134                     
  7519                           ; BSR set to: 1
  7520                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  7521   000134  81B0               	bsf	_flags& (0+255),0,b
  7522                           
  7523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  7524   000136  6DAA               	negf	_width& (0+255),b
  7525   000138  1FAB               	comf	(_width+1)& (0+255),f,b
  7526   00013A  B0D8               	btfsc	status,0,c
  7527   00013C  2BAB               	incf	(_width+1)& (0+255),f,b
  7528   00013E                     l9886:
  7529                           
  7530                           ; BSR set to: 1
  7531                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  7532   00013E  0100               	movlb	0	; () banked
  7533   000140  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7534   000142  6ED9               	movwf	fsr2l,c
  7535   000144  6ADA               	clrf	fsr2h,c
  7536   000146  CFDE FFF6          	movff	postinc2,tblptrl
  7537   00014A  CFDD FFF7          	movff	postdec2,tblptrh
  7538   00014E                     	if	0	;tblptru may be non-zero
  7539   00014E                     	endif
  7540   00014E                     	if	0	;tblptru may be non-zero
  7541   00014E                     	endif
  7542   00014E  0008               	tblrd		*
  7543   000150  50F5               	movf	tablat,w,c
  7544   000152  0A2E               	xorlw	46
  7545   000154  A4D8               	btfss	status,2,c
  7546   000156  EFAF  F000         	goto	u12211
  7547   00015A  EFB1  F000         	goto	u12210
  7548   00015E                     u12211:
  7549   00015E  EFC1  F000         	goto	l9892
  7550   000162                     u12210:
  7551   000162                     
  7552                           ; BSR set to: 0
  7553                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  7554   000162  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7555   000164  6ED9               	movwf	fsr2l,c
  7556   000166  6ADA               	clrf	fsr2h,c
  7557   000168  2ADE               	incf	postinc2,f,c
  7558   00016A  0E00               	movlw	0
  7559   00016C  22DD               	addwfc	postdec2,f,c
  7560   00016E                     
  7561                           ; BSR set to: 0
  7562                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  7563   00016E  C0CC  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  7564   000172  C0CD  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  7565   000176  ECB0  F036         	call	_read_prec_or_width	;wreg free
  7566   00017A  C007  F1AC         	movff	?_read_prec_or_width,_prec
  7567   00017E  C008  F1AD         	movff	?_read_prec_or_width+1,_prec+1
  7568   000182                     l9892:
  7569                           
  7570                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  7571   000182  0100               	movlb	0	; () banked
  7572   000184  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7573   000186  6ED9               	movwf	fsr2l,c
  7574   000188  6ADA               	clrf	fsr2h,c
  7575   00018A  CFDE FFF6          	movff	postinc2,tblptrl
  7576   00018E  CFDD FFF7          	movff	postdec2,tblptrh
  7577   000192                     	if	0	;tblptru may be non-zero
  7578   000192                     	endif
  7579   000192                     	if	0	;tblptru may be non-zero
  7580   000192                     	endif
  7581   000192  0008               	tblrd		*
  7582   000194  50F5               	movf	tablat,w,c
  7583   000196  0A63               	xorlw	99
  7584   000198  A4D8               	btfss	status,2,c
  7585   00019A  EFD1  F000         	goto	u12221
  7586   00019E  EFD3  F000         	goto	u12220
  7587   0001A2                     u12221:
  7588   0001A2  EFF8  F000         	goto	l9900
  7589   0001A6                     u12220:
  7590   0001A6                     
  7591                           ; BSR set to: 0
  7592                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  7593   0001A6  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7594   0001A8  6ED9               	movwf	fsr2l,c
  7595   0001AA  6ADA               	clrf	fsr2h,c
  7596   0001AC  2ADE               	incf	postinc2,f,c
  7597   0001AE  0E00               	movlw	0
  7598   0001B0  22DD               	addwfc	postdec2,f,c
  7599                           
  7600                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7601   0001B2  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  7602   0001B4  6ED9               	movwf	fsr2l,c
  7603   0001B6  6ADA               	clrf	fsr2h,c
  7604   0001B8  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  7605   0001BC  0E02               	movlw	2
  7606   0001BE  26DE               	addwf	postinc2,f,c
  7607   0001C0  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  7608   0001C4  0E00               	movlw	0
  7609   0001C6  22DD               	addwfc	postdec2,f,c
  7610   0001C8  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7611   0001CC  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7612   0001D0  50DF               	movf	indf2,w,c
  7613   0001D2  6FDD               	movwf	vfpfcnvrt@c& (0+255),b
  7614   0001D4                     
  7615                           ; BSR set to: 0
  7616                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1284:            
      +                           return (int) ctoa(fp, c);
  7617   0001D4  C0CA  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  7618   0001D8  C0CB  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  7619   0001DC  C0DD  F00C         	movff	vfpfcnvrt@c,ctoa@c
  7620   0001E0  EC15  F035         	call	_ctoa	;wreg free
  7621   0001E4  C00A  F0CA         	movff	?_ctoa,?_vfpfcnvrt
  7622   0001E8  C00B  F0CB         	movff	?_ctoa+1,?_vfpfcnvrt+1
  7623   0001EC  EF40  F009         	goto	l1521
  7624   0001F0                     l9900:
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  7628   0001F0  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  7629   0001F2  6ED9               	movwf	fsr2l,c
  7630   0001F4  6ADA               	clrf	fsr2h,c
  7631   0001F6  CFDE F0E6          	movff	postinc2,vfpfcnvrt@cp
  7632   0001FA  CFDD F0E7          	movff	postdec2,vfpfcnvrt@cp+1
  7633   0001FE                     
  7634                           ; BSR set to: 0
  7635                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  7636   0001FE  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7637   000202  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7638   000206                     	if	0	;tblptru may be non-zero
  7639   000206                     	endif
  7640   000206                     	if	0	;tblptru may be non-zero
  7641   000206                     	endif
  7642   000206  0008               	tblrd		*
  7643   000208  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  7644                           
  7645                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  7646   00020C  EF3A  F001         	goto	l9928
  7647   000210                     l9904:
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1298:     cp++;
  7651   000210  4BE6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  7652   000212  2BE7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  7653   000214                     
  7654                           ; BSR set to: 0
  7655                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1300:     if (*cp
      +                           == 'h') {
  7656   000214  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7657   000218  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7658   00021C                     	if	0	;tblptru may be non-zero
  7659   00021C                     	endif
  7660   00021C                     	if	0	;tblptru may be non-zero
  7661   00021C                     	endif
  7662   00021C  0008               	tblrd		*
  7663   00021E  50F5               	movf	tablat,w,c
  7664   000220  0A68               	xorlw	104
  7665   000222  A4D8               	btfss	status,2,c
  7666   000224  EF16  F001         	goto	u12231
  7667   000228  EF18  F001         	goto	u12230
  7668   00022C                     u12231:
  7669   00022C  EF77  F001         	goto	l9930
  7670   000230                     u12230:
  7671   000230                     
  7672                           ; BSR set to: 0
  7673                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1301:      c = 'H
      +                          ';
  7674   000230  0E48               	movlw	72
  7675   000232  6FDD               	movwf	vfpfcnvrt@c& (0+255),b
  7676   000234                     l9910:
  7677                           
  7678                           ; BSR set to: 0
  7679                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1302:      cp++;
  7680   000234  4BE6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  7681   000236  2BE7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  7682   000238  EF77  F001         	goto	l9930
  7683   00023C                     l9912:
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  7687   00023C  4BE6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  7688   00023E  2BE7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  7689   000240                     
  7690                           ; BSR set to: 0
  7691                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1311:     if (*cp
      +                           == 'l') {
  7692   000240  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7693   000244  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7694   000248                     	if	0	;tblptru may be non-zero
  7695   000248                     	endif
  7696   000248                     	if	0	;tblptru may be non-zero
  7697   000248                     	endif
  7698   000248  0008               	tblrd		*
  7699   00024A  50F5               	movf	tablat,w,c
  7700   00024C  0A6C               	xorlw	108
  7701   00024E  A4D8               	btfss	status,2,c
  7702   000250  EF2C  F001         	goto	u12241
  7703   000254  EF2E  F001         	goto	u12240
  7704   000258                     u12241:
  7705   000258  EF77  F001         	goto	l9930
  7706   00025C                     u12240:
  7707   00025C                     
  7708                           ; BSR set to: 0
  7709                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1312:      c = 'L
      +                          ';
  7710   00025C  0E4C               	movlw	76
  7711   00025E  6FDD               	movwf	vfpfcnvrt@c& (0+255),b
  7712   000260  EF1A  F001         	goto	l9910
  7713   000264                     l1534:
  7714   000264                     l9922:
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  7718   000264  0E69               	movlw	105
  7719   000266  6FDD               	movwf	vfpfcnvrt@c& (0+255),b
  7720                           
  7721                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1351:     break;
  7722   000268  EF77  F001         	goto	l9930
  7723   00026C                     l9924:
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  7727   00026C  0E00               	movlw	0
  7728   00026E  6FDD               	movwf	vfpfcnvrt@c& (0+255),b
  7729                           
  7730                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1354:     break;
  7731   000270  EF77  F001         	goto	l9930
  7732   000274                     l9928:
  7733                           
  7734                           ; BSR set to: 0
  7735   000274  51DD               	movf	vfpfcnvrt@c& (0+255),w,b
  7736   000276  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  7737   000278  6BCF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  7738                           
  7739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7740                           ; Switch size 1, requested type "simple"
  7741                           ; Number of cases is 1, Range of values is 0 to 0
  7742                           ; switch strategies available:
  7743                           ; Name         Instructions Cycles
  7744                           ; simple_byte            4     3 (average)
  7745                           ;	Chosen strategy is simple_byte
  7746   00027A  51CF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7747   00027C  0A00               	xorlw	0	; case 0
  7748   00027E  B4D8               	btfsc	status,2,c
  7749   000280  EF44  F001         	goto	l11052
  7750   000284  EF36  F001         	goto	l9924
  7751   000288                     l11052:
  7752                           
  7753                           ; BSR set to: 0
  7754                           ; Switch size 1, requested type "simple"
  7755                           ; Number of cases is 12, Range of values is 88 to 122
  7756                           ; switch strategies available:
  7757                           ; Name         Instructions Cycles
  7758                           ; simple_byte           37    19 (average)
  7759                           ;	Chosen strategy is simple_byte
  7760   000288  51CE               	movf	??_vfpfcnvrt& (0+255),w,b
  7761   00028A  0A58               	xorlw	88	; case 88
  7762   00028C  B4D8               	btfsc	status,2,c
  7763   00028E  EF32  F001         	goto	l9922
  7764   000292  0A3C               	xorlw	60	; case 100
  7765   000294  B4D8               	btfsc	status,2,c
  7766   000296  EF32  F001         	goto	l9922
  7767   00029A  0A0C               	xorlw	12	; case 104
  7768   00029C  B4D8               	btfsc	status,2,c
  7769   00029E  EF08  F001         	goto	l9904
  7770   0002A2  0A01               	xorlw	1	; case 105
  7771   0002A4  B4D8               	btfsc	status,2,c
  7772   0002A6  EF32  F001         	goto	l9922
  7773   0002AA  0A03               	xorlw	3	; case 106
  7774   0002AC  B4D8               	btfsc	status,2,c
  7775   0002AE  EF1A  F001         	goto	l9910
  7776   0002B2  0A06               	xorlw	6	; case 108
  7777   0002B4  B4D8               	btfsc	status,2,c
  7778   0002B6  EF1E  F001         	goto	l9912
  7779   0002BA  0A02               	xorlw	2	; case 110
  7780   0002BC  B4D8               	btfsc	status,2,c
  7781   0002BE  EF32  F001         	goto	l9922
  7782   0002C2  0A01               	xorlw	1	; case 111
  7783   0002C4  B4D8               	btfsc	status,2,c
  7784   0002C6  EF32  F001         	goto	l1534
  7785   0002CA  0A1B               	xorlw	27	; case 116
  7786   0002CC  B4D8               	btfsc	status,2,c
  7787   0002CE  EF1A  F001         	goto	l9910
  7788   0002D2  0A01               	xorlw	1	; case 117
  7789   0002D4  B4D8               	btfsc	status,2,c
  7790   0002D6  EF32  F001         	goto	l9922
  7791   0002DA  0A0D               	xorlw	13	; case 120
  7792   0002DC  B4D8               	btfsc	status,2,c
  7793   0002DE  EF32  F001         	goto	l9922
  7794   0002E2  0A02               	xorlw	2	; case 122
  7795   0002E4  B4D8               	btfsc	status,2,c
  7796   0002E6  EF1A  F001         	goto	l9910
  7797   0002EA  EF36  F001         	goto	l9924
  7798   0002EE                     l9930:
  7799                           
  7800                           ; BSR set to: 0
  7801                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  7802   0002EE  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7803   0002F2  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7804   0002F6                     	if	0	;tblptru may be non-zero
  7805   0002F6                     	endif
  7806   0002F6                     	if	0	;tblptru may be non-zero
  7807   0002F6                     	endif
  7808   0002F6  0008               	tblrd		*
  7809   0002F8  50F5               	movf	tablat,w,c
  7810   0002FA  0A64               	xorlw	100
  7811   0002FC  B4D8               	btfsc	status,2,c
  7812   0002FE  EF83  F001         	goto	u12251
  7813   000302  EF85  F001         	goto	u12250
  7814   000306                     u12251:
  7815   000306  EFC7  F002         	goto	l9952
  7816   00030A                     u12250:
  7817   00030A                     
  7818                           ; BSR set to: 0
  7819   00030A  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7820   00030E  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7821   000312                     	if	0	;tblptru may be non-zero
  7822   000312                     	endif
  7823   000312                     	if	0	;tblptru may be non-zero
  7824   000312                     	endif
  7825   000312  0008               	tblrd		*
  7826   000314  50F5               	movf	tablat,w,c
  7827   000316  0A69               	xorlw	105
  7828   000318  A4D8               	btfss	status,2,c
  7829   00031A  EF91  F001         	goto	u12261
  7830   00031E  EF93  F001         	goto	u12260
  7831   000322                     u12261:
  7832   000322  EF1D  F003         	goto	l9960
  7833   000326                     u12260:
  7834   000326  EFC7  F002         	goto	l9952
  7835   00032A                     l9934:
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  7839   00032A  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  7840   00032C  6ED9               	movwf	fsr2l,c
  7841   00032E  6ADA               	clrf	fsr2h,c
  7842   000330  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  7843   000334  0E02               	movlw	2
  7844   000336  26DE               	addwf	postinc2,f,c
  7845   000338  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  7846   00033C  0E00               	movlw	0
  7847   00033E  22DD               	addwfc	postdec2,f,c
  7848   000340  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7849   000344  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7850   000348  CFDE F0DE          	movff	postinc2,vfpfcnvrt@convarg
  7851   00034C  CFDD F0DF          	movff	postdec2,vfpfcnvrt@convarg+1
  7852   000350  0E00               	movlw	0
  7853   000352  BFDF               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  7854   000354  0EFF               	movlw	-1
  7855   000356  6FE0               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  7856   000358  6FE1               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  7857   00035A  6FE2               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  7858   00035C  6FE3               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  7859   00035E  6FE4               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  7860   000360  6FE5               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  7861                           
  7862                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1366:      break;
  7863   000362  EFF4  F002         	goto	l9954
  7864   000366                     l9936:
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1369:      convar
      +                          g.sint = (vfpf_sint_t)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
  7868   000366  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  7869   000368  6ED9               	movwf	fsr2l,c
  7870   00036A  6ADA               	clrf	fsr2h,c
  7871   00036C  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  7872   000370  0E02               	movlw	2
  7873   000372  26DE               	addwf	postinc2,f,c
  7874   000374  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  7875   000378  0E00               	movlw	0
  7876   00037A  22DD               	addwfc	postdec2,f,c
  7877   00037C  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7878   000380  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7879   000384  CFDE F0DE          	movff	postinc2,vfpfcnvrt@convarg
  7880   000388  CFDD F0DF          	movff	postdec2,vfpfcnvrt@convarg+1
  7881   00038C  0E00               	movlw	0
  7882   00038E  BFDF               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  7883   000390  0EFF               	movlw	-1
  7884   000392  6FE0               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  7885   000394  6FE1               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  7886   000396  6FE2               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  7887   000398  6FE3               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  7888   00039A  6FE4               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  7889   00039C  6FE5               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  7890                           
  7891                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1370:      break;
  7892   00039E  EFF4  F002         	goto	l9954
  7893   0003A2                     l9938:
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1374:      convar
      +                          g.sint = (vfpf_sint_t)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7897   0003A2  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  7898   0003A4  6ED9               	movwf	fsr2l,c
  7899   0003A6  6ADA               	clrf	fsr2h,c
  7900   0003A8  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  7901   0003AC  0E02               	movlw	2
  7902   0003AE  26DE               	addwf	postinc2,f,c
  7903   0003B0  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  7904   0003B4  0E00               	movlw	0
  7905   0003B6  22DD               	addwfc	postdec2,f,c
  7906   0003B8  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7907   0003BC  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7908   0003C0  50DF               	movf	indf2,w,c
  7909   0003C2  6FDE               	movwf	vfpfcnvrt@convarg& (0+255),b
  7910   0003C4  0E00               	movlw	0
  7911   0003C6  BFDE               	btfsc	vfpfcnvrt@convarg& (0+255),7,b
  7912   0003C8  0EFF               	movlw	-1
  7913   0003CA  6FDF               	movwf	(vfpfcnvrt@convarg+1)& (0+255),b
  7914   0003CC  6FE0               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  7915   0003CE  6FE1               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  7916   0003D0  6FE2               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  7917   0003D2  6FE3               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  7918   0003D4  6FE4               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  7919   0003D6  6FE5               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  7920                           
  7921                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1375:      break;
  7922   0003D8  EFF4  F002         	goto	l9954
  7923   0003DC                     l9940:
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  7927   0003DC  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  7928   0003DE  6ED9               	movwf	fsr2l,c
  7929   0003E0  6ADA               	clrf	fsr2h,c
  7930   0003E2  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  7931   0003E6  0E04               	movlw	4
  7932   0003E8  26DE               	addwf	postinc2,f,c
  7933   0003EA  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  7934   0003EE  0E00               	movlw	0
  7935   0003F0  22DD               	addwfc	postdec2,f,c
  7936   0003F2  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7937   0003F6  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7938   0003FA  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  7939   0003FE  CFDE F0D1          	movff	postinc2,??_vfpfcnvrt+3
  7940   000402  CFDE F0D2          	movff	postinc2,??_vfpfcnvrt+4
  7941   000406  CFDE F0D3          	movff	postinc2,??_vfpfcnvrt+5
  7942   00040A  C0D0  F0D4         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  7943   00040E  C0D1  F0D5         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  7944   000412  C0D2  F0D6         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  7945   000416  C0D3  F0D7         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  7946   00041A  6BD8               	clrf	(??_vfpfcnvrt+10)& (0+255),b
  7947   00041C  BFD7               	btfsc	(??_vfpfcnvrt+9)& (0+255),7,b
  7948   00041E  69D8               	setf	(??_vfpfcnvrt+10)& (0+255),b
  7949   000420  C0D8  F0D9         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  7950   000424  C0D8  F0DA         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  7951   000428  C0D8  F0DB         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  7952   00042C  C0D4  F0DE         	movff	??_vfpfcnvrt+6,vfpfcnvrt@convarg
  7953   000430  C0D5  F0DF         	movff	??_vfpfcnvrt+7,vfpfcnvrt@convarg+1
  7954   000434  C0D6  F0E0         	movff	??_vfpfcnvrt+8,vfpfcnvrt@convarg+2
  7955   000438  C0D7  F0E1         	movff	??_vfpfcnvrt+9,vfpfcnvrt@convarg+3
  7956   00043C  C0D8  F0E2         	movff	??_vfpfcnvrt+10,vfpfcnvrt@convarg+4
  7957   000440  C0D9  F0E3         	movff	??_vfpfcnvrt+11,vfpfcnvrt@convarg+5
  7958   000444  C0DA  F0E4         	movff	??_vfpfcnvrt+12,vfpfcnvrt@convarg+6
  7959   000448  C0DB  F0E5         	movff	??_vfpfcnvrt+13,vfpfcnvrt@convarg+7
  7960                           
  7961                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1380:      break;
  7962   00044C  EFF4  F002         	goto	l9954
  7963   000450                     l9942:
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1384:      convar
      +                          g.sint = (vfpf_sint_t)(*(long long *)__va_arg(*(long long **)ap, (long long)0));
  7967   000450  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  7968   000452  6ED9               	movwf	fsr2l,c
  7969   000454  6ADA               	clrf	fsr2h,c
  7970   000456  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  7971   00045A  0E08               	movlw	8
  7972   00045C  26DE               	addwf	postinc2,f,c
  7973   00045E  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  7974   000462  0E00               	movlw	0
  7975   000464  22DD               	addwfc	postdec2,f,c
  7976   000466  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7977   00046A  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7978   00046E  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  7979   000472  CFDE F0D1          	movff	postinc2,??_vfpfcnvrt+3
  7980   000476  CFDE F0D2          	movff	postinc2,??_vfpfcnvrt+4
  7981   00047A  CFDE F0D3          	movff	postinc2,??_vfpfcnvrt+5
  7982   00047E  CFDE F0D4          	movff	postinc2,??_vfpfcnvrt+6
  7983   000482  CFDE F0D5          	movff	postinc2,??_vfpfcnvrt+7
  7984   000486  CFDE F0D6          	movff	postinc2,??_vfpfcnvrt+8
  7985   00048A  CFDE F0D7          	movff	postinc2,??_vfpfcnvrt+9
  7986   00048E  C0D0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  7987   000492  C0D1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  7988   000496  C0D2  F0E0         	movff	??_vfpfcnvrt+4,vfpfcnvrt@convarg+2
  7989   00049A  C0D3  F0E1         	movff	??_vfpfcnvrt+5,vfpfcnvrt@convarg+3
  7990   00049E  C0D4  F0E2         	movff	??_vfpfcnvrt+6,vfpfcnvrt@convarg+4
  7991   0004A2  C0D5  F0E3         	movff	??_vfpfcnvrt+7,vfpfcnvrt@convarg+5
  7992   0004A6  C0D6  F0E4         	movff	??_vfpfcnvrt+8,vfpfcnvrt@convarg+6
  7993   0004AA  C0D7  F0E5         	movff	??_vfpfcnvrt+9,vfpfcnvrt@convarg+7
  7994                           
  7995                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1385:      break;
  7996   0004AE  EFF4  F002         	goto	l9954
  7997   0004B2                     l9944:
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1389:      convar
      +                          g.sint = (vfpf_sint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  8001   0004B2  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8002   0004B4  6ED9               	movwf	fsr2l,c
  8003   0004B6  6ADA               	clrf	fsr2h,c
  8004   0004B8  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8005   0004BC  0E02               	movlw	2
  8006   0004BE  26DE               	addwf	postinc2,f,c
  8007   0004C0  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8008   0004C4  0E00               	movlw	0
  8009   0004C6  22DD               	addwfc	postdec2,f,c
  8010   0004C8  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8011   0004CC  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8012   0004D0  CFDE F0DE          	movff	postinc2,vfpfcnvrt@convarg
  8013   0004D4  CFDD F0DF          	movff	postdec2,vfpfcnvrt@convarg+1
  8014   0004D8  0E00               	movlw	0
  8015   0004DA  BFDF               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  8016   0004DC  0EFF               	movlw	-1
  8017   0004DE  6FE0               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  8018   0004E0  6FE1               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  8019   0004E2  6FE2               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  8020   0004E4  6FE3               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  8021   0004E6  6FE4               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  8022   0004E8  6FE5               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  8023                           
  8024                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1390:      break;
  8025   0004EA  EFF4  F002         	goto	l9954
  8026   0004EE                     l9946:
  8027                           
  8028                           ; BSR set to: 0
  8029                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1394:      convar
      +                          g.sint = (vfpf_sint_t)(*(intmax_t *)__va_arg(*(intmax_t **)ap, (intmax_t)0));
  8030   0004EE  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8031   0004F0  6ED9               	movwf	fsr2l,c
  8032   0004F2  6ADA               	clrf	fsr2h,c
  8033   0004F4  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8034   0004F8  0E08               	movlw	8
  8035   0004FA  26DE               	addwf	postinc2,f,c
  8036   0004FC  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8037   000500  0E00               	movlw	0
  8038   000502  22DD               	addwfc	postdec2,f,c
  8039   000504  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8040   000508  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8041   00050C  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  8042   000510  CFDE F0D1          	movff	postinc2,??_vfpfcnvrt+3
  8043   000514  CFDE F0D2          	movff	postinc2,??_vfpfcnvrt+4
  8044   000518  CFDE F0D3          	movff	postinc2,??_vfpfcnvrt+5
  8045   00051C  CFDE F0D4          	movff	postinc2,??_vfpfcnvrt+6
  8046   000520  CFDE F0D5          	movff	postinc2,??_vfpfcnvrt+7
  8047   000524  CFDE F0D6          	movff	postinc2,??_vfpfcnvrt+8
  8048   000528  CFDE F0D7          	movff	postinc2,??_vfpfcnvrt+9
  8049   00052C  C0D0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  8050   000530  C0D1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  8051   000534  C0D2  F0E0         	movff	??_vfpfcnvrt+4,vfpfcnvrt@convarg+2
  8052   000538  C0D3  F0E1         	movff	??_vfpfcnvrt+5,vfpfcnvrt@convarg+3
  8053   00053C  C0D4  F0E2         	movff	??_vfpfcnvrt+6,vfpfcnvrt@convarg+4
  8054   000540  C0D5  F0E3         	movff	??_vfpfcnvrt+7,vfpfcnvrt@convarg+5
  8055   000544  C0D6  F0E4         	movff	??_vfpfcnvrt+8,vfpfcnvrt@convarg+6
  8056   000548  C0D7  F0E5         	movff	??_vfpfcnvrt+9,vfpfcnvrt@convarg+7
  8057                           
  8058                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1395:      break;
  8059   00054C  EFF4  F002         	goto	l9954
  8060   000550                     l9948:
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1399:      convar
      +                          g.sint = (vfpf_sint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  8064   000550  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8065   000552  6ED9               	movwf	fsr2l,c
  8066   000554  6ADA               	clrf	fsr2h,c
  8067   000556  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8068   00055A  0E02               	movlw	2
  8069   00055C  26DE               	addwf	postinc2,f,c
  8070   00055E  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8071   000562  0E00               	movlw	0
  8072   000564  22DD               	addwfc	postdec2,f,c
  8073   000566  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8074   00056A  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8075   00056E  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  8076   000572  CFDD F0D1          	movff	postdec2,??_vfpfcnvrt+3
  8077   000576  C0D0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  8078   00057A  C0D1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  8079   00057E  6BE0               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  8080   000580  6BE1               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  8081   000582  6BE2               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  8082   000584  6BE3               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  8083   000586  6BE4               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  8084   000588  6BE5               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  8085                           
  8086                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1400:      break;
  8087   00058A  EFF4  F002         	goto	l9954
  8088   00058E                     l9952:
  8089                           
  8090                           ; BSR set to: 0
  8091   00058E  51DD               	movf	vfpfcnvrt@c& (0+255),w,b
  8092   000590  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  8093   000592  6BCF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8094                           
  8095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8096                           ; Switch size 1, requested type "simple"
  8097                           ; Number of cases is 1, Range of values is 0 to 0
  8098                           ; switch strategies available:
  8099                           ; Name         Instructions Cycles
  8100                           ; simple_byte            4     3 (average)
  8101                           ;	Chosen strategy is simple_byte
  8102   000594  51CF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8103   000596  0A00               	xorlw	0	; case 0
  8104   000598  B4D8               	btfsc	status,2,c
  8105   00059A  EFD1  F002         	goto	l11054
  8106   00059E  EFF4  F002         	goto	l9954
  8107   0005A2                     l11054:
  8108                           
  8109                           ; BSR set to: 0
  8110                           ; Switch size 1, requested type "simple"
  8111                           ; Number of cases is 8, Range of values is 72 to 122
  8112                           ; switch strategies available:
  8113                           ; Name         Instructions Cycles
  8114                           ; simple_byte           25    13 (average)
  8115                           ;	Chosen strategy is simple_byte
  8116   0005A2  51CE               	movf	??_vfpfcnvrt& (0+255),w,b
  8117   0005A4  0A48               	xorlw	72	; case 72
  8118   0005A6  B4D8               	btfsc	status,2,c
  8119   0005A8  EFD1  F001         	goto	l9938
  8120   0005AC  0A04               	xorlw	4	; case 76
  8121   0005AE  B4D8               	btfsc	status,2,c
  8122   0005B0  EF28  F002         	goto	l9942
  8123   0005B4  0A24               	xorlw	36	; case 104
  8124   0005B6  B4D8               	btfsc	status,2,c
  8125   0005B8  EFB3  F001         	goto	l9936
  8126   0005BC  0A01               	xorlw	1	; case 105
  8127   0005BE  B4D8               	btfsc	status,2,c
  8128   0005C0  EF95  F001         	goto	l9934
  8129   0005C4  0A03               	xorlw	3	; case 106
  8130   0005C6  B4D8               	btfsc	status,2,c
  8131   0005C8  EF77  F002         	goto	l9946
  8132   0005CC  0A06               	xorlw	6	; case 108
  8133   0005CE  B4D8               	btfsc	status,2,c
  8134   0005D0  EFEE  F001         	goto	l9940
  8135   0005D4  0A18               	xorlw	24	; case 116
  8136   0005D6  B4D8               	btfsc	status,2,c
  8137   0005D8  EF59  F002         	goto	l9944
  8138   0005DC  0A0E               	xorlw	14	; case 122
  8139   0005DE  B4D8               	btfsc	status,2,c
  8140   0005E0  EFA8  F002         	goto	l9948
  8141   0005E4  EFF4  F002         	goto	l9954
  8142   0005E8                     l9954:
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  8146   0005E8  0E01               	movlw	1
  8147   0005EA  25E6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8148   0005EC  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  8149   0005EE  0E00               	movlw	0
  8150   0005F0  21E7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8151   0005F2  6FCF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8152   0005F4  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8153   0005F6  6ED9               	movwf	fsr2l,c
  8154   0005F8  6ADA               	clrf	fsr2h,c
  8155   0005FA  C0CE  FFDE         	movff	??_vfpfcnvrt,postinc2
  8156   0005FE  C0CF  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8157   000602                     
  8158                           ; BSR set to: 0
  8159                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          int) dtoa(fp, convarg.sint);
  8160   000602  C0CA  F01B         	movff	vfpfcnvrt@fp,dtoa@fp
  8161   000606  C0CB  F01C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  8162   00060A  C0DE  F01D         	movff	vfpfcnvrt@convarg,dtoa@d
  8163   00060E  C0DF  F01E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  8164   000612  C0E0  F01F         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  8165   000616  C0E1  F020         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  8166   00061A  C0E2  F021         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  8167   00061E  C0E3  F022         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  8168   000622  C0E4  F023         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  8169   000626  C0E5  F024         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  8170   00062A  EC82  F022         	call	_dtoa	;wreg free
  8171   00062E  C01B  F0CA         	movff	?_dtoa,?_vfpfcnvrt
  8172   000632  C01C  F0CB         	movff	?_dtoa+1,?_vfpfcnvrt+1
  8173   000636  EF40  F009         	goto	l1521
  8174   00063A                     l9960:
  8175                           
  8176                           ; BSR set to: 0
  8177   00063A  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8178   00063E  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8179   000642                     	if	0	;tblptru may be non-zero
  8180   000642                     	endif
  8181   000642                     	if	0	;tblptru may be non-zero
  8182   000642                     	endif
  8183   000642  0008               	tblrd		*
  8184   000644  50F5               	movf	tablat,w,c
  8185   000646  0A78               	xorlw	120
  8186   000648  B4D8               	btfsc	status,2,c
  8187   00064A  EF29  F003         	goto	u12271
  8188   00064E  EF2B  F003         	goto	u12270
  8189   000652                     u12271:
  8190   000652  EF75  F004         	goto	l9986
  8191   000656                     u12270:
  8192   000656                     
  8193                           ; BSR set to: 0
  8194   000656  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8195   00065A  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8196   00065E                     	if	0	;tblptru may be non-zero
  8197   00065E                     	endif
  8198   00065E                     	if	0	;tblptru may be non-zero
  8199   00065E                     	endif
  8200   00065E  0008               	tblrd		*
  8201   000660  50F5               	movf	tablat,w,c
  8202   000662  0A58               	xorlw	88
  8203   000664  B4D8               	btfsc	status,2,c
  8204   000666  EF37  F003         	goto	u12281
  8205   00066A  EF39  F003         	goto	u12280
  8206   00066E                     u12281:
  8207   00066E  EF75  F004         	goto	l9986
  8208   000672                     u12280:
  8209   000672                     
  8210                           ; BSR set to: 0
  8211   000672  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8212   000676  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8213   00067A                     	if	0	;tblptru may be non-zero
  8214   00067A                     	endif
  8215   00067A                     	if	0	;tblptru may be non-zero
  8216   00067A                     	endif
  8217   00067A  0008               	tblrd		*
  8218   00067C  50F5               	movf	tablat,w,c
  8219   00067E  0A6F               	xorlw	111
  8220   000680  B4D8               	btfsc	status,2,c
  8221   000682  EF45  F003         	goto	u12291
  8222   000686  EF47  F003         	goto	u12290
  8223   00068A                     u12291:
  8224   00068A  EF75  F004         	goto	l9986
  8225   00068E                     u12290:
  8226   00068E                     
  8227                           ; BSR set to: 0
  8228   00068E  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8229   000692  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8230   000696                     	if	0	;tblptru may be non-zero
  8231   000696                     	endif
  8232   000696                     	if	0	;tblptru may be non-zero
  8233   000696                     	endif
  8234   000696  0008               	tblrd		*
  8235   000698  50F5               	movf	tablat,w,c
  8236   00069A  0A75               	xorlw	117
  8237   00069C  A4D8               	btfss	status,2,c
  8238   00069E  EF53  F003         	goto	u12301
  8239   0006A2  EF55  F003         	goto	u12300
  8240   0006A6                     u12301:
  8241   0006A6  EF2E  F005         	goto	l10006
  8242   0006AA                     u12300:
  8243   0006AA  EF75  F004         	goto	l9986
  8244   0006AE                     l9968:
  8245                           
  8246                           ; BSR set to: 0
  8247                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1456:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  8248   0006AE  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8249   0006B0  6ED9               	movwf	fsr2l,c
  8250   0006B2  6ADA               	clrf	fsr2h,c
  8251   0006B4  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8252   0006B8  0E02               	movlw	2
  8253   0006BA  26DE               	addwf	postinc2,f,c
  8254   0006BC  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8255   0006C0  0E00               	movlw	0
  8256   0006C2  22DD               	addwfc	postdec2,f,c
  8257   0006C4  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8258   0006C8  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8259   0006CC  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  8260   0006D0  CFDD F0D1          	movff	postdec2,??_vfpfcnvrt+3
  8261   0006D4  C0D0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  8262   0006D8  C0D1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  8263   0006DC  6BE0               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  8264   0006DE  6BE1               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  8265   0006E0  6BE2               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  8266   0006E2  6BE3               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  8267   0006E4  6BE4               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  8268   0006E6  6BE5               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  8269                           
  8270                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1457:      break;
  8271   0006E8  EFA2  F004         	goto	l9988
  8272   0006EC                     l9970:
  8273                           
  8274                           ; BSR set to: 0
  8275                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1460:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned short)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (
      +                          unsigned int)0));
  8276   0006EC  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8277   0006EE  6ED9               	movwf	fsr2l,c
  8278   0006F0  6ADA               	clrf	fsr2h,c
  8279   0006F2  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8280   0006F6  0E02               	movlw	2
  8281   0006F8  26DE               	addwf	postinc2,f,c
  8282   0006FA  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8283   0006FE  0E00               	movlw	0
  8284   000700  22DD               	addwfc	postdec2,f,c
  8285   000702  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8286   000706  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8287   00070A  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  8288   00070E  CFDD F0D1          	movff	postdec2,??_vfpfcnvrt+3
  8289   000712  C0D0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  8290   000716  C0D1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  8291   00071A  6BE0               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  8292   00071C  6BE1               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  8293   00071E  6BE2               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  8294   000720  6BE3               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  8295   000722  6BE4               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  8296   000724  6BE5               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  8297                           
  8298                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1461:      break;
  8299   000726  EFA2  F004         	goto	l9988
  8300   00072A                     l9972:
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1465:      convar
      +                          g.uint = (vfpf_uint_t)(unsigned char)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (u
      +                          nsigned int)0));
  8304   00072A  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8305   00072C  6ED9               	movwf	fsr2l,c
  8306   00072E  6ADA               	clrf	fsr2h,c
  8307   000730  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8308   000734  0E02               	movlw	2
  8309   000736  26DE               	addwf	postinc2,f,c
  8310   000738  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8311   00073C  0E00               	movlw	0
  8312   00073E  22DD               	addwfc	postdec2,f,c
  8313   000740  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8314   000744  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8315   000748  50DF               	movf	indf2,w,c
  8316   00074A  6FD0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8317   00074C  51D0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  8318   00074E  6FDE               	movwf	vfpfcnvrt@convarg& (0+255),b
  8319   000750  6BDF               	clrf	(vfpfcnvrt@convarg+1)& (0+255),b
  8320   000752  6BE0               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  8321   000754  6BE1               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  8322   000756  6BE2               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  8323   000758  6BE3               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  8324   00075A  6BE4               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  8325   00075C  6BE5               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  8326                           
  8327                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1466:      break;
  8328   00075E  EFA2  F004         	goto	l9988
  8329   000762                     l9974:
  8330                           
  8331                           ; BSR set to: 0
  8332                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1470:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)
      +                          0));
  8333   000762  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8334   000764  6ED9               	movwf	fsr2l,c
  8335   000766  6ADA               	clrf	fsr2h,c
  8336   000768  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8337   00076C  0E04               	movlw	4
  8338   00076E  26DE               	addwf	postinc2,f,c
  8339   000770  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8340   000774  0E00               	movlw	0
  8341   000776  22DD               	addwfc	postdec2,f,c
  8342   000778  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8343   00077C  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8344   000780  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  8345   000784  CFDE F0D1          	movff	postinc2,??_vfpfcnvrt+3
  8346   000788  CFDE F0D2          	movff	postinc2,??_vfpfcnvrt+4
  8347   00078C  CFDE F0D3          	movff	postinc2,??_vfpfcnvrt+5
  8348   000790  51D0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  8349   000792  6FDE               	movwf	vfpfcnvrt@convarg& (0+255),b
  8350   000794  51D1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  8351   000796  6FDF               	movwf	(vfpfcnvrt@convarg+1)& (0+255),b
  8352   000798  51D2               	movf	(??_vfpfcnvrt+4)& (0+255),w,b
  8353   00079A  6FE0               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  8354   00079C  51D3               	movf	(??_vfpfcnvrt+5)& (0+255),w,b
  8355   00079E  6FE1               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  8356   0007A0  6BE2               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  8357   0007A2  6BE3               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  8358   0007A4  6BE4               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  8359   0007A6  6BE5               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  8360                           
  8361                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1471:      break;
  8362   0007A8  EFA2  F004         	goto	l9988
  8363   0007AC                     l9976:
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1475:      convar
      +                          g.uint = (vfpf_uint_t)(*(unsigned long long *)__va_arg(*(unsigned long long **)ap, (unsi
      +                          gned long long)0));
  8367   0007AC  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8368   0007AE  6ED9               	movwf	fsr2l,c
  8369   0007B0  6ADA               	clrf	fsr2h,c
  8370   0007B2  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8371   0007B6  0E08               	movlw	8
  8372   0007B8  26DE               	addwf	postinc2,f,c
  8373   0007BA  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8374   0007BE  0E00               	movlw	0
  8375   0007C0  22DD               	addwfc	postdec2,f,c
  8376   0007C2  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8377   0007C6  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8378   0007CA  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  8379   0007CE  CFDE F0D1          	movff	postinc2,??_vfpfcnvrt+3
  8380   0007D2  CFDE F0D2          	movff	postinc2,??_vfpfcnvrt+4
  8381   0007D6  CFDE F0D3          	movff	postinc2,??_vfpfcnvrt+5
  8382   0007DA  CFDE F0D4          	movff	postinc2,??_vfpfcnvrt+6
  8383   0007DE  CFDE F0D5          	movff	postinc2,??_vfpfcnvrt+7
  8384   0007E2  CFDE F0D6          	movff	postinc2,??_vfpfcnvrt+8
  8385   0007E6  CFDE F0D7          	movff	postinc2,??_vfpfcnvrt+9
  8386   0007EA  C0D0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  8387   0007EE  C0D1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  8388   0007F2  C0D2  F0E0         	movff	??_vfpfcnvrt+4,vfpfcnvrt@convarg+2
  8389   0007F6  C0D3  F0E1         	movff	??_vfpfcnvrt+5,vfpfcnvrt@convarg+3
  8390   0007FA  C0D4  F0E2         	movff	??_vfpfcnvrt+6,vfpfcnvrt@convarg+4
  8391   0007FE  C0D5  F0E3         	movff	??_vfpfcnvrt+7,vfpfcnvrt@convarg+5
  8392   000802  C0D6  F0E4         	movff	??_vfpfcnvrt+8,vfpfcnvrt@convarg+6
  8393   000806  C0D7  F0E5         	movff	??_vfpfcnvrt+9,vfpfcnvrt@convarg+7
  8394                           
  8395                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1476:      break;
  8396   00080A  EFA2  F004         	goto	l9988
  8397   00080E                     l9978:
  8398                           
  8399                           ; BSR set to: 0
  8400                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1480:      convar
      +                          g.uint = (vfpf_uint_t)(*(ptrdiff_t *)__va_arg(*(ptrdiff_t **)ap, (ptrdiff_t)0));
  8401   00080E  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8402   000810  6ED9               	movwf	fsr2l,c
  8403   000812  6ADA               	clrf	fsr2h,c
  8404   000814  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8405   000818  0E02               	movlw	2
  8406   00081A  26DE               	addwf	postinc2,f,c
  8407   00081C  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8408   000820  0E00               	movlw	0
  8409   000822  22DD               	addwfc	postdec2,f,c
  8410   000824  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8411   000828  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8412   00082C  CFDE F0DE          	movff	postinc2,vfpfcnvrt@convarg
  8413   000830  CFDD F0DF          	movff	postdec2,vfpfcnvrt@convarg+1
  8414   000834  0E00               	movlw	0
  8415   000836  BFDF               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  8416   000838  0EFF               	movlw	-1
  8417   00083A  6FE0               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  8418   00083C  6FE1               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  8419   00083E  6FE2               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  8420   000840  6FE3               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  8421   000842  6FE4               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  8422   000844  6FE5               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  8423                           
  8424                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1481:      break;
  8425   000846  EFA2  F004         	goto	l9988
  8426   00084A                     l9980:
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.uint = (vfpf_uint_t)(*(uintmax_t *)__va_arg(*(uintmax_t **)ap, (uintmax_t)0));
  8430   00084A  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8431   00084C  6ED9               	movwf	fsr2l,c
  8432   00084E  6ADA               	clrf	fsr2h,c
  8433   000850  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8434   000854  0E08               	movlw	8
  8435   000856  26DE               	addwf	postinc2,f,c
  8436   000858  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8437   00085C  0E00               	movlw	0
  8438   00085E  22DD               	addwfc	postdec2,f,c
  8439   000860  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8440   000864  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8441   000868  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  8442   00086C  CFDE F0D1          	movff	postinc2,??_vfpfcnvrt+3
  8443   000870  CFDE F0D2          	movff	postinc2,??_vfpfcnvrt+4
  8444   000874  CFDE F0D3          	movff	postinc2,??_vfpfcnvrt+5
  8445   000878  CFDE F0D4          	movff	postinc2,??_vfpfcnvrt+6
  8446   00087C  CFDE F0D5          	movff	postinc2,??_vfpfcnvrt+7
  8447   000880  CFDE F0D6          	movff	postinc2,??_vfpfcnvrt+8
  8448   000884  CFDE F0D7          	movff	postinc2,??_vfpfcnvrt+9
  8449   000888  C0D0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  8450   00088C  C0D1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  8451   000890  C0D2  F0E0         	movff	??_vfpfcnvrt+4,vfpfcnvrt@convarg+2
  8452   000894  C0D3  F0E1         	movff	??_vfpfcnvrt+5,vfpfcnvrt@convarg+3
  8453   000898  C0D4  F0E2         	movff	??_vfpfcnvrt+6,vfpfcnvrt@convarg+4
  8454   00089C  C0D5  F0E3         	movff	??_vfpfcnvrt+7,vfpfcnvrt@convarg+5
  8455   0008A0  C0D6  F0E4         	movff	??_vfpfcnvrt+8,vfpfcnvrt@convarg+6
  8456   0008A4  C0D7  F0E5         	movff	??_vfpfcnvrt+9,vfpfcnvrt@convarg+7
  8457                           
  8458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1486:      break;
  8459   0008A8  EFA2  F004         	goto	l9988
  8460   0008AC                     l9982:
  8461                           
  8462                           ; BSR set to: 0
  8463                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1490:      convar
      +                          g.uint = (vfpf_uint_t)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
  8464   0008AC  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8465   0008AE  6ED9               	movwf	fsr2l,c
  8466   0008B0  6ADA               	clrf	fsr2h,c
  8467   0008B2  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8468   0008B6  0E02               	movlw	2
  8469   0008B8  26DE               	addwf	postinc2,f,c
  8470   0008BA  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8471   0008BE  0E00               	movlw	0
  8472   0008C0  22DD               	addwfc	postdec2,f,c
  8473   0008C2  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8474   0008C6  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8475   0008CA  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  8476   0008CE  CFDD F0D1          	movff	postdec2,??_vfpfcnvrt+3
  8477   0008D2  C0D0  F0DE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  8478   0008D6  C0D1  F0DF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  8479   0008DA  6BE0               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  8480   0008DC  6BE1               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  8481   0008DE  6BE2               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  8482   0008E0  6BE3               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  8483   0008E2  6BE4               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  8484   0008E4  6BE5               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  8485                           
  8486                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1491:      break;
  8487   0008E6  EFA2  F004         	goto	l9988
  8488   0008EA                     l9986:
  8489                           
  8490                           ; BSR set to: 0
  8491   0008EA  51DD               	movf	vfpfcnvrt@c& (0+255),w,b
  8492   0008EC  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  8493   0008EE  6BCF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8494                           
  8495                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8496                           ; Switch size 1, requested type "simple"
  8497                           ; Number of cases is 1, Range of values is 0 to 0
  8498                           ; switch strategies available:
  8499                           ; Name         Instructions Cycles
  8500                           ; simple_byte            4     3 (average)
  8501                           ;	Chosen strategy is simple_byte
  8502   0008F0  51CF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8503   0008F2  0A00               	xorlw	0	; case 0
  8504   0008F4  B4D8               	btfsc	status,2,c
  8505   0008F6  EF7F  F004         	goto	l11056
  8506   0008FA  EFA2  F004         	goto	l9988
  8507   0008FE                     l11056:
  8508                           
  8509                           ; BSR set to: 0
  8510                           ; Switch size 1, requested type "simple"
  8511                           ; Number of cases is 8, Range of values is 72 to 122
  8512                           ; switch strategies available:
  8513                           ; Name         Instructions Cycles
  8514                           ; simple_byte           25    13 (average)
  8515                           ;	Chosen strategy is simple_byte
  8516   0008FE  51CE               	movf	??_vfpfcnvrt& (0+255),w,b
  8517   000900  0A48               	xorlw	72	; case 72
  8518   000902  B4D8               	btfsc	status,2,c
  8519   000904  EF95  F003         	goto	l9972
  8520   000908  0A04               	xorlw	4	; case 76
  8521   00090A  B4D8               	btfsc	status,2,c
  8522   00090C  EFD6  F003         	goto	l9976
  8523   000910  0A24               	xorlw	36	; case 104
  8524   000912  B4D8               	btfsc	status,2,c
  8525   000914  EF76  F003         	goto	l9970
  8526   000918  0A01               	xorlw	1	; case 105
  8527   00091A  B4D8               	btfsc	status,2,c
  8528   00091C  EF57  F003         	goto	l9968
  8529   000920  0A03               	xorlw	3	; case 106
  8530   000922  B4D8               	btfsc	status,2,c
  8531   000924  EF25  F004         	goto	l9980
  8532   000928  0A06               	xorlw	6	; case 108
  8533   00092A  B4D8               	btfsc	status,2,c
  8534   00092C  EFB1  F003         	goto	l9974
  8535   000930  0A18               	xorlw	24	; case 116
  8536   000932  B4D8               	btfsc	status,2,c
  8537   000934  EF07  F004         	goto	l9978
  8538   000938  0A0E               	xorlw	14	; case 122
  8539   00093A  B4D8               	btfsc	status,2,c
  8540   00093C  EF56  F004         	goto	l9982
  8541   000940  EFA2  F004         	goto	l9988
  8542   000944                     l9988:
  8543                           
  8544                           ; BSR set to: 0
  8545                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  8546   000944  0E01               	movlw	1
  8547   000946  25E6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8548   000948  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  8549   00094A  0E00               	movlw	0
  8550   00094C  21E7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8551   00094E  6FCF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8552   000950  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8553   000952  6ED9               	movwf	fsr2l,c
  8554   000954  6ADA               	clrf	fsr2h,c
  8555   000956  C0CE  FFDE         	movff	??_vfpfcnvrt,postinc2
  8556   00095A  C0CF  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8557                           
  8558                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  8559   00095E  EF0C  F005         	goto	l10004
  8560   000962                     l9990:
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (int) otoa(fp, convarg.uint);
  8564   000962  C0CA  F01A         	movff	vfpfcnvrt@fp,otoa@fp
  8565   000966  C0CB  F01B         	movff	vfpfcnvrt@fp+1,otoa@fp+1
  8566   00096A  C0DE  F01C         	movff	vfpfcnvrt@convarg,otoa@d
  8567   00096E  C0DF  F01D         	movff	vfpfcnvrt@convarg+1,otoa@d+1
  8568   000972  C0E0  F01E         	movff	vfpfcnvrt@convarg+2,otoa@d+2
  8569   000976  C0E1  F01F         	movff	vfpfcnvrt@convarg+3,otoa@d+3
  8570   00097A  C0E2  F020         	movff	vfpfcnvrt@convarg+4,otoa@d+4
  8571   00097E  C0E3  F021         	movff	vfpfcnvrt@convarg+5,otoa@d+5
  8572   000982  C0E4  F022         	movff	vfpfcnvrt@convarg+6,otoa@d+6
  8573   000986  C0E5  F023         	movff	vfpfcnvrt@convarg+7,otoa@d+7
  8574   00098A  EC1E  F02A         	call	_otoa	;wreg free
  8575   00098E  C01A  F0CA         	movff	?_otoa,?_vfpfcnvrt
  8576   000992  C01B  F0CB         	movff	?_otoa+1,?_vfpfcnvrt+1
  8577   000996  EF40  F009         	goto	l1521
  8578   00099A                     l9994:
  8579                           
  8580                           ; BSR set to: 0
  8581                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (int) utoa(fp, convarg.uint);
  8582   00099A  C0CA  F01A         	movff	vfpfcnvrt@fp,utoa@fp
  8583   00099E  C0CB  F01B         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  8584   0009A2  C0DE  F01C         	movff	vfpfcnvrt@convarg,utoa@d
  8585   0009A6  C0DF  F01D         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  8586   0009AA  C0E0  F01E         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  8587   0009AE  C0E1  F01F         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  8588   0009B2  C0E2  F020         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  8589   0009B6  C0E3  F021         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  8590   0009BA  C0E4  F022         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  8591   0009BE  C0E5  F023         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  8592   0009C2  EC4A  F028         	call	_utoa	;wreg free
  8593   0009C6  C01A  F0CA         	movff	?_utoa,?_vfpfcnvrt
  8594   0009CA  C01B  F0CB         	movff	?_utoa+1,?_vfpfcnvrt+1
  8595   0009CE  EF40  F009         	goto	l1521
  8596   0009D2                     l9998:
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (int) xtoa(fp,convarg.uint,*cp);
  8600   0009D2  C0CA  F01A         	movff	vfpfcnvrt@fp,xtoa@fp
  8601   0009D6  C0CB  F01B         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  8602   0009DA  C0DE  F01C         	movff	vfpfcnvrt@convarg,xtoa@d
  8603   0009DE  C0DF  F01D         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  8604   0009E2  C0E0  F01E         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  8605   0009E6  C0E1  F01F         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  8606   0009EA  C0E2  F020         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  8607   0009EE  C0E3  F021         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  8608   0009F2  C0E4  F022         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  8609   0009F6  C0E5  F023         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  8610   0009FA  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8611   0009FE  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8612   000A02                     	if	0	;tblptru may be non-zero
  8613   000A02                     	endif
  8614   000A02                     	if	0	;tblptru may be non-zero
  8615   000A02                     	endif
  8616   000A02  0008               	tblrd		*
  8617   000A04  CFF5 F024          	movff	tablat,xtoa@x
  8618   000A08  ECC9  F023         	call	_xtoa	;wreg free
  8619   000A0C  C01A  F0CA         	movff	?_xtoa,?_vfpfcnvrt
  8620   000A10  C01B  F0CB         	movff	?_xtoa+1,?_vfpfcnvrt+1
  8621   000A14  EF40  F009         	goto	l1521
  8622   000A18                     l10004:
  8623                           
  8624                           ; BSR set to: 0
  8625   000A18  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8626   000A1C  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8627   000A20                     	if	0	;tblptru may be non-zero
  8628   000A20                     	endif
  8629   000A20                     	if	0	;tblptru may be non-zero
  8630   000A20                     	endif
  8631   000A20  0008               	tblrd		*
  8632   000A22  50F5               	movf	tablat,w,c
  8633   000A24  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  8634   000A26  6BCF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8635                           
  8636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8637                           ; Switch size 1, requested type "simple"
  8638                           ; Number of cases is 1, Range of values is 0 to 0
  8639                           ; switch strategies available:
  8640                           ; Name         Instructions Cycles
  8641                           ; simple_byte            4     3 (average)
  8642                           ;	Chosen strategy is simple_byte
  8643   000A28  51CF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8644   000A2A  0A00               	xorlw	0	; case 0
  8645   000A2C  B4D8               	btfsc	status,2,c
  8646   000A2E  EF1B  F005         	goto	l11058
  8647   000A32  EF2E  F005         	goto	l10006
  8648   000A36                     l11058:
  8649                           
  8650                           ; BSR set to: 0
  8651                           ; Switch size 1, requested type "simple"
  8652                           ; Number of cases is 4, Range of values is 88 to 120
  8653                           ; switch strategies available:
  8654                           ; Name         Instructions Cycles
  8655                           ; simple_byte           13     7 (average)
  8656                           ;	Chosen strategy is simple_byte
  8657   000A36  51CE               	movf	??_vfpfcnvrt& (0+255),w,b
  8658   000A38  0A58               	xorlw	88	; case 88
  8659   000A3A  B4D8               	btfsc	status,2,c
  8660   000A3C  EFE9  F004         	goto	l9998
  8661   000A40  0A37               	xorlw	55	; case 111
  8662   000A42  B4D8               	btfsc	status,2,c
  8663   000A44  EFB1  F004         	goto	l9990
  8664   000A48  0A1A               	xorlw	26	; case 117
  8665   000A4A  B4D8               	btfsc	status,2,c
  8666   000A4C  EFCD  F004         	goto	l9994
  8667   000A50  0A0D               	xorlw	13	; case 120
  8668   000A52  B4D8               	btfsc	status,2,c
  8669   000A54  EFE9  F004         	goto	l9998
  8670   000A58  EF2E  F005         	goto	l10006
  8671   000A5C                     l10006:
  8672                           
  8673                           ; BSR set to: 0
  8674                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
  8675   000A5C  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  8676   000A60  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  8677   000A64                     	if	0	;tblptru may be non-zero
  8678   000A64                     	endif
  8679   000A64                     	if	0	;tblptru may be non-zero
  8680   000A64                     	endif
  8681   000A64  0008               	tblrd		*
  8682   000A66  50F5               	movf	tablat,w,c
  8683   000A68  0A6E               	xorlw	110
  8684   000A6A  A4D8               	btfss	status,2,c
  8685   000A6C  EF3A  F005         	goto	u12311
  8686   000A70  EF3C  F005         	goto	u12310
  8687   000A74                     u12311:
  8688   000A74  EFA3  F006         	goto	l10036
  8689   000A78                     u12310:
  8690   000A78  EF63  F006         	goto	l10028
  8691   000A7C                     l10010:
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1599:      *(*(in
      +                          t* *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
  8695   000A7C  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8696   000A7E  6ED9               	movwf	fsr2l,c
  8697   000A80  6ADA               	clrf	fsr2h,c
  8698   000A82  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8699   000A86  0E02               	movlw	2
  8700   000A88  26DE               	addwf	postinc2,f,c
  8701   000A8A  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8702   000A8E  0E00               	movlw	0
  8703   000A90  22DD               	addwfc	postdec2,f,c
  8704   000A92  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8705   000A96  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8706   000A9A  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  8707   000A9E  CFDD F0D1          	movff	postdec2,??_vfpfcnvrt+3
  8708   000AA2  C0D0  FFD9         	movff	??_vfpfcnvrt+2,fsr2l
  8709   000AA6  C0D1  FFDA         	movff	??_vfpfcnvrt+3,fsr2h
  8710   000AAA  C1A8  FFDE         	movff	_nout,postinc2
  8711   000AAE  C1A9  FFDD         	movff	_nout+1,postdec2
  8712                           
  8713                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1600:      break;
  8714   000AB2  EF90  F006         	goto	l10030
  8715   000AB6                     l10012:
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1603:      *(*(sh
      +                          ort* *)__va_arg(*(short* **)ap, (short*)0)) = (short) nout;
  8719   000AB6  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8720   000AB8  6ED9               	movwf	fsr2l,c
  8721   000ABA  6ADA               	clrf	fsr2h,c
  8722   000ABC  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8723   000AC0  0E02               	movlw	2
  8724   000AC2  26DE               	addwf	postinc2,f,c
  8725   000AC4  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8726   000AC8  0E00               	movlw	0
  8727   000ACA  22DD               	addwfc	postdec2,f,c
  8728   000ACC  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8729   000AD0  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8730   000AD4  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  8731   000AD8  CFDD F0D1          	movff	postdec2,??_vfpfcnvrt+3
  8732   000ADC  C0D0  FFD9         	movff	??_vfpfcnvrt+2,fsr2l
  8733   000AE0  C0D1  FFDA         	movff	??_vfpfcnvrt+3,fsr2h
  8734   000AE4  C1A8  FFDE         	movff	_nout,postinc2
  8735   000AE8  C1A9  FFDD         	movff	_nout+1,postdec2
  8736                           
  8737                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1604:      break;
  8738   000AEC  EF90  F006         	goto	l10030
  8739   000AF0                     l10014:
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1608:      *(*(si
      +                          gned char* *)__va_arg(*(signed char* **)ap, (signed char*)0)) = (signed char) nout;
  8743   000AF0  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8744   000AF2  6ED9               	movwf	fsr2l,c
  8745   000AF4  6ADA               	clrf	fsr2h,c
  8746   000AF6  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8747   000AFA  0E02               	movlw	2
  8748   000AFC  26DE               	addwf	postinc2,f,c
  8749   000AFE  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8750   000B02  0E00               	movlw	0
  8751   000B04  22DD               	addwfc	postdec2,f,c
  8752   000B06  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8753   000B0A  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8754   000B0E  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  8755   000B12  CFDD F0D1          	movff	postdec2,??_vfpfcnvrt+3
  8756   000B16  C0D0  FFD9         	movff	??_vfpfcnvrt+2,fsr2l
  8757   000B1A  C0D1  FFDA         	movff	??_vfpfcnvrt+3,fsr2h
  8758   000B1E  C1A8  FFDF         	movff	_nout,indf2
  8759                           
  8760                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1609:      break;
  8761   000B22  EF90  F006         	goto	l10030
  8762   000B26                     l10016:
  8763                           
  8764                           ; BSR set to: 0
  8765                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1613:      *(*(lo
      +                          ng* *)__va_arg(*(long* **)ap, (long*)0)) = (long) nout;
  8766   000B26  C1A8  F0CE         	movff	_nout,??_vfpfcnvrt
  8767   000B2A  C1A9  F0CF         	movff	_nout+1,??_vfpfcnvrt+1
  8768   000B2E  0E00               	movlw	0
  8769   000B30  BFCF               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,b
  8770   000B32  0EFF               	movlw	255
  8771   000B34  6FD0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8772   000B36  6FD1               	movwf	(??_vfpfcnvrt+3)& (0+255),b
  8773   000B38  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8774   000B3A  6ED9               	movwf	fsr2l,c
  8775   000B3C  6ADA               	clrf	fsr2h,c
  8776   000B3E  CFDF F0D2          	movff	indf2,??_vfpfcnvrt+4
  8777   000B42  0E02               	movlw	2
  8778   000B44  26DE               	addwf	postinc2,f,c
  8779   000B46  CFDF F0D3          	movff	indf2,??_vfpfcnvrt+5
  8780   000B4A  0E00               	movlw	0
  8781   000B4C  22DD               	addwfc	postdec2,f,c
  8782   000B4E  C0D2  FFD9         	movff	??_vfpfcnvrt+4,fsr2l
  8783   000B52  C0D3  FFDA         	movff	??_vfpfcnvrt+5,fsr2h
  8784   000B56  CFDE F0D4          	movff	postinc2,??_vfpfcnvrt+6
  8785   000B5A  CFDD F0D5          	movff	postdec2,??_vfpfcnvrt+7
  8786   000B5E  C0D4  FFD9         	movff	??_vfpfcnvrt+6,fsr2l
  8787   000B62  C0D5  FFDA         	movff	??_vfpfcnvrt+7,fsr2h
  8788   000B66  C0CE  FFDE         	movff	??_vfpfcnvrt,postinc2
  8789   000B6A  C0CF  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  8790   000B6E  C0D0  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  8791   000B72  C0D1  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  8792                           
  8793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1614:      break;
  8794   000B76  EF90  F006         	goto	l10030
  8795   000B7A                     l10018:
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1618:      *(*(lo
      +                          ng long* *)__va_arg(*(long long* **)ap, (long long*)0)) = (long long) nout;
  8799   000B7A  C1A8  F0CE         	movff	_nout,??_vfpfcnvrt
  8800   000B7E  C1A9  F0CF         	movff	_nout+1,??_vfpfcnvrt+1
  8801   000B82  0E00               	movlw	0
  8802   000B84  BFCF               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,b
  8803   000B86  0EFF               	movlw	255
  8804   000B88  6FD0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8805   000B8A  6FD1               	movwf	(??_vfpfcnvrt+3)& (0+255),b
  8806   000B8C  6FD2               	movwf	(??_vfpfcnvrt+4)& (0+255),b
  8807   000B8E  6FD3               	movwf	(??_vfpfcnvrt+5)& (0+255),b
  8808   000B90  6FD4               	movwf	(??_vfpfcnvrt+6)& (0+255),b
  8809   000B92  6FD5               	movwf	(??_vfpfcnvrt+7)& (0+255),b
  8810   000B94  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8811   000B96  6ED9               	movwf	fsr2l,c
  8812   000B98  6ADA               	clrf	fsr2h,c
  8813   000B9A  CFDF F0D6          	movff	indf2,??_vfpfcnvrt+8
  8814   000B9E  0E02               	movlw	2
  8815   000BA0  26DE               	addwf	postinc2,f,c
  8816   000BA2  CFDF F0D7          	movff	indf2,??_vfpfcnvrt+9
  8817   000BA6  0E00               	movlw	0
  8818   000BA8  22DD               	addwfc	postdec2,f,c
  8819   000BAA  C0D6  FFD9         	movff	??_vfpfcnvrt+8,fsr2l
  8820   000BAE  C0D7  FFDA         	movff	??_vfpfcnvrt+9,fsr2h
  8821   000BB2  CFDE F0D8          	movff	postinc2,??_vfpfcnvrt+10
  8822   000BB6  CFDD F0D9          	movff	postdec2,??_vfpfcnvrt+11
  8823   000BBA  C0D8  FFD9         	movff	??_vfpfcnvrt+10,fsr2l
  8824   000BBE  C0D9  FFDA         	movff	??_vfpfcnvrt+11,fsr2h
  8825   000BC2  C0CE  FFDE         	movff	??_vfpfcnvrt,postinc2
  8826   000BC6  C0CF  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  8827   000BCA  C0D0  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  8828   000BCE  C0D1  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  8829   000BD2  C0D2  FFDE         	movff	??_vfpfcnvrt+4,postinc2
  8830   000BD6  C0D3  FFDE         	movff	??_vfpfcnvrt+5,postinc2
  8831   000BDA  C0D4  FFDE         	movff	??_vfpfcnvrt+6,postinc2
  8832   000BDE  C0D5  FFDE         	movff	??_vfpfcnvrt+7,postinc2
  8833                           
  8834                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1619:      break;
  8835   000BE2  EF90  F006         	goto	l10030
  8836   000BE6                     l10020:
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1623:      *(*(pt
      +                          rdiff_t* *)__va_arg(*(ptrdiff_t* **)ap, (ptrdiff_t*)0)) = (ptrdiff_t) nout;
  8840   000BE6  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8841   000BE8  6ED9               	movwf	fsr2l,c
  8842   000BEA  6ADA               	clrf	fsr2h,c
  8843   000BEC  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8844   000BF0  0E02               	movlw	2
  8845   000BF2  26DE               	addwf	postinc2,f,c
  8846   000BF4  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8847   000BF8  0E00               	movlw	0
  8848   000BFA  22DD               	addwfc	postdec2,f,c
  8849   000BFC  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8850   000C00  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8851   000C04  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  8852   000C08  CFDD F0D1          	movff	postdec2,??_vfpfcnvrt+3
  8853   000C0C  C0D0  FFD9         	movff	??_vfpfcnvrt+2,fsr2l
  8854   000C10  C0D1  FFDA         	movff	??_vfpfcnvrt+3,fsr2h
  8855   000C14  C1A8  FFDE         	movff	_nout,postinc2
  8856   000C18  C1A9  FFDD         	movff	_nout+1,postdec2
  8857                           
  8858                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1624:      break;
  8859   000C1C  EF90  F006         	goto	l10030
  8860   000C20                     l10022:
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1628:      *(*(in
      +                          tmax_t* *)__va_arg(*(intmax_t* **)ap, (intmax_t*)0)) = (intmax_t) nout;
  8864   000C20  C1A8  F0CE         	movff	_nout,??_vfpfcnvrt
  8865   000C24  C1A9  F0CF         	movff	_nout+1,??_vfpfcnvrt+1
  8866   000C28  0E00               	movlw	0
  8867   000C2A  BFCF               	btfsc	(??_vfpfcnvrt+1)& (0+255),7,b
  8868   000C2C  0EFF               	movlw	255
  8869   000C2E  6FD0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  8870   000C30  6FD1               	movwf	(??_vfpfcnvrt+3)& (0+255),b
  8871   000C32  6FD2               	movwf	(??_vfpfcnvrt+4)& (0+255),b
  8872   000C34  6FD3               	movwf	(??_vfpfcnvrt+5)& (0+255),b
  8873   000C36  6FD4               	movwf	(??_vfpfcnvrt+6)& (0+255),b
  8874   000C38  6FD5               	movwf	(??_vfpfcnvrt+7)& (0+255),b
  8875   000C3A  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8876   000C3C  6ED9               	movwf	fsr2l,c
  8877   000C3E  6ADA               	clrf	fsr2h,c
  8878   000C40  CFDF F0D6          	movff	indf2,??_vfpfcnvrt+8
  8879   000C44  0E02               	movlw	2
  8880   000C46  26DE               	addwf	postinc2,f,c
  8881   000C48  CFDF F0D7          	movff	indf2,??_vfpfcnvrt+9
  8882   000C4C  0E00               	movlw	0
  8883   000C4E  22DD               	addwfc	postdec2,f,c
  8884   000C50  C0D6  FFD9         	movff	??_vfpfcnvrt+8,fsr2l
  8885   000C54  C0D7  FFDA         	movff	??_vfpfcnvrt+9,fsr2h
  8886   000C58  CFDE F0D8          	movff	postinc2,??_vfpfcnvrt+10
  8887   000C5C  CFDD F0D9          	movff	postdec2,??_vfpfcnvrt+11
  8888   000C60  C0D8  FFD9         	movff	??_vfpfcnvrt+10,fsr2l
  8889   000C64  C0D9  FFDA         	movff	??_vfpfcnvrt+11,fsr2h
  8890   000C68  C0CE  FFDE         	movff	??_vfpfcnvrt,postinc2
  8891   000C6C  C0CF  FFDE         	movff	??_vfpfcnvrt+1,postinc2
  8892   000C70  C0D0  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  8893   000C74  C0D1  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  8894   000C78  C0D2  FFDE         	movff	??_vfpfcnvrt+4,postinc2
  8895   000C7C  C0D3  FFDE         	movff	??_vfpfcnvrt+5,postinc2
  8896   000C80  C0D4  FFDE         	movff	??_vfpfcnvrt+6,postinc2
  8897   000C84  C0D5  FFDE         	movff	??_vfpfcnvrt+7,postinc2
  8898                           
  8899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1629:      break;
  8900   000C88  EF90  F006         	goto	l10030
  8901   000C8C                     l10024:
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1633:      *(*(si
      +                          ze_t* *)__va_arg(*(size_t* **)ap, (size_t*)0)) = (size_t) nout;
  8905   000C8C  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  8906   000C8E  6ED9               	movwf	fsr2l,c
  8907   000C90  6ADA               	clrf	fsr2h,c
  8908   000C92  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  8909   000C96  0E02               	movlw	2
  8910   000C98  26DE               	addwf	postinc2,f,c
  8911   000C9A  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  8912   000C9E  0E00               	movlw	0
  8913   000CA0  22DD               	addwfc	postdec2,f,c
  8914   000CA2  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  8915   000CA6  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  8916   000CAA  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  8917   000CAE  CFDD F0D1          	movff	postdec2,??_vfpfcnvrt+3
  8918   000CB2  C0D0  FFD9         	movff	??_vfpfcnvrt+2,fsr2l
  8919   000CB6  C0D1  FFDA         	movff	??_vfpfcnvrt+3,fsr2h
  8920   000CBA  C1A8  FFDE         	movff	_nout,postinc2
  8921   000CBE  C1A9  FFDD         	movff	_nout+1,postdec2
  8922                           
  8923                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1634:      break;
  8924   000CC2  EF90  F006         	goto	l10030
  8925   000CC6                     l10028:
  8926                           
  8927                           ; BSR set to: 0
  8928   000CC6  51DD               	movf	vfpfcnvrt@c& (0+255),w,b
  8929   000CC8  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  8930   000CCA  6BCF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  8931                           
  8932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8933                           ; Switch size 1, requested type "simple"
  8934                           ; Number of cases is 1, Range of values is 0 to 0
  8935                           ; switch strategies available:
  8936                           ; Name         Instructions Cycles
  8937                           ; simple_byte            4     3 (average)
  8938                           ;	Chosen strategy is simple_byte
  8939   000CCC  51CF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  8940   000CCE  0A00               	xorlw	0	; case 0
  8941   000CD0  B4D8               	btfsc	status,2,c
  8942   000CD2  EF6D  F006         	goto	l11060
  8943   000CD6  EF90  F006         	goto	l10030
  8944   000CDA                     l11060:
  8945                           
  8946                           ; BSR set to: 0
  8947                           ; Switch size 1, requested type "simple"
  8948                           ; Number of cases is 8, Range of values is 72 to 122
  8949                           ; switch strategies available:
  8950                           ; Name         Instructions Cycles
  8951                           ; simple_byte           25    13 (average)
  8952                           ;	Chosen strategy is simple_byte
  8953   000CDA  51CE               	movf	??_vfpfcnvrt& (0+255),w,b
  8954   000CDC  0A48               	xorlw	72	; case 72
  8955   000CDE  B4D8               	btfsc	status,2,c
  8956   000CE0  EF78  F005         	goto	l10014
  8957   000CE4  0A04               	xorlw	4	; case 76
  8958   000CE6  B4D8               	btfsc	status,2,c
  8959   000CE8  EFBD  F005         	goto	l10018
  8960   000CEC  0A24               	xorlw	36	; case 104
  8961   000CEE  B4D8               	btfsc	status,2,c
  8962   000CF0  EF5B  F005         	goto	l10012
  8963   000CF4  0A01               	xorlw	1	; case 105
  8964   000CF6  B4D8               	btfsc	status,2,c
  8965   000CF8  EF3E  F005         	goto	l10010
  8966   000CFC  0A03               	xorlw	3	; case 106
  8967   000CFE  B4D8               	btfsc	status,2,c
  8968   000D00  EF10  F006         	goto	l10022
  8969   000D04  0A06               	xorlw	6	; case 108
  8970   000D06  B4D8               	btfsc	status,2,c
  8971   000D08  EF93  F005         	goto	l10016
  8972   000D0C  0A18               	xorlw	24	; case 116
  8973   000D0E  B4D8               	btfsc	status,2,c
  8974   000D10  EFF3  F005         	goto	l10020
  8975   000D14  0A0E               	xorlw	14	; case 122
  8976   000D16  B4D8               	btfsc	status,2,c
  8977   000D18  EF46  F006         	goto	l10024
  8978   000D1C  EF90  F006         	goto	l10030
  8979   000D20                     l10030:
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
  8983   000D20  0E01               	movlw	1
  8984   000D22  25E6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  8985   000D24  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  8986   000D26  0E00               	movlw	0
  8987   000D28  21E7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  8988   000D2A  6FCF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  8989   000D2C  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  8990   000D2E  6ED9               	movwf	fsr2l,c
  8991   000D30  6ADA               	clrf	fsr2h,c
  8992   000D32  C0CE  FFDE         	movff	??_vfpfcnvrt,postinc2
  8993   000D36  C0CF  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  8994   000D3A                     l10032:
  8995                           
  8996                           ; BSR set to: 0
  8997                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
  8998   000D3A  0E00               	movlw	0
  8999   000D3C  6FCB               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9000   000D3E  0E00               	movlw	0
  9001   000D40  6FCA               	movwf	?_vfpfcnvrt& (0+255),b
  9002   000D42  EF40  F009         	goto	l1521
  9003   000D46                     l10036:
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1648:         if 
      +                          ((*fmt)[0] == 'p') {
  9007   000D46  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9008   000D48  6ED9               	movwf	fsr2l,c
  9009   000D4A  6ADA               	clrf	fsr2h,c
  9010   000D4C  CFDE FFF6          	movff	postinc2,tblptrl
  9011   000D50  CFDD FFF7          	movff	postdec2,tblptrh
  9012   000D54                     	if	0	;tblptru may be non-zero
  9013   000D54                     	endif
  9014   000D54                     	if	0	;tblptru may be non-zero
  9015   000D54                     	endif
  9016   000D54  0008               	tblrd		*
  9017   000D56  50F5               	movf	tablat,w,c
  9018   000D58  0A70               	xorlw	112
  9019   000D5A  A4D8               	btfss	status,2,c
  9020   000D5C  EFB2  F006         	goto	u12321
  9021   000D60  EFB4  F006         	goto	u12320
  9022   000D64                     u12321:
  9023   000D64  EFE5  F006         	goto	l10044
  9024   000D68                     u12320:
  9025   000D68                     
  9026                           ; BSR set to: 0
  9027                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1649:            
      +                           ++*fmt;
  9028   000D68  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9029   000D6A  6ED9               	movwf	fsr2l,c
  9030   000D6C  6ADA               	clrf	fsr2h,c
  9031   000D6E  2ADE               	incf	postinc2,f,c
  9032   000D70  0E00               	movlw	0
  9033   000D72  22DD               	addwfc	postdec2,f,c
  9034   000D74                     
  9035                           ; BSR set to: 0
  9036                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1650:            
      +                           return (int) xtoa(fp,(vfpf_uint_t)(uintptr_t)(*(void * *)__va_arg(*(void * **)ap, (void
      +                           *)0)),'x');
  9037   000D74  C0CA  F01A         	movff	vfpfcnvrt@fp,xtoa@fp
  9038   000D78  C0CB  F01B         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  9039   000D7C  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  9040   000D7E  6ED9               	movwf	fsr2l,c
  9041   000D80  6ADA               	clrf	fsr2h,c
  9042   000D82  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  9043   000D86  0E02               	movlw	2
  9044   000D88  26DE               	addwf	postinc2,f,c
  9045   000D8A  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  9046   000D8E  0E00               	movlw	0
  9047   000D90  22DD               	addwfc	postdec2,f,c
  9048   000D92  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9049   000D96  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9050   000D9A  CFDE F0D0          	movff	postinc2,??_vfpfcnvrt+2
  9051   000D9E  CFDD F0D1          	movff	postdec2,??_vfpfcnvrt+3
  9052   000DA2  C0D0  F01C         	movff	??_vfpfcnvrt+2,xtoa@d
  9053   000DA6  C0D1  F01D         	movff	??_vfpfcnvrt+3,xtoa@d+1
  9054   000DAA  6A1E               	clrf	(xtoa@d+2)^0,c
  9055   000DAC  6A1F               	clrf	(xtoa@d+3)^0,c
  9056   000DAE  6A20               	clrf	(xtoa@d+4)^0,c
  9057   000DB0  6A21               	clrf	(xtoa@d+5)^0,c
  9058   000DB2  6A22               	clrf	(xtoa@d+6)^0,c
  9059   000DB4  6A23               	clrf	(xtoa@d+7)^0,c
  9060   000DB6  0E78               	movlw	120
  9061   000DB8  6E24               	movwf	xtoa@x^0,c
  9062   000DBA  ECC9  F023         	call	_xtoa	;wreg free
  9063   000DBE  C01A  F0CA         	movff	?_xtoa,?_vfpfcnvrt
  9064   000DC2  C01B  F0CB         	movff	?_xtoa+1,?_vfpfcnvrt+1
  9065   000DC6  EF40  F009         	goto	l1521
  9066   000DCA                     l10044:
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  9070   000DCA  0E00               	movlw	0
  9071   000DCC  6FDC               	movwf	vfpfcnvrt@done& (0+255),b
  9072   000DCE                     
  9073                           ; BSR set to: 0
  9074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  9075   000DCE  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9076   000DD0  6ED9               	movwf	fsr2l,c
  9077   000DD2  6ADA               	clrf	fsr2h,c
  9078   000DD4  CFDE FFF6          	movff	postinc2,tblptrl
  9079   000DD8  CFDD FFF7          	movff	postdec2,tblptrh
  9080   000DDC                     	if	0	;tblptru may be non-zero
  9081   000DDC                     	endif
  9082   000DDC                     	if	0	;tblptru may be non-zero
  9083   000DDC                     	endif
  9084   000DDC  0008               	tblrd		*
  9085   000DDE  50F5               	movf	tablat,w,c
  9086   000DE0  0A73               	xorlw	115
  9087   000DE2  A4D8               	btfss	status,2,c
  9088   000DE4  EFF6  F006         	goto	u12331
  9089   000DE8  EFF8  F006         	goto	u12330
  9090   000DEC                     u12331:
  9091   000DEC  EF02  F007         	goto	l10052
  9092   000DF0                     u12330:
  9093   000DF0                     
  9094                           ; BSR set to: 0
  9095                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  9096   000DF0  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9097   000DF2  6ED9               	movwf	fsr2l,c
  9098   000DF4  6ADA               	clrf	fsr2h,c
  9099   000DF6  2ADE               	incf	postinc2,f,c
  9100   000DF8  0E00               	movlw	0
  9101   000DFA  22DD               	addwfc	postdec2,f,c
  9102   000DFC                     l10050:
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  9106   000DFC  0E01               	movlw	1
  9107   000DFE  6FDC               	movwf	vfpfcnvrt@done& (0+255),b
  9108                           
  9109                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1660:   }
  9110   000E00  EF4E  F007         	goto	l10062
  9111   000E04                     l10052:
  9112                           
  9113                           ; BSR set to: 0
  9114   000E04  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9115   000E06  6ED9               	movwf	fsr2l,c
  9116   000E08  6ADA               	clrf	fsr2h,c
  9117   000E0A  CFDE FFF6          	movff	postinc2,tblptrl
  9118   000E0E  CFDD FFF7          	movff	postdec2,tblptrh
  9119   000E12                     	if	0	;tblptru may be non-zero
  9120   000E12                     	endif
  9121   000E12                     	if	0	;tblptru may be non-zero
  9122   000E12                     	endif
  9123   000E12  0008               	tblrd		*
  9124   000E14  50F5               	movf	tablat,w,c
  9125   000E16  0A6C               	xorlw	108
  9126   000E18  A4D8               	btfss	status,2,c
  9127   000E1A  EF11  F007         	goto	u12341
  9128   000E1E  EF13  F007         	goto	u12340
  9129   000E22                     u12341:
  9130   000E22  EF4E  F007         	goto	l10062
  9131   000E26                     u12340:
  9132   000E26                     
  9133                           ; BSR set to: 0
  9134   000E26  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9135   000E28  6ED9               	movwf	fsr2l,c
  9136   000E2A  6ADA               	clrf	fsr2h,c
  9137   000E2C  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt
  9138   000E30  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+1
  9139   000E34  0E01               	movlw	1
  9140   000E36  27CE               	addwf	??_vfpfcnvrt& (0+255),f,b
  9141   000E38  0E00               	movlw	0
  9142   000E3A  23CF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  9143   000E3C  C0CE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  9144   000E40  C0CF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  9145   000E44                     	if	0	;tblptru may be non-zero
  9146   000E44                     	endif
  9147   000E44                     	if	0	;tblptru may be non-zero
  9148   000E44                     	endif
  9149   000E44  0008               	tblrd		*
  9150   000E46  50F5               	movf	tablat,w,c
  9151   000E48  0A6C               	xorlw	108
  9152   000E4A  A4D8               	btfss	status,2,c
  9153   000E4C  EF2A  F007         	goto	u12351
  9154   000E50  EF2C  F007         	goto	u12350
  9155   000E54                     u12351:
  9156   000E54  EF4E  F007         	goto	l10062
  9157   000E58                     u12350:
  9158   000E58                     
  9159                           ; BSR set to: 0
  9160   000E58  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9161   000E5A  6ED9               	movwf	fsr2l,c
  9162   000E5C  6ADA               	clrf	fsr2h,c
  9163   000E5E  CFDE F0CE          	movff	postinc2,??_vfpfcnvrt
  9164   000E62  CFDD F0CF          	movff	postdec2,??_vfpfcnvrt+1
  9165   000E66  0E02               	movlw	2
  9166   000E68  27CE               	addwf	??_vfpfcnvrt& (0+255),f,b
  9167   000E6A  0E00               	movlw	0
  9168   000E6C  23CF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  9169   000E6E  C0CE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  9170   000E72  C0CF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  9171   000E76                     	if	0	;tblptru may be non-zero
  9172   000E76                     	endif
  9173   000E76                     	if	0	;tblptru may be non-zero
  9174   000E76                     	endif
  9175   000E76  0008               	tblrd		*
  9176   000E78  50F5               	movf	tablat,w,c
  9177   000E7A  0A73               	xorlw	115
  9178   000E7C  A4D8               	btfss	status,2,c
  9179   000E7E  EF43  F007         	goto	u12361
  9180   000E82  EF45  F007         	goto	u12360
  9181   000E86                     u12361:
  9182   000E86  EF4E  F007         	goto	l10062
  9183   000E8A                     u12360:
  9184   000E8A                     
  9185                           ; BSR set to: 0
  9186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  9187   000E8A  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9188   000E8C  6ED9               	movwf	fsr2l,c
  9189   000E8E  6ADA               	clrf	fsr2h,c
  9190   000E90  0E03               	movlw	3
  9191   000E92  26DE               	addwf	postinc2,f,c
  9192   000E94  0E00               	movlw	0
  9193   000E96  22DD               	addwfc	postdec2,f,c
  9194   000E98  EFFE  F006         	goto	l10050
  9195   000E9C                     l10062:
  9196                           
  9197                           ; BSR set to: 0
  9198                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  9199   000E9C  51DC               	movf	vfpfcnvrt@done& (0+255),w,b
  9200   000E9E  B4D8               	btfsc	status,2,c
  9201   000EA0  EF54  F007         	goto	u12371
  9202   000EA4  EF56  F007         	goto	u12370
  9203   000EA8                     u12371:
  9204   000EA8  EF75  F007         	goto	l10068
  9205   000EAC                     u12370:
  9206   000EAC                     
  9207                           ; BSR set to: 0
  9208                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          int) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));
  9209   000EAC  C0CA  F00A         	movff	vfpfcnvrt@fp,stoa@fp
  9210   000EB0  C0CB  F00B         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  9211   000EB4  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  9212   000EB6  6ED9               	movwf	fsr2l,c
  9213   000EB8  6ADA               	clrf	fsr2h,c
  9214   000EBA  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  9215   000EBE  0E02               	movlw	2
  9216   000EC0  26DE               	addwf	postinc2,f,c
  9217   000EC2  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  9218   000EC6  0E00               	movlw	0
  9219   000EC8  22DD               	addwfc	postdec2,f,c
  9220   000ECA  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9221   000ECE  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9222   000ED2  CFDE F00C          	movff	postinc2,stoa@s
  9223   000ED6  CFDD F00D          	movff	postdec2,stoa@s+1
  9224   000EDA  ECB9  F02C         	call	_stoa	;wreg free
  9225   000EDE  C00A  F0CA         	movff	?_stoa,?_vfpfcnvrt
  9226   000EE2  C00B  F0CB         	movff	?_stoa+1,?_vfpfcnvrt+1
  9227   000EE6  EF40  F009         	goto	l1521
  9228   000EEA                     l10068:
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  9232   000EEA  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9233   000EEC  6ED9               	movwf	fsr2l,c
  9234   000EEE  6ADA               	clrf	fsr2h,c
  9235   000EF0  CFDE F0E6          	movff	postinc2,vfpfcnvrt@cp
  9236   000EF4  CFDD F0E7          	movff	postdec2,vfpfcnvrt@cp+1
  9237   000EF8                     
  9238                           ; BSR set to: 0
  9239                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  9240   000EF8  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9241   000EFC  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9242   000F00                     	if	0	;tblptru may be non-zero
  9243   000F00                     	endif
  9244   000F00                     	if	0	;tblptru may be non-zero
  9245   000F00                     	endif
  9246   000F00  0008               	tblrd		*
  9247   000F02  CFF5 F0DD          	movff	tablat,vfpfcnvrt@c
  9248                           
  9249                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  9250   000F06  EF91  F007         	goto	l10080
  9251   000F0A                     l10072:
  9252                           
  9253                           ; BSR set to: 0
  9254                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  9255   000F0A  4BE6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  9256   000F0C  2BE7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  9257                           
  9258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  9259   000F0E  EFC6  F007         	goto	l10082
  9260   000F12                     l1594:
  9261   000F12                     l10074:
  9262                           
  9263                           ; BSR set to: 0
  9264                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  9265   000F12  0E6C               	movlw	108
  9266   000F14  6FDD               	movwf	vfpfcnvrt@c& (0+255),b
  9267                           
  9268                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  9269   000F16  EFC6  F007         	goto	l10082
  9270   000F1A                     l10076:
  9271                           
  9272                           ; BSR set to: 0
  9273                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  9274   000F1A  0E00               	movlw	0
  9275   000F1C  6FDD               	movwf	vfpfcnvrt@c& (0+255),b
  9276                           
  9277                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  9278   000F1E  EFC6  F007         	goto	l10082
  9279   000F22                     l10080:
  9280                           
  9281                           ; BSR set to: 0
  9282   000F22  51DD               	movf	vfpfcnvrt@c& (0+255),w,b
  9283   000F24  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  9284   000F26  6BCF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  9285                           
  9286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9287                           ; Switch size 1, requested type "simple"
  9288                           ; Number of cases is 1, Range of values is 0 to 0
  9289                           ; switch strategies available:
  9290                           ; Name         Instructions Cycles
  9291                           ; simple_byte            4     3 (average)
  9292                           ;	Chosen strategy is simple_byte
  9293   000F28  51CF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9294   000F2A  0A00               	xorlw	0	; case 0
  9295   000F2C  B4D8               	btfsc	status,2,c
  9296   000F2E  EF9B  F007         	goto	l11062
  9297   000F32  EF8D  F007         	goto	l10076
  9298   000F36                     l11062:
  9299                           
  9300                           ; BSR set to: 0
  9301                           ; Switch size 1, requested type "simple"
  9302                           ; Number of cases is 10, Range of values is 65 to 108
  9303                           ; switch strategies available:
  9304                           ; Name         Instructions Cycles
  9305                           ; simple_byte           31    16 (average)
  9306                           ;	Chosen strategy is simple_byte
  9307   000F36  51CE               	movf	??_vfpfcnvrt& (0+255),w,b
  9308   000F38  0A41               	xorlw	65	; case 65
  9309   000F3A  B4D8               	btfsc	status,2,c
  9310   000F3C  EF89  F007         	goto	l10074
  9311   000F40  0A04               	xorlw	4	; case 69
  9312   000F42  B4D8               	btfsc	status,2,c
  9313   000F44  EF89  F007         	goto	l10074
  9314   000F48  0A03               	xorlw	3	; case 70
  9315   000F4A  B4D8               	btfsc	status,2,c
  9316   000F4C  EF89  F007         	goto	l10074
  9317   000F50  0A01               	xorlw	1	; case 71
  9318   000F52  B4D8               	btfsc	status,2,c
  9319   000F54  EF89  F007         	goto	l10074
  9320   000F58  0A0B               	xorlw	11	; case 76
  9321   000F5A  B4D8               	btfsc	status,2,c
  9322   000F5C  EF85  F007         	goto	l10072
  9323   000F60  0A2D               	xorlw	45	; case 97
  9324   000F62  B4D8               	btfsc	status,2,c
  9325   000F64  EF89  F007         	goto	l1594
  9326   000F68  0A04               	xorlw	4	; case 101
  9327   000F6A  B4D8               	btfsc	status,2,c
  9328   000F6C  EF89  F007         	goto	l10074
  9329   000F70  0A03               	xorlw	3	; case 102
  9330   000F72  B4D8               	btfsc	status,2,c
  9331   000F74  EF89  F007         	goto	l10074
  9332   000F78  0A01               	xorlw	1	; case 103
  9333   000F7A  B4D8               	btfsc	status,2,c
  9334   000F7C  EF89  F007         	goto	l10074
  9335   000F80  0A0B               	xorlw	11	; case 108
  9336   000F82  B4D8               	btfsc	status,2,c
  9337   000F84  EF85  F007         	goto	l10072
  9338   000F88  EF8D  F007         	goto	l10076
  9339   000F8C                     l10082:
  9340                           
  9341                           ; BSR set to: 0
  9342   000F8C  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9343   000F90  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9344   000F94                     	if	0	;tblptru may be non-zero
  9345   000F94                     	endif
  9346   000F94                     	if	0	;tblptru may be non-zero
  9347   000F94                     	endif
  9348   000F94  0008               	tblrd		*
  9349   000F96  50F5               	movf	tablat,w,c
  9350   000F98  0A61               	xorlw	97
  9351   000F9A  B4D8               	btfsc	status,2,c
  9352   000F9C  EFD2  F007         	goto	u12381
  9353   000FA0  EFD4  F007         	goto	u12380
  9354   000FA4                     u12381:
  9355   000FA4  EF6A  F008         	goto	l10104
  9356   000FA8                     u12380:
  9357   000FA8                     
  9358                           ; BSR set to: 0
  9359   000FA8  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9360   000FAC  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9361   000FB0                     	if	0	;tblptru may be non-zero
  9362   000FB0                     	endif
  9363   000FB0                     	if	0	;tblptru may be non-zero
  9364   000FB0                     	endif
  9365   000FB0  0008               	tblrd		*
  9366   000FB2  50F5               	movf	tablat,w,c
  9367   000FB4  0A41               	xorlw	65
  9368   000FB6  B4D8               	btfsc	status,2,c
  9369   000FB8  EFE0  F007         	goto	u12391
  9370   000FBC  EFE2  F007         	goto	u12390
  9371   000FC0                     u12391:
  9372   000FC0  EF6A  F008         	goto	l10104
  9373   000FC4                     u12390:
  9374   000FC4                     
  9375                           ; BSR set to: 0
  9376   000FC4  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9377   000FC8  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9378   000FCC                     	if	0	;tblptru may be non-zero
  9379   000FCC                     	endif
  9380   000FCC                     	if	0	;tblptru may be non-zero
  9381   000FCC                     	endif
  9382   000FCC  0008               	tblrd		*
  9383   000FCE  50F5               	movf	tablat,w,c
  9384   000FD0  0A65               	xorlw	101
  9385   000FD2  B4D8               	btfsc	status,2,c
  9386   000FD4  EFEE  F007         	goto	u12401
  9387   000FD8  EFF0  F007         	goto	u12400
  9388   000FDC                     u12401:
  9389   000FDC  EF6A  F008         	goto	l10104
  9390   000FE0                     u12400:
  9391   000FE0                     
  9392                           ; BSR set to: 0
  9393   000FE0  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9394   000FE4  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9395   000FE8                     	if	0	;tblptru may be non-zero
  9396   000FE8                     	endif
  9397   000FE8                     	if	0	;tblptru may be non-zero
  9398   000FE8                     	endif
  9399   000FE8  0008               	tblrd		*
  9400   000FEA  50F5               	movf	tablat,w,c
  9401   000FEC  0A45               	xorlw	69
  9402   000FEE  B4D8               	btfsc	status,2,c
  9403   000FF0  EFFC  F007         	goto	u12411
  9404   000FF4  EFFE  F007         	goto	u12410
  9405   000FF8                     u12411:
  9406   000FF8  EF6A  F008         	goto	l10104
  9407   000FFC                     u12410:
  9408   000FFC                     
  9409                           ; BSR set to: 0
  9410   000FFC  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9411   001000  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9412   001004                     	if	0	;tblptru may be non-zero
  9413   001004                     	endif
  9414   001004                     	if	0	;tblptru may be non-zero
  9415   001004                     	endif
  9416   001004  0008               	tblrd		*
  9417   001006  50F5               	movf	tablat,w,c
  9418   001008  0A66               	xorlw	102
  9419   00100A  B4D8               	btfsc	status,2,c
  9420   00100C  EF0A  F008         	goto	u12421
  9421   001010  EF0C  F008         	goto	u12420
  9422   001014                     u12421:
  9423   001014  EF6A  F008         	goto	l10104
  9424   001018                     u12420:
  9425   001018                     
  9426                           ; BSR set to: 0
  9427   001018  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9428   00101C  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9429   001020                     	if	0	;tblptru may be non-zero
  9430   001020                     	endif
  9431   001020                     	if	0	;tblptru may be non-zero
  9432   001020                     	endif
  9433   001020  0008               	tblrd		*
  9434   001022  50F5               	movf	tablat,w,c
  9435   001024  0A46               	xorlw	70
  9436   001026  B4D8               	btfsc	status,2,c
  9437   001028  EF18  F008         	goto	u12431
  9438   00102C  EF1A  F008         	goto	u12430
  9439   001030                     u12431:
  9440   001030  EF6A  F008         	goto	l10104
  9441   001034                     u12430:
  9442   001034                     
  9443                           ; BSR set to: 0
  9444   001034  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9445   001038  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9446   00103C                     	if	0	;tblptru may be non-zero
  9447   00103C                     	endif
  9448   00103C                     	if	0	;tblptru may be non-zero
  9449   00103C                     	endif
  9450   00103C  0008               	tblrd		*
  9451   00103E  50F5               	movf	tablat,w,c
  9452   001040  0A67               	xorlw	103
  9453   001042  B4D8               	btfsc	status,2,c
  9454   001044  EF26  F008         	goto	u12441
  9455   001048  EF28  F008         	goto	u12440
  9456   00104C                     u12441:
  9457   00104C  EF6A  F008         	goto	l10104
  9458   001050                     u12440:
  9459   001050                     
  9460                           ; BSR set to: 0
  9461   001050  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9462   001054  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9463   001058                     	if	0	;tblptru may be non-zero
  9464   001058                     	endif
  9465   001058                     	if	0	;tblptru may be non-zero
  9466   001058                     	endif
  9467   001058  0008               	tblrd		*
  9468   00105A  50F5               	movf	tablat,w,c
  9469   00105C  0A47               	xorlw	71
  9470   00105E  A4D8               	btfss	status,2,c
  9471   001060  EF34  F008         	goto	u12451
  9472   001064  EF36  F008         	goto	u12450
  9473   001068                     u12451:
  9474   001068  EFF6  F008         	goto	l10120
  9475   00106C                     u12450:
  9476   00106C  EF6A  F008         	goto	l10104
  9477   001070                     l10098:
  9478                           
  9479                           ; BSR set to: 0
  9480                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9481   001070  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  9482   001072  6ED9               	movwf	fsr2l,c
  9483   001074  6ADA               	clrf	fsr2h,c
  9484   001076  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  9485   00107A  0E04               	movlw	4
  9486   00107C  26DE               	addwf	postinc2,f,c
  9487   00107E  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  9488   001082  0E00               	movlw	0
  9489   001084  22DD               	addwfc	postdec2,f,c
  9490   001086  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9491   00108A  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9492   00108E  CFDE F0DE          	movff	postinc2,vfpfcnvrt@convarg
  9493   001092  CFDE F0DF          	movff	postinc2,vfpfcnvrt@convarg+1
  9494   001096  CFDE F0E0          	movff	postinc2,vfpfcnvrt@convarg+2
  9495   00109A  CFDE F0E1          	movff	postinc2,vfpfcnvrt@convarg+3
  9496                           
  9497                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  9498   00109E  EF7F  F008         	goto	l10106
  9499   0010A2                     l10100:
  9500                           
  9501                           ; BSR set to: 0
  9502                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  9503   0010A2  51CD               	movf	vfpfcnvrt@ap& (0+255),w,b
  9504   0010A4  6ED9               	movwf	fsr2l,c
  9505   0010A6  6ADA               	clrf	fsr2h,c
  9506   0010A8  CFDF F0CE          	movff	indf2,??_vfpfcnvrt
  9507   0010AC  0E04               	movlw	4
  9508   0010AE  26DE               	addwf	postinc2,f,c
  9509   0010B0  CFDF F0CF          	movff	indf2,??_vfpfcnvrt+1
  9510   0010B4  0E00               	movlw	0
  9511   0010B6  22DD               	addwfc	postdec2,f,c
  9512   0010B8  C0CE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9513   0010BC  C0CF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9514   0010C0  CFDE F0DE          	movff	postinc2,vfpfcnvrt@convarg
  9515   0010C4  CFDE F0DF          	movff	postinc2,vfpfcnvrt@convarg+1
  9516   0010C8  CFDE F0E0          	movff	postinc2,vfpfcnvrt@convarg+2
  9517   0010CC  CFDE F0E1          	movff	postinc2,vfpfcnvrt@convarg+3
  9518                           
  9519                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  9520   0010D0  EF7F  F008         	goto	l10106
  9521   0010D4                     l10104:
  9522                           
  9523                           ; BSR set to: 0
  9524   0010D4  51DD               	movf	vfpfcnvrt@c& (0+255),w,b
  9525   0010D6  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  9526   0010D8  6BCF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  9527                           
  9528                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9529                           ; Switch size 1, requested type "simple"
  9530                           ; Number of cases is 1, Range of values is 0 to 0
  9531                           ; switch strategies available:
  9532                           ; Name         Instructions Cycles
  9533                           ; simple_byte            4     3 (average)
  9534                           ;	Chosen strategy is simple_byte
  9535   0010DA  51CF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9536   0010DC  0A00               	xorlw	0	; case 0
  9537   0010DE  B4D8               	btfsc	status,2,c
  9538   0010E0  EF74  F008         	goto	l11064
  9539   0010E4  EF7F  F008         	goto	l10106
  9540   0010E8                     l11064:
  9541                           
  9542                           ; BSR set to: 0
  9543                           ; Switch size 1, requested type "simple"
  9544                           ; Number of cases is 2, Range of values is 76 to 108
  9545                           ; switch strategies available:
  9546                           ; Name         Instructions Cycles
  9547                           ; simple_byte            7     4 (average)
  9548                           ;	Chosen strategy is simple_byte
  9549   0010E8  51CE               	movf	??_vfpfcnvrt& (0+255),w,b
  9550   0010EA  0A4C               	xorlw	76	; case 76
  9551   0010EC  B4D8               	btfsc	status,2,c
  9552   0010EE  EF51  F008         	goto	l10100
  9553   0010F2  0A20               	xorlw	32	; case 108
  9554   0010F4  B4D8               	btfsc	status,2,c
  9555   0010F6  EF38  F008         	goto	l10098
  9556   0010FA  EF7F  F008         	goto	l10106
  9557   0010FE                     l10106:
  9558                           
  9559                           ; BSR set to: 0
  9560                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  9561   0010FE  0E01               	movlw	1
  9562   001100  25E6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  9563   001102  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  9564   001104  0E00               	movlw	0
  9565   001106  21E7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  9566   001108  6FCF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  9567   00110A  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9568   00110C  6ED9               	movwf	fsr2l,c
  9569   00110E  6ADA               	clrf	fsr2h,c
  9570   001110  C0CE  FFDE         	movff	??_vfpfcnvrt,postinc2
  9571   001114  C0CF  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  9572                           
  9573                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  9574   001118  EFC4  F008         	goto	l10118
  9575   00111C                     l10108:
  9576                           
  9577                           ; BSR set to: 0
  9578                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1769:      return
      +                           (int) atoa(fp,convarg.f,*cp);
  9579   00111C  C0CA  F090         	movff	vfpfcnvrt@fp,atoa@fp
  9580   001120  C0CB  F091         	movff	vfpfcnvrt@fp+1,atoa@fp+1
  9581   001124  C0DE  F092         	movff	vfpfcnvrt@convarg,atoa@f
  9582   001128  C0DF  F093         	movff	vfpfcnvrt@convarg+1,atoa@f+1
  9583   00112C  C0E0  F094         	movff	vfpfcnvrt@convarg+2,atoa@f+2
  9584   001130  C0E1  F095         	movff	vfpfcnvrt@convarg+3,atoa@f+3
  9585   001134  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9586   001138  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9587   00113C                     	if	0	;tblptru may be non-zero
  9588   00113C                     	endif
  9589   00113C                     	if	0	;tblptru may be non-zero
  9590   00113C                     	endif
  9591   00113C  0008               	tblrd		*
  9592   00113E  CFF5 F096          	movff	tablat,atoa@c
  9593   001142  EC4B  F010         	call	_atoa	;wreg free
  9594   001146  C090  F0CA         	movff	?_atoa,?_vfpfcnvrt
  9595   00114A  C091  F0CB         	movff	?_atoa+1,?_vfpfcnvrt+1
  9596   00114E  EF40  F009         	goto	l1521
  9597   001152                     l1613:
  9598   001152                     l10112:
  9599                           
  9600                           ; BSR set to: 0
  9601                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (int) efgtoa(fp, convarg.f, *cp);
  9602   001152  C0CA  F090         	movff	vfpfcnvrt@fp,efgtoa@fp
  9603   001156  C0CB  F091         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  9604   00115A  C0DE  F092         	movff	vfpfcnvrt@convarg,efgtoa@f
  9605   00115E  C0DF  F093         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  9606   001162  C0E0  F094         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  9607   001166  C0E1  F095         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  9608   00116A  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9609   00116E  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9610   001172                     	if	0	;tblptru may be non-zero
  9611   001172                     	endif
  9612   001172                     	if	0	;tblptru may be non-zero
  9613   001172                     	endif
  9614   001172  0008               	tblrd		*
  9615   001174  CFF5 F096          	movff	tablat,efgtoa@c
  9616   001178  EC41  F009         	call	_efgtoa	;wreg free
  9617   00117C  C090  F0CA         	movff	?_efgtoa,?_vfpfcnvrt
  9618   001180  C091  F0CB         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  9619   001184  EF40  F009         	goto	l1521
  9620   001188                     l10118:
  9621                           
  9622                           ; BSR set to: 0
  9623   001188  C0E6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  9624   00118C  C0E7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  9625   001190                     	if	0	;tblptru may be non-zero
  9626   001190                     	endif
  9627   001190                     	if	0	;tblptru may be non-zero
  9628   001190                     	endif
  9629   001190  0008               	tblrd		*
  9630   001192  50F5               	movf	tablat,w,c
  9631   001194  6FCE               	movwf	??_vfpfcnvrt& (0+255),b
  9632   001196  6BCF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  9633                           
  9634                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9635                           ; Switch size 1, requested type "simple"
  9636                           ; Number of cases is 1, Range of values is 0 to 0
  9637                           ; switch strategies available:
  9638                           ; Name         Instructions Cycles
  9639                           ; simple_byte            4     3 (average)
  9640                           ;	Chosen strategy is simple_byte
  9641   001198  51CF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9642   00119A  0A00               	xorlw	0	; case 0
  9643   00119C  B4D8               	btfsc	status,2,c
  9644   00119E  EFD3  F008         	goto	l11066
  9645   0011A2  EFF6  F008         	goto	l10120
  9646   0011A6                     l11066:
  9647                           
  9648                           ; BSR set to: 0
  9649                           ; Switch size 1, requested type "simple"
  9650                           ; Number of cases is 8, Range of values is 65 to 103
  9651                           ; switch strategies available:
  9652                           ; Name         Instructions Cycles
  9653                           ; simple_byte           25    13 (average)
  9654                           ;	Chosen strategy is simple_byte
  9655   0011A6  51CE               	movf	??_vfpfcnvrt& (0+255),w,b
  9656   0011A8  0A41               	xorlw	65	; case 65
  9657   0011AA  B4D8               	btfsc	status,2,c
  9658   0011AC  EF8E  F008         	goto	l10108
  9659   0011B0  0A04               	xorlw	4	; case 69
  9660   0011B2  B4D8               	btfsc	status,2,c
  9661   0011B4  EFA9  F008         	goto	l10112
  9662   0011B8  0A03               	xorlw	3	; case 70
  9663   0011BA  B4D8               	btfsc	status,2,c
  9664   0011BC  EFA9  F008         	goto	l10112
  9665   0011C0  0A01               	xorlw	1	; case 71
  9666   0011C2  B4D8               	btfsc	status,2,c
  9667   0011C4  EFA9  F008         	goto	l10112
  9668   0011C8  0A26               	xorlw	38	; case 97
  9669   0011CA  B4D8               	btfsc	status,2,c
  9670   0011CC  EF8E  F008         	goto	l10108
  9671   0011D0  0A04               	xorlw	4	; case 101
  9672   0011D2  B4D8               	btfsc	status,2,c
  9673   0011D4  EFA9  F008         	goto	l1613
  9674   0011D8  0A03               	xorlw	3	; case 102
  9675   0011DA  B4D8               	btfsc	status,2,c
  9676   0011DC  EFA9  F008         	goto	l10112
  9677   0011E0  0A01               	xorlw	1	; case 103
  9678   0011E2  B4D8               	btfsc	status,2,c
  9679   0011E4  EFA9  F008         	goto	l10112
  9680   0011E8  EFF6  F008         	goto	l10120
  9681   0011EC                     l10120:
  9682                           
  9683                           ; BSR set to: 0
  9684                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  9685   0011EC  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9686   0011EE  6ED9               	movwf	fsr2l,c
  9687   0011F0  6ADA               	clrf	fsr2h,c
  9688   0011F2  CFDE FFF6          	movff	postinc2,tblptrl
  9689   0011F6  CFDD FFF7          	movff	postdec2,tblptrh
  9690   0011FA                     	if	0	;tblptru may be non-zero
  9691   0011FA                     	endif
  9692   0011FA                     	if	0	;tblptru may be non-zero
  9693   0011FA                     	endif
  9694   0011FA  0008               	tblrd		*
  9695   0011FC  50F5               	movf	tablat,w,c
  9696   0011FE  0A25               	xorlw	37
  9697   001200  A4D8               	btfss	status,2,c
  9698   001202  EF05  F009         	goto	u12461
  9699   001206  EF07  F009         	goto	u12460
  9700   00120A                     u12461:
  9701   00120A  EF1E  F009         	goto	l10130
  9702   00120E                     u12460:
  9703   00120E                     
  9704                           ; BSR set to: 0
  9705                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  9706   00120E  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9707   001210  6ED9               	movwf	fsr2l,c
  9708   001212  6ADA               	clrf	fsr2h,c
  9709   001214  2ADE               	incf	postinc2,f,c
  9710   001216  0E00               	movlw	0
  9711   001218  22DD               	addwfc	postdec2,f,c
  9712   00121A                     
  9713                           ; BSR set to: 0
  9714                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  9715   00121A  0E00               	movlw	0
  9716   00121C  6E02               	movwf	(fputc@c+1)^0,c
  9717   00121E  0E25               	movlw	37
  9718   001220  6E01               	movwf	fputc@c^0,c
  9719   001222  C0CA  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9720   001226  C0CB  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9721   00122A  ECE9  F035         	call	_fputc	;wreg free
  9722   00122E                     l10126:
  9723                           
  9724                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
  9725   00122E  0E00               	movlw	0
  9726   001230  0100               	movlb	0	; () banked
  9727   001232  6FCB               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  9728   001234  0E01               	movlw	1
  9729   001236  6FCA               	movwf	?_vfpfcnvrt& (0+255),b
  9730   001238  EF40  F009         	goto	l1521
  9731   00123C                     l10130:
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  9735   00123C  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9736   00123E  6ED9               	movwf	fsr2l,c
  9737   001240  6ADA               	clrf	fsr2h,c
  9738   001242  2ADE               	incf	postinc2,f,c
  9739   001244  0E00               	movlw	0
  9740   001246  22DD               	addwfc	postdec2,f,c
  9741   001248  EF9D  F006         	goto	l10032
  9742   00124C                     l10136:
  9743                           
  9744                           ; BSR set to: 0
  9745                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  9746   00124C  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9747   00124E  6ED9               	movwf	fsr2l,c
  9748   001250  6ADA               	clrf	fsr2h,c
  9749   001252  CFDE FFF6          	movff	postinc2,tblptrl
  9750   001256  CFDD FFF7          	movff	postdec2,tblptrh
  9751   00125A                     	if	0	;tblptru may be non-zero
  9752   00125A                     	endif
  9753   00125A                     	if	0	;tblptru may be non-zero
  9754   00125A                     	endif
  9755   00125A  0008               	tblrd		*
  9756   00125C  50F5               	movf	tablat,w,c
  9757   00125E  6E01               	movwf	fputc@c^0,c
  9758   001260  6A02               	clrf	(fputc@c+1)^0,c
  9759   001262  C0CA  F003         	movff	vfpfcnvrt@fp,fputc@fp
  9760   001266  C0CB  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  9761   00126A  ECE9  F035         	call	_fputc	;wreg free
  9762   00126E                     
  9763                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  9764   00126E  0100               	movlb	0	; () banked
  9765   001270  51CC               	movf	vfpfcnvrt@fmt& (0+255),w,b
  9766   001272  6ED9               	movwf	fsr2l,c
  9767   001274  6ADA               	clrf	fsr2h,c
  9768   001276  2ADE               	incf	postinc2,f,c
  9769   001278  0E00               	movlw	0
  9770   00127A  22DD               	addwfc	postdec2,f,c
  9771   00127C  EF17  F009         	goto	l10126
  9772   001280                     l1521:
  9773   001280  0012               	return		;funcret
  9774   001282                     __end_of_vfpfcnvrt:
  9775                           	callstack 0
  9776                           
  9777 ;; *************** function _xtoa *****************
  9778 ;; Defined at:
  9779 ;;		line 1052 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  9780 ;; Parameters:    Size  Location     Type
  9781 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  9782 ;;		 -> vsnprintf@f(12), 
  9783 ;;  d               8   27[COMRAM] unsigned long long 
  9784 ;;  x               1   35[COMRAM] unsigned char 
  9785 ;; Auto vars:     Size  Location     Type
  9786 ;;  i               2   53[COMRAM] int 
  9787 ;;  w               2   50[COMRAM] int 
  9788 ;;  p               2   47[COMRAM] int 
  9789 ;;  c               1   52[COMRAM] unsigned char 
  9790 ;;  d_nonzero       1   49[COMRAM] _Bool 
  9791 ;;  a               1   44[COMRAM] unsigned char 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  2   25[COMRAM] int 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9801 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;      Totals:        30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;Total ram usage:       30 bytes
  9806 ;; Hardware stack levels used: 1
  9807 ;; Hardware stack levels required when called: 5
  9808 ;; This function calls:
  9809 ;;		_pad
  9810 ;; This function is called by:
  9811 ;;		_vfpfcnvrt
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815                           	psect	text34
  9816   004792                     __ptext34:
  9817                           	callstack 0
  9818   004792                     _xtoa:
  9819                           	callstack 19
  9820   004792                     
  9821                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1076:     if (!(p
      +                          rec < 0)) {
  9822   004792  0101               	movlb	1	; () banked
  9823   004794  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  9824   004796  EFCF  F023         	goto	u12001
  9825   00479A  EFD1  F023         	goto	u12000
  9826   00479E                     u12001:
  9827   00479E  EFD2  F023         	goto	l9778
  9828   0047A2                     u12000:
  9829   0047A2                     
  9830                           ; BSR set to: 1
  9831                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1077:         fla
      +                          gs &= ~(1 << 1);
  9832   0047A2  93B0               	bcf	_flags& (0+255),1,b
  9833   0047A4                     l9778:
  9834                           
  9835                           ; BSR set to: 1
  9836                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1080:     p = (0 
      +                          <= prec) ? prec : 1;
  9837   0047A4  BFAD               	btfsc	(_prec+1)& (0+255),7,b
  9838   0047A6  EFD9  F023         	goto	u12010
  9839   0047AA  EFD7  F023         	goto	u12011
  9840   0047AE                     u12011:
  9841   0047AE  EFDF  F023         	goto	l1476
  9842   0047B2                     u12010:
  9843   0047B2                     
  9844                           ; BSR set to: 1
  9845   0047B2  0E00               	movlw	0
  9846   0047B4  6E31               	movwf	(xtoa@p+1)^0,c
  9847   0047B6  0E01               	movlw	1
  9848   0047B8  6E30               	movwf	xtoa@p^0,c
  9849   0047BA  EFE3  F023         	goto	l1478
  9850   0047BE                     l1476:
  9851                           
  9852                           ; BSR set to: 1
  9853   0047BE  C1AC  F030         	movff	_prec,xtoa@p
  9854   0047C2  C1AD  F031         	movff	_prec+1,xtoa@p+1
  9855   0047C6                     l1478:
  9856                           
  9857                           ; BSR set to: 1
  9858                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
  9859   0047C6  C1AA  F033         	movff	_width,xtoa@w
  9860   0047CA  C1AB  F034         	movff	_width+1,xtoa@w+1
  9861   0047CE                     
  9862                           ; BSR set to: 1
  9863                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1084:  d_nonzero 
      +                          = d != 0;
  9864   0047CE  501C               	movf	xtoa@d^0,w,c
  9865   0047D0  101D               	iorwf	(xtoa@d+1)^0,w,c
  9866   0047D2  101E               	iorwf	(xtoa@d+2)^0,w,c
  9867   0047D4  101F               	iorwf	(xtoa@d+3)^0,w,c
  9868   0047D6  1020               	iorwf	(xtoa@d+4)^0,w,c
  9869   0047D8  1021               	iorwf	(xtoa@d+5)^0,w,c
  9870   0047DA  1022               	iorwf	(xtoa@d+6)^0,w,c
  9871   0047DC  1023               	iorwf	(xtoa@d+7)^0,w,c
  9872   0047DE  A4D8               	btfss	status,2,c
  9873   0047E0  EFF4  F023         	goto	u12021
  9874   0047E4  EFF7  F023         	goto	u12020
  9875   0047E8                     u12021:
  9876   0047E8  0E01               	movlw	1
  9877   0047EA  EFF8  F023         	goto	u12030
  9878   0047EE                     u12020:
  9879   0047EE  0E00               	movlw	0
  9880   0047F0                     u12030:
  9881   0047F0  6E32               	movwf	xtoa@d_nonzero^0,c
  9882   0047F2                     
  9883                           ; BSR set to: 1
  9884                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1085:     if ((fl
      +                          ags & (1 << 4)) && d_nonzero) {
  9885   0047F2  A9B0               	btfss	_flags& (0+255),4,b
  9886   0047F4  EFFE  F023         	goto	u12041
  9887   0047F8  EF00  F024         	goto	u12040
  9888   0047FC                     u12041:
  9889   0047FC  EF0C  F024         	goto	l1479
  9890   004800                     u12040:
  9891   004800                     
  9892                           ; BSR set to: 1
  9893   004800  5032               	movf	xtoa@d_nonzero^0,w,c
  9894   004802  B4D8               	btfsc	status,2,c
  9895   004804  EF06  F024         	goto	u12051
  9896   004808  EF08  F024         	goto	u12050
  9897   00480C                     u12051:
  9898   00480C  EF0C  F024         	goto	l1479
  9899   004810                     u12050:
  9900   004810                     
  9901                           ; BSR set to: 1
  9902                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1086:         w -
      +                          = 2;
  9903   004810  0EFE               	movlw	254
  9904   004812  2633               	addwf	xtoa@w^0,f,c
  9905   004814  0EFF               	movlw	255
  9906   004816  2234               	addwfc	(xtoa@w+1)^0,f,c
  9907   004818                     l1479:
  9908                           
  9909                           ; BSR set to: 1
  9910                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1091:  a = x == '
      +                          x' ? 'a' : 'A';
  9911   004818  0E78               	movlw	120
  9912   00481A  1824               	xorwf	xtoa@x^0,w,c
  9913   00481C  B4D8               	btfsc	status,2,c
  9914   00481E  EF13  F024         	goto	u12061
  9915   004822  EF15  F024         	goto	u12060
  9916   004826                     u12061:
  9917   004826  EF1B  F024         	goto	l9792
  9918   00482A                     u12060:
  9919   00482A                     
  9920                           ; BSR set to: 1
  9921   00482A  0E00               	movlw	0
  9922   00482C  6E2F               	movwf	(_xtoa$1375+1)^0,c
  9923   00482E  0E41               	movlw	65
  9924   004830  6E2E               	movwf	_xtoa$1375^0,c
  9925   004832  EF1F  F024         	goto	l9794
  9926   004836                     l9792:
  9927                           
  9928                           ; BSR set to: 1
  9929   004836  0E00               	movlw	0
  9930   004838  6E2F               	movwf	(_xtoa$1375+1)^0,c
  9931   00483A  0E61               	movlw	97
  9932   00483C  6E2E               	movwf	_xtoa$1375^0,c
  9933   00483E                     l9794:
  9934                           
  9935                           ; BSR set to: 1
  9936   00483E  C02E  F02D         	movff	_xtoa$1375,xtoa@a
  9937                           
  9938                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
  9939   004842  0E00               	movlw	0
  9940   004844  6E37               	movwf	(xtoa@i+1)^0,c
  9941   004846  0E4F               	movlw	79
  9942   004848  6E36               	movwf	xtoa@i^0,c
  9943   00484A                     
  9944                           ; BSR set to: 1
  9945                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
  9946   00484A  0E00               	movlw	0
  9947   00484C  0103               	movlb	3	; () banked
  9948   00484E  6F6F               	movwf	(_dbuf+79)& (0+255),b
  9949                           
  9950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  9951   004850  EF7C  F024         	goto	l9816
  9952   004854                     l9798:
  9953                           
  9954                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1107:         --i;
  9955   004854  0636               	decf	xtoa@i^0,f,c
  9956   004856  A0D8               	btfss	status,0,c
  9957   004858  0637               	decf	(xtoa@i+1)^0,f,c
  9958   00485A                     
  9959                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
  9960   00485A  501C               	movf	xtoa@d^0,w,c
  9961   00485C  0B0F               	andlw	15
  9962   00485E  6E35               	movwf	xtoa@c^0,c
  9963   004860                     
  9964                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
  9965   004860  0E0A               	movlw	10
  9966   004862  6035               	cpfslt	xtoa@c^0,c
  9967   004864  EF36  F024         	goto	u12071
  9968   004868  EF38  F024         	goto	u12070
  9969   00486C                     u12071:
  9970   00486C  EF3C  F024         	goto	l9806
  9971   004870                     u12070:
  9972   004870                     
  9973                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
  9974   004870  0E30               	movlw	48
  9975   004872  2635               	addwf	xtoa@c^0,f,c
  9976                           
  9977                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1111:   }
  9978   004874  EF3F  F024         	goto	l9808
  9979   004878                     l9806:
  9980                           
  9981                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1114:    c += a -
      +                           10;
  9982   004878  502D               	movf	xtoa@a^0,w,c
  9983   00487A  0FF6               	addlw	246
  9984   00487C  2635               	addwf	xtoa@c^0,f,c
  9985   00487E                     l9808:
  9986                           
  9987                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
  9988   00487E  0E20               	movlw	low _dbuf
  9989   004880  2436               	addwf	xtoa@i^0,w,c
  9990   004882  6ED9               	movwf	fsr2l,c
  9991   004884  0E03               	movlw	high _dbuf
  9992   004886  2037               	addwfc	(xtoa@i+1)^0,w,c
  9993   004888  6EDA               	movwf	fsr2h,c
  9994   00488A  C035  FFDF         	movff	xtoa@c,indf2
  9995   00488E                     
  9996                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1123:         --p
      +                          ;
  9997   00488E  0630               	decf	xtoa@p^0,f,c
  9998   004890  A0D8               	btfss	status,0,c
  9999   004892  0631               	decf	(xtoa@p+1)^0,f,c
 10000   004894                     
 10001                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
 10002   004894  0633               	decf	xtoa@w^0,f,c
 10003   004896  A0D8               	btfss	status,0,c
 10004   004898  0634               	decf	(xtoa@w+1)^0,f,c
 10005   00489A                     
 10006                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
 10007   00489A  C01C  F025         	movff	xtoa@d,??_xtoa
 10008   00489E  C01D  F026         	movff	xtoa@d+1,??_xtoa+1
 10009   0048A2  C01E  F027         	movff	xtoa@d+2,??_xtoa+2
 10010   0048A6  C01F  F028         	movff	xtoa@d+3,??_xtoa+3
 10011   0048AA  C020  F029         	movff	xtoa@d+4,??_xtoa+4
 10012   0048AE  C021  F02A         	movff	xtoa@d+5,??_xtoa+5
 10013   0048B2  C022  F02B         	movff	xtoa@d+6,??_xtoa+6
 10014   0048B6  C023  F02C         	movff	xtoa@d+7,??_xtoa+7
 10015   0048BA  0E05               	movlw	5
 10016   0048BC  EF69  F024         	goto	u12080
 10017   0048C0                     u12085:
 10018   0048C0  90D8               	bcf	status,0,c
 10019   0048C2  322C               	rrcf	(??_xtoa+7)^0,f,c
 10020   0048C4  322B               	rrcf	(??_xtoa+6)^0,f,c
 10021   0048C6  322A               	rrcf	(??_xtoa+5)^0,f,c
 10022   0048C8  3229               	rrcf	(??_xtoa+4)^0,f,c
 10023   0048CA  3228               	rrcf	(??_xtoa+3)^0,f,c
 10024   0048CC  3227               	rrcf	(??_xtoa+2)^0,f,c
 10025   0048CE  3226               	rrcf	(??_xtoa+1)^0,f,c
 10026   0048D0  3225               	rrcf	??_xtoa^0,f,c
 10027   0048D2                     u12080:
 10028   0048D2  2EE8               	decfsz	wreg,f,c
 10029   0048D4  EF60  F024         	goto	u12085
 10030   0048D8  C025  F01C         	movff	??_xtoa,xtoa@d
 10031   0048DC  C026  F01D         	movff	??_xtoa+1,xtoa@d+1
 10032   0048E0  C027  F01E         	movff	??_xtoa+2,xtoa@d+2
 10033   0048E4  C028  F01F         	movff	??_xtoa+3,xtoa@d+3
 10034   0048E8  C029  F020         	movff	??_xtoa+4,xtoa@d+4
 10035   0048EC  C02A  F021         	movff	??_xtoa+5,xtoa@d+5
 10036   0048F0  C02B  F022         	movff	??_xtoa+6,xtoa@d+6
 10037   0048F4  C02C  F023         	movff	??_xtoa+7,xtoa@d+7
 10038   0048F8                     l9816:
 10039                           
 10040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
 10041   0048F8  BE37               	btfsc	(xtoa@i+1)^0,7,c
 10042   0048FA  EF88  F024         	goto	u12091
 10043   0048FE  5037               	movf	(xtoa@i+1)^0,w,c
 10044   004900  E109               	bnz	u12090
 10045   004902  0E02               	movlw	2
 10046   004904  5C36               	subwf	xtoa@i^0,w,c
 10047   004906  A0D8               	btfss	status,0,c
 10048   004908  EF88  F024         	goto	u12091
 10049   00490C  EF8A  F024         	goto	u12090
 10050   004910                     u12091:
 10051   004910  EFBB  F024         	goto	l1492
 10052   004914                     u12090:
 10053   004914  501C               	movf	xtoa@d^0,w,c
 10054   004916  101D               	iorwf	(xtoa@d+1)^0,w,c
 10055   004918  101E               	iorwf	(xtoa@d+2)^0,w,c
 10056   00491A  101F               	iorwf	(xtoa@d+3)^0,w,c
 10057   00491C  1020               	iorwf	(xtoa@d+4)^0,w,c
 10058   00491E  1021               	iorwf	(xtoa@d+5)^0,w,c
 10059   004920  1022               	iorwf	(xtoa@d+6)^0,w,c
 10060   004922  1023               	iorwf	(xtoa@d+7)^0,w,c
 10061   004924  A4D8               	btfss	status,2,c
 10062   004926  EF97  F024         	goto	u12101
 10063   00492A  EF99  F024         	goto	u12100
 10064   00492E                     u12101:
 10065   00492E  EF2A  F024         	goto	l9798
 10066   004932                     u12100:
 10067   004932  BE31               	btfsc	(xtoa@p+1)^0,7,c
 10068   004934  EFA6  F024         	goto	u12110
 10069   004938  5031               	movf	(xtoa@p+1)^0,w,c
 10070   00493A  E106               	bnz	u12111
 10071   00493C  0430               	decf	xtoa@p^0,w,c
 10072   00493E  B0D8               	btfsc	status,0,c
 10073   004940  EFA4  F024         	goto	u12111
 10074   004944  EFA6  F024         	goto	u12110
 10075   004948                     u12111:
 10076   004948  EF2A  F024         	goto	l9798
 10077   00494C                     u12110:
 10078   00494C  BE34               	btfsc	(xtoa@w+1)^0,7,c
 10079   00494E  EFB1  F024         	goto	u12121
 10080   004952  5034               	movf	(xtoa@w+1)^0,w,c
 10081   004954  E108               	bnz	u12120
 10082   004956  0433               	decf	xtoa@w^0,w,c
 10083   004958  A0D8               	btfss	status,0,c
 10084   00495A  EFB1  F024         	goto	u12121
 10085   00495E  EFB3  F024         	goto	u12120
 10086   004962                     u12121:
 10087   004962  EFBB  F024         	goto	l1492
 10088   004966                     u12120:
 10089   004966  0101               	movlb	1	; () banked
 10090   004968  B3B0               	btfsc	_flags& (0+255),1,b
 10091   00496A  EFB9  F024         	goto	u12131
 10092   00496E  EFBB  F024         	goto	u12130
 10093   004972                     u12131:
 10094   004972  EF2A  F024         	goto	l9798
 10095   004976                     u12130:
 10096   004976                     l1492:
 10097                           
 10098                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1133:     if ((fl
      +                          ags & (1 << 4)) && d_nonzero
 10099   004976  0101               	movlb	1	; () banked
 10100   004978  A9B0               	btfss	_flags& (0+255),4,b
 10101   00497A  EFC1  F024         	goto	u12141
 10102   00497E  EFC3  F024         	goto	u12140
 10103   004982                     u12141:
 10104   004982  EFEA  F024         	goto	l9836
 10105   004986                     u12140:
 10106   004986                     
 10107                           ; BSR set to: 1
 10108   004986  5032               	movf	xtoa@d_nonzero^0,w,c
 10109   004988  B4D8               	btfsc	status,2,c
 10110   00498A  EFC9  F024         	goto	u12151
 10111   00498E  EFCB  F024         	goto	u12150
 10112   004992                     u12151:
 10113   004992  EFEA  F024         	goto	l9836
 10114   004996                     u12150:
 10115   004996                     
 10116                           ; BSR set to: 1
 10117   004996  51AC               	movf	_prec& (0+255),w,b
 10118   004998  11AD               	iorwf	(_prec+1)& (0+255),w,b
 10119   00499A  B4D8               	btfsc	status,2,c
 10120   00499C  EFD2  F024         	goto	u12161
 10121   0049A0  EFD4  F024         	goto	u12160
 10122   0049A4                     u12161:
 10123   0049A4  EFEA  F024         	goto	l9836
 10124   0049A8                     u12160:
 10125   0049A8                     
 10126                           ; BSR set to: 1
 10127                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1137:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1138:         --i;
 10128   0049A8  0636               	decf	xtoa@i^0,f,c
 10129   0049AA  A0D8               	btfss	status,0,c
 10130   0049AC  0637               	decf	(xtoa@i+1)^0,f,c
 10131   0049AE                     
 10132                           ; BSR set to: 1
 10133                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1140:         dbu
      +                          f[i] = x;
 10134   0049AE  0E20               	movlw	low _dbuf
 10135   0049B0  2436               	addwf	xtoa@i^0,w,c
 10136   0049B2  6ED9               	movwf	fsr2l,c
 10137   0049B4  0E03               	movlw	high _dbuf
 10138   0049B6  2037               	addwfc	(xtoa@i+1)^0,w,c
 10139   0049B8  6EDA               	movwf	fsr2h,c
 10140   0049BA  C024  FFDF         	movff	xtoa@x,indf2
 10141   0049BE                     
 10142                           ; BSR set to: 1
 10143                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1146:         --i
      +                          ;
 10144   0049BE  0636               	decf	xtoa@i^0,f,c
 10145   0049C0  A0D8               	btfss	status,0,c
 10146   0049C2  0637               	decf	(xtoa@i+1)^0,f,c
 10147                           
 10148                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1147:         dbu
      +                          f[i] = '0';
 10149   0049C4  0E20               	movlw	low _dbuf
 10150   0049C6  2436               	addwf	xtoa@i^0,w,c
 10151   0049C8  6ED9               	movwf	fsr2l,c
 10152   0049CA  0E03               	movlw	high _dbuf
 10153   0049CC  2037               	addwfc	(xtoa@i+1)^0,w,c
 10154   0049CE  6EDA               	movwf	fsr2h,c
 10155   0049D0  0E30               	movlw	48
 10156   0049D2  6EDF               	movwf	indf2,c
 10157   0049D4                     l9836:
 10158                           
 10159                           ; BSR set to: 1
 10160                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (int) pad(fp, &dbuf[i], w);
 10161   0049D4  C01A  F011         	movff	xtoa@fp,pad@fp
 10162   0049D8  C01B  F012         	movff	xtoa@fp+1,pad@fp+1
 10163   0049DC  0E20               	movlw	low _dbuf
 10164   0049DE  2436               	addwf	xtoa@i^0,w,c
 10165   0049E0  6E13               	movwf	pad@buf^0,c
 10166   0049E2  0E03               	movlw	high _dbuf
 10167   0049E4  2037               	addwfc	(xtoa@i+1)^0,w,c
 10168   0049E6  6E14               	movwf	(pad@buf+1)^0,c
 10169   0049E8  C033  F015         	movff	xtoa@w,pad@p
 10170   0049EC  C034  F016         	movff	xtoa@w+1,pad@p+1
 10171   0049F0  EC0E  F037         	call	_pad	;wreg free
 10172   0049F4  C011  F01A         	movff	?_pad,?_xtoa
 10173   0049F8  C012  F01B         	movff	?_pad+1,?_xtoa+1
 10174   0049FC  0012               	return		;funcret
 10175   0049FE                     __end_of_xtoa:
 10176                           	callstack 0
 10177                           
 10178 ;; *************** function _utoa *****************
 10179 ;; Defined at:
 10180 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 10181 ;; Parameters:    Size  Location     Type
 10182 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 10183 ;;		 -> vsnprintf@f(12), 
 10184 ;;  d               8   27[COMRAM] unsigned long long 
 10185 ;; Auto vars:     Size  Location     Type
 10186 ;;  i               2   47[COMRAM] int 
 10187 ;;  w               2   45[COMRAM] int 
 10188 ;;  p               2   43[COMRAM] int 
 10189 ;; Return value:  Size  Location     Type
 10190 ;;                  2   25[COMRAM] int 
 10191 ;; Registers used:
 10192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10193 ;; Tracked objects:
 10194 ;;		On entry : 0/0
 10195 ;;		On exit  : 0/0
 10196 ;;		Unchanged: 0/0
 10197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10198 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10199 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10200 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10201 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10202 ;;Total ram usage:       24 bytes
 10203 ;; Hardware stack levels used: 1
 10204 ;; Hardware stack levels required when called: 5
 10205 ;; This function calls:
 10206 ;;		___lodiv
 10207 ;;		___lomod
 10208 ;;		_pad
 10209 ;; This function is called by:
 10210 ;;		_vfpfcnvrt
 10211 ;; This function uses a non-reentrant model
 10212 ;;
 10213                           
 10214                           	psect	text35
 10215   005094                     __ptext35:
 10216                           	callstack 0
 10217   005094                     _utoa:
 10218                           	callstack 19
 10219   005094                     
 10220                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1001: static int 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c
      +                          : 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt
      +                          .c: 1005:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 
      +                          1013:     if (!(prec < 0)) {
 10221   005094  0101               	movlb	1	; () banked
 10222   005096  BFAD               	btfsc	(_prec+1)& (0+255),7,b
 10223   005098  EF50  F028         	goto	u11931
 10224   00509C  EF52  F028         	goto	u11930
 10225   0050A0                     u11931:
 10226   0050A0  EF53  F028         	goto	l9740
 10227   0050A4                     u11930:
 10228   0050A4                     
 10229                           ; BSR set to: 1
 10230                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1014:         fla
      +                          gs &= ~(1 << 1);
 10231   0050A4  93B0               	bcf	_flags& (0+255),1,b
 10232   0050A6                     l9740:
 10233                           
 10234                           ; BSR set to: 1
 10235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1017:     p = (0 
      +                          <= prec) ? prec : 1;
 10236   0050A6  BFAD               	btfsc	(_prec+1)& (0+255),7,b
 10237   0050A8  EF5A  F028         	goto	u11940
 10238   0050AC  EF58  F028         	goto	u11941
 10239   0050B0                     u11941:
 10240   0050B0  EF60  F028         	goto	l1461
 10241   0050B4                     u11940:
 10242   0050B4                     
 10243                           ; BSR set to: 1
 10244   0050B4  0E00               	movlw	0
 10245   0050B6  6E2D               	movwf	(utoa@p+1)^0,c
 10246   0050B8  0E01               	movlw	1
 10247   0050BA  6E2C               	movwf	utoa@p^0,c
 10248   0050BC  EF64  F028         	goto	l1463
 10249   0050C0                     l1461:
 10250                           
 10251                           ; BSR set to: 1
 10252   0050C0  C1AC  F02C         	movff	_prec,utoa@p
 10253   0050C4  C1AD  F02D         	movff	_prec+1,utoa@p+1
 10254   0050C8                     l1463:
 10255                           
 10256                           ; BSR set to: 1
 10257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
 10258   0050C8  C1AA  F02E         	movff	_width,utoa@w
 10259   0050CC  C1AB  F02F         	movff	_width+1,utoa@w+1
 10260   0050D0                     
 10261                           ; BSR set to: 1
 10262                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
 10263   0050D0  0E00               	movlw	0
 10264   0050D2  6E31               	movwf	(utoa@i+1)^0,c
 10265   0050D4  0E4F               	movlw	79
 10266   0050D6  6E30               	movwf	utoa@i^0,c
 10267   0050D8                     
 10268                           ; BSR set to: 1
 10269                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
 10270   0050D8  0E00               	movlw	0
 10271   0050DA  0103               	movlb	3	; () banked
 10272   0050DC  6F6F               	movwf	(_dbuf+79)& (0+255),b
 10273                           
 10274                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10275   0050DE  EFE7  F028         	goto	l9758
 10276   0050E2                     l9748:
 10277                           
 10278                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1034:         --i;
 10279   0050E2  0630               	decf	utoa@i^0,f,c
 10280   0050E4  A0D8               	btfss	status,0,c
 10281   0050E6  0631               	decf	(utoa@i+1)^0,f,c
 10282   0050E8                     
 10283                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
 10284   0050E8  0E20               	movlw	low _dbuf
 10285   0050EA  2430               	addwf	utoa@i^0,w,c
 10286   0050EC  6ED9               	movwf	fsr2l,c
 10287   0050EE  0E03               	movlw	high _dbuf
 10288   0050F0  2031               	addwfc	(utoa@i+1)^0,w,c
 10289   0050F2  6EDA               	movwf	fsr2h,c
 10290   0050F4  C01C  F001         	movff	utoa@d,___lomod@dividend
 10291   0050F8  C01D  F002         	movff	utoa@d+1,___lomod@dividend+1
 10292   0050FC  C01E  F003         	movff	utoa@d+2,___lomod@dividend+2
 10293   005100  C01F  F004         	movff	utoa@d+3,___lomod@dividend+3
 10294   005104  C020  F005         	movff	utoa@d+4,___lomod@dividend+4
 10295   005108  C021  F006         	movff	utoa@d+5,___lomod@dividend+5
 10296   00510C  C022  F007         	movff	utoa@d+6,___lomod@dividend+6
 10297   005110  C023  F008         	movff	utoa@d+7,___lomod@dividend+7
 10298   005114  0E0A               	movlw	10
 10299   005116  6E09               	movwf	___lomod@divisor^0,c
 10300   005118  0E00               	movlw	0
 10301   00511A  6E0A               	movwf	(___lomod@divisor+1)^0,c
 10302   00511C  0E00               	movlw	0
 10303   00511E  6E0B               	movwf	(___lomod@divisor+2)^0,c
 10304   005120  0E00               	movlw	0
 10305   005122  6E0C               	movwf	(___lomod@divisor+3)^0,c
 10306   005124  0E00               	movlw	0
 10307   005126  6E0D               	movwf	(___lomod@divisor+4)^0,c
 10308   005128  0E00               	movlw	0
 10309   00512A  6E0E               	movwf	(___lomod@divisor+5)^0,c
 10310   00512C  0E00               	movlw	0
 10311   00512E  6E0F               	movwf	(___lomod@divisor+6)^0,c
 10312   005130  0E00               	movlw	0
 10313   005132  6E10               	movwf	(___lomod@divisor+7)^0,c
 10314   005134  EC81  F035         	call	___lomod	;wreg free
 10315   005138  C001  F024         	movff	?___lomod,??_utoa
 10316   00513C  C002  F025         	movff	?___lomod+1,??_utoa+1
 10317   005140  C003  F026         	movff	?___lomod+2,??_utoa+2
 10318   005144  C004  F027         	movff	?___lomod+3,??_utoa+3
 10319   005148  C005  F028         	movff	?___lomod+4,??_utoa+4
 10320   00514C  C006  F029         	movff	?___lomod+5,??_utoa+5
 10321   005150  C007  F02A         	movff	?___lomod+6,??_utoa+6
 10322   005154  C008  F02B         	movff	?___lomod+7,??_utoa+7
 10323   005158  5024               	movf	??_utoa^0,w,c
 10324   00515A  0F30               	addlw	48
 10325   00515C  6EDF               	movwf	indf2,c
 10326   00515E                     
 10327                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1037:         --p
      +                          ;
 10328   00515E  062C               	decf	utoa@p^0,f,c
 10329   005160  A0D8               	btfss	status,0,c
 10330   005162  062D               	decf	(utoa@p+1)^0,f,c
 10331   005164                     
 10332                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
 10333   005164  062E               	decf	utoa@w^0,f,c
 10334   005166  A0D8               	btfss	status,0,c
 10335   005168  062F               	decf	(utoa@w+1)^0,f,c
 10336   00516A                     
 10337                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
 10338   00516A  C01C  F001         	movff	utoa@d,___lodiv@dividend
 10339   00516E  C01D  F002         	movff	utoa@d+1,___lodiv@dividend+1
 10340   005172  C01E  F003         	movff	utoa@d+2,___lodiv@dividend+2
 10341   005176  C01F  F004         	movff	utoa@d+3,___lodiv@dividend+3
 10342   00517A  C020  F005         	movff	utoa@d+4,___lodiv@dividend+4
 10343   00517E  C021  F006         	movff	utoa@d+5,___lodiv@dividend+5
 10344   005182  C022  F007         	movff	utoa@d+6,___lodiv@dividend+6
 10345   005186  C023  F008         	movff	utoa@d+7,___lodiv@dividend+7
 10346   00518A  0E0A               	movlw	10
 10347   00518C  6E09               	movwf	___lodiv@divisor^0,c
 10348   00518E  0E00               	movlw	0
 10349   005190  6E0A               	movwf	(___lodiv@divisor+1)^0,c
 10350   005192  0E00               	movlw	0
 10351   005194  6E0B               	movwf	(___lodiv@divisor+2)^0,c
 10352   005196  0E00               	movlw	0
 10353   005198  6E0C               	movwf	(___lodiv@divisor+3)^0,c
 10354   00519A  0E00               	movlw	0
 10355   00519C  6E0D               	movwf	(___lodiv@divisor+4)^0,c
 10356   00519E  0E00               	movlw	0
 10357   0051A0  6E0E               	movwf	(___lodiv@divisor+5)^0,c
 10358   0051A2  0E00               	movlw	0
 10359   0051A4  6E0F               	movwf	(___lodiv@divisor+6)^0,c
 10360   0051A6  0E00               	movlw	0
 10361   0051A8  6E10               	movwf	(___lodiv@divisor+7)^0,c
 10362   0051AA  EC9D  F034         	call	___lodiv	;wreg free
 10363   0051AE  C001  F01C         	movff	?___lodiv,utoa@d
 10364   0051B2  C002  F01D         	movff	?___lodiv+1,utoa@d+1
 10365   0051B6  C003  F01E         	movff	?___lodiv+2,utoa@d+2
 10366   0051BA  C004  F01F         	movff	?___lodiv+3,utoa@d+3
 10367   0051BE  C005  F020         	movff	?___lodiv+4,utoa@d+4
 10368   0051C2  C006  F021         	movff	?___lodiv+5,utoa@d+5
 10369   0051C6  C007  F022         	movff	?___lodiv+6,utoa@d+6
 10370   0051CA  C008  F023         	movff	?___lodiv+7,utoa@d+7
 10371   0051CE                     l9758:
 10372                           
 10373                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
 10374   0051CE  5030               	movf	utoa@i^0,w,c
 10375   0051D0  1031               	iorwf	(utoa@i+1)^0,w,c
 10376   0051D2  B4D8               	btfsc	status,2,c
 10377   0051D4  EFEE  F028         	goto	u11951
 10378   0051D8  EFF0  F028         	goto	u11950
 10379   0051DC                     u11951:
 10380   0051DC  EF21  F029         	goto	l9768
 10381   0051E0                     u11950:
 10382   0051E0  501C               	movf	utoa@d^0,w,c
 10383   0051E2  101D               	iorwf	(utoa@d+1)^0,w,c
 10384   0051E4  101E               	iorwf	(utoa@d+2)^0,w,c
 10385   0051E6  101F               	iorwf	(utoa@d+3)^0,w,c
 10386   0051E8  1020               	iorwf	(utoa@d+4)^0,w,c
 10387   0051EA  1021               	iorwf	(utoa@d+5)^0,w,c
 10388   0051EC  1022               	iorwf	(utoa@d+6)^0,w,c
 10389   0051EE  1023               	iorwf	(utoa@d+7)^0,w,c
 10390   0051F0  A4D8               	btfss	status,2,c
 10391   0051F2  EFFD  F028         	goto	u11961
 10392   0051F6  EFFF  F028         	goto	u11960
 10393   0051FA                     u11961:
 10394   0051FA  EF71  F028         	goto	l9748
 10395   0051FE                     u11960:
 10396   0051FE  BE2D               	btfsc	(utoa@p+1)^0,7,c
 10397   005200  EF0C  F029         	goto	u11970
 10398   005204  502D               	movf	(utoa@p+1)^0,w,c
 10399   005206  E106               	bnz	u11971
 10400   005208  042C               	decf	utoa@p^0,w,c
 10401   00520A  B0D8               	btfsc	status,0,c
 10402   00520C  EF0A  F029         	goto	u11971
 10403   005210  EF0C  F029         	goto	u11970
 10404   005214                     u11971:
 10405   005214  EF71  F028         	goto	l9748
 10406   005218                     u11970:
 10407   005218  BE2F               	btfsc	(utoa@w+1)^0,7,c
 10408   00521A  EF17  F029         	goto	u11981
 10409   00521E  502F               	movf	(utoa@w+1)^0,w,c
 10410   005220  E108               	bnz	u11980
 10411   005222  042E               	decf	utoa@w^0,w,c
 10412   005224  A0D8               	btfss	status,0,c
 10413   005226  EF17  F029         	goto	u11981
 10414   00522A  EF19  F029         	goto	u11980
 10415   00522E                     u11981:
 10416   00522E  EF21  F029         	goto	l9768
 10417   005232                     u11980:
 10418   005232  0101               	movlb	1	; () banked
 10419   005234  B3B0               	btfsc	_flags& (0+255),1,b
 10420   005236  EF1F  F029         	goto	u11991
 10421   00523A  EF21  F029         	goto	u11990
 10422   00523E                     u11991:
 10423   00523E  EF71  F028         	goto	l9748
 10424   005242                     u11990:
 10425   005242                     l9768:
 10426                           
 10427                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (int) pad(fp, &dbuf[i], w);
 10428   005242  C01A  F011         	movff	utoa@fp,pad@fp
 10429   005246  C01B  F012         	movff	utoa@fp+1,pad@fp+1
 10430   00524A  0E20               	movlw	low _dbuf
 10431   00524C  2430               	addwf	utoa@i^0,w,c
 10432   00524E  6E13               	movwf	pad@buf^0,c
 10433   005250  0E03               	movlw	high _dbuf
 10434   005252  2031               	addwfc	(utoa@i+1)^0,w,c
 10435   005254  6E14               	movwf	(pad@buf+1)^0,c
 10436   005256  C02E  F015         	movff	utoa@w,pad@p
 10437   00525A  C02F  F016         	movff	utoa@w+1,pad@p+1
 10438   00525E  EC0E  F037         	call	_pad	;wreg free
 10439   005262  C011  F01A         	movff	?_pad,?_utoa
 10440   005266  C012  F01B         	movff	?_pad+1,?_utoa+1
 10441   00526A  0012               	return		;funcret
 10442   00526C                     __end_of_utoa:
 10443                           	callstack 0
 10444                           
 10445 ;; *************** function ___lomod *****************
 10446 ;; Defined at:
 10447 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lomod.c"
 10448 ;; Parameters:    Size  Location     Type
 10449 ;;  dividend        8    0[COMRAM] unsigned long long 
 10450 ;;  divisor         8    8[COMRAM] unsigned long long 
 10451 ;; Auto vars:     Size  Location     Type
 10452 ;;  counter         1   16[COMRAM] unsigned char 
 10453 ;; Return value:  Size  Location     Type
 10454 ;;                  8    0[COMRAM] unsigned long long 
 10455 ;; Registers used:
 10456 ;;		wreg, status,2, status,0
 10457 ;; Tracked objects:
 10458 ;;		On entry : 0/0
 10459 ;;		On exit  : 0/0
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10462 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10465 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10466 ;;Total ram usage:       17 bytes
 10467 ;; Hardware stack levels used: 1
 10468 ;; Hardware stack levels required when called: 1
 10469 ;; This function calls:
 10470 ;;		Nothing
 10471 ;; This function is called by:
 10472 ;;		_utoa
 10473 ;; This function uses a non-reentrant model
 10474 ;;
 10475                           
 10476                           	psect	text36
 10477   006B02                     __ptext36:
 10478                           	callstack 0
 10479   006B02                     ___lomod:
 10480                           	callstack 22
 10481   006B02  5009               	movf	___lomod@divisor^0,w,c
 10482   006B04  100A               	iorwf	(___lomod@divisor+1)^0,w,c
 10483   006B06  100B               	iorwf	(___lomod@divisor+2)^0,w,c
 10484   006B08  100C               	iorwf	(___lomod@divisor+3)^0,w,c
 10485   006B0A  100D               	iorwf	(___lomod@divisor+4)^0,w,c
 10486   006B0C  100E               	iorwf	(___lomod@divisor+5)^0,w,c
 10487   006B0E  100F               	iorwf	(___lomod@divisor+6)^0,w,c
 10488   006B10  1010               	iorwf	(___lomod@divisor+7)^0,w,c
 10489   006B12  B4D8               	btfsc	status,2,c
 10490   006B14  EF8E  F035         	goto	u6071
 10491   006B18  EF90  F035         	goto	u6070
 10492   006B1C                     u6071:
 10493   006B1C  EFD8  F035         	goto	l904
 10494   006B20                     u6070:
 10495   006B20  0E01               	movlw	1
 10496   006B22  6E11               	movwf	___lomod@counter^0,c
 10497   006B24  EF9E  F035         	goto	l5942
 10498   006B28                     l5940:
 10499   006B28  90D8               	bcf	status,0,c
 10500   006B2A  3609               	rlcf	___lomod@divisor^0,f,c
 10501   006B2C  360A               	rlcf	(___lomod@divisor+1)^0,f,c
 10502   006B2E  360B               	rlcf	(___lomod@divisor+2)^0,f,c
 10503   006B30  360C               	rlcf	(___lomod@divisor+3)^0,f,c
 10504   006B32  360D               	rlcf	(___lomod@divisor+4)^0,f,c
 10505   006B34  360E               	rlcf	(___lomod@divisor+5)^0,f,c
 10506   006B36  360F               	rlcf	(___lomod@divisor+6)^0,f,c
 10507   006B38  3610               	rlcf	(___lomod@divisor+7)^0,f,c
 10508   006B3A  2A11               	incf	___lomod@counter^0,f,c
 10509   006B3C                     l5942:
 10510   006B3C  AE10               	btfss	(___lomod@divisor+7)^0,7,c
 10511   006B3E  EFA3  F035         	goto	u6081
 10512   006B42  EFA5  F035         	goto	u6080
 10513   006B46                     u6081:
 10514   006B46  EF94  F035         	goto	l5940
 10515   006B4A                     u6080:
 10516   006B4A                     l5944:
 10517   006B4A  5009               	movf	___lomod@divisor^0,w,c
 10518   006B4C  5C01               	subwf	___lomod@dividend^0,w,c
 10519   006B4E  500A               	movf	(___lomod@divisor+1)^0,w,c
 10520   006B50  5802               	subwfb	(___lomod@dividend+1)^0,w,c
 10521   006B52  500B               	movf	(___lomod@divisor+2)^0,w,c
 10522   006B54  5803               	subwfb	(___lomod@dividend+2)^0,w,c
 10523   006B56  500C               	movf	(___lomod@divisor+3)^0,w,c
 10524   006B58  5804               	subwfb	(___lomod@dividend+3)^0,w,c
 10525   006B5A  500D               	movf	(___lomod@divisor+4)^0,w,c
 10526   006B5C  5805               	subwfb	(___lomod@dividend+4)^0,w,c
 10527   006B5E  500E               	movf	(___lomod@divisor+5)^0,w,c
 10528   006B60  5806               	subwfb	(___lomod@dividend+5)^0,w,c
 10529   006B62  500F               	movf	(___lomod@divisor+6)^0,w,c
 10530   006B64  5807               	subwfb	(___lomod@dividend+6)^0,w,c
 10531   006B66  5010               	movf	(___lomod@divisor+7)^0,w,c
 10532   006B68  5808               	subwfb	(___lomod@dividend+7)^0,w,c
 10533   006B6A  A0D8               	btfss	status,0,c
 10534   006B6C  EFBA  F035         	goto	u6091
 10535   006B70  EFBC  F035         	goto	u6090
 10536   006B74                     u6091:
 10537   006B74  EFCC  F035         	goto	l5948
 10538   006B78                     u6090:
 10539   006B78  5009               	movf	___lomod@divisor^0,w,c
 10540   006B7A  5E01               	subwf	___lomod@dividend^0,f,c
 10541   006B7C  500A               	movf	(___lomod@divisor+1)^0,w,c
 10542   006B7E  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
 10543   006B80  500B               	movf	(___lomod@divisor+2)^0,w,c
 10544   006B82  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
 10545   006B84  500C               	movf	(___lomod@divisor+3)^0,w,c
 10546   006B86  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
 10547   006B88  500D               	movf	(___lomod@divisor+4)^0,w,c
 10548   006B8A  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
 10549   006B8C  500E               	movf	(___lomod@divisor+5)^0,w,c
 10550   006B8E  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
 10551   006B90  500F               	movf	(___lomod@divisor+6)^0,w,c
 10552   006B92  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
 10553   006B94  5010               	movf	(___lomod@divisor+7)^0,w,c
 10554   006B96  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
 10555   006B98                     l5948:
 10556   006B98  90D8               	bcf	status,0,c
 10557   006B9A  3210               	rrcf	(___lomod@divisor+7)^0,f,c
 10558   006B9C  320F               	rrcf	(___lomod@divisor+6)^0,f,c
 10559   006B9E  320E               	rrcf	(___lomod@divisor+5)^0,f,c
 10560   006BA0  320D               	rrcf	(___lomod@divisor+4)^0,f,c
 10561   006BA2  320C               	rrcf	(___lomod@divisor+3)^0,f,c
 10562   006BA4  320B               	rrcf	(___lomod@divisor+2)^0,f,c
 10563   006BA6  320A               	rrcf	(___lomod@divisor+1)^0,f,c
 10564   006BA8  3209               	rrcf	___lomod@divisor^0,f,c
 10565   006BAA  2E11               	decfsz	___lomod@counter^0,f,c
 10566   006BAC  EFA5  F035         	goto	l5944
 10567   006BB0                     l904:
 10568   006BB0  C001  F001         	movff	___lomod@dividend,?___lomod
 10569   006BB4  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
 10570   006BB8  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
 10571   006BBC  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
 10572   006BC0  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
 10573   006BC4  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
 10574   006BC8  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
 10575   006BCC  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
 10576   006BD0  0012               	return		;funcret
 10577   006BD2                     __end_of___lomod:
 10578                           	callstack 0
 10579                           
 10580 ;; *************** function ___lodiv *****************
 10581 ;; Defined at:
 10582 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lodiv.c"
 10583 ;; Parameters:    Size  Location     Type
 10584 ;;  dividend        8    0[COMRAM] unsigned long long 
 10585 ;;  divisor         8    8[COMRAM] unsigned long long 
 10586 ;; Auto vars:     Size  Location     Type
 10587 ;;  quotient        8   16[COMRAM] unsigned long long 
 10588 ;;  counter         1   24[COMRAM] unsigned char 
 10589 ;; Return value:  Size  Location     Type
 10590 ;;                  8    0[COMRAM] unsigned long long 
 10591 ;; Registers used:
 10592 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10593 ;; Tracked objects:
 10594 ;;		On entry : 0/0
 10595 ;;		On exit  : 0/0
 10596 ;;		Unchanged: 0/0
 10597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10598 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10599 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10601 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10602 ;;Total ram usage:       25 bytes
 10603 ;; Hardware stack levels used: 1
 10604 ;; Hardware stack levels required when called: 1
 10605 ;; This function calls:
 10606 ;;		Nothing
 10607 ;; This function is called by:
 10608 ;;		_utoa
 10609 ;; This function uses a non-reentrant model
 10610 ;;
 10611                           
 10612                           	psect	text37
 10613   00693A                     __ptext37:
 10614                           	callstack 0
 10615   00693A                     ___lodiv:
 10616                           	callstack 22
 10617   00693A  EE20  F011         	lfsr	2,___lodiv@quotient
 10618   00693E  0E07               	movlw	7
 10619   006940                     u6031:
 10620   006940  6ADE               	clrf	postinc2,c
 10621   006942  06E8               	decf	wreg,f,c
 10622   006944  E2FD               	bc	u6031
 10623   006946  5009               	movf	___lodiv@divisor^0,w,c
 10624   006948  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
 10625   00694A  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
 10626   00694C  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
 10627   00694E  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
 10628   006950  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
 10629   006952  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
 10630   006954  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
 10631   006956  B4D8               	btfsc	status,2,c
 10632   006958  EFB0  F034         	goto	u6041
 10633   00695C  EFB2  F034         	goto	u6040
 10634   006960                     u6041:
 10635   006960  EF04  F035         	goto	l894
 10636   006964                     u6040:
 10637   006964  0E01               	movlw	1
 10638   006966  6E19               	movwf	___lodiv@counter^0,c
 10639   006968  EFC0  F034         	goto	l5922
 10640   00696C                     l5920:
 10641   00696C  90D8               	bcf	status,0,c
 10642   00696E  3609               	rlcf	___lodiv@divisor^0,f,c
 10643   006970  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
 10644   006972  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
 10645   006974  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
 10646   006976  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
 10647   006978  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
 10648   00697A  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
 10649   00697C  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
 10650   00697E  2A19               	incf	___lodiv@counter^0,f,c
 10651   006980                     l5922:
 10652   006980  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
 10653   006982  EFC5  F034         	goto	u6051
 10654   006986  EFC7  F034         	goto	u6050
 10655   00698A                     u6051:
 10656   00698A  EFB6  F034         	goto	l5920
 10657   00698E                     u6050:
 10658   00698E                     l5924:
 10659   00698E  90D8               	bcf	status,0,c
 10660   006990  3611               	rlcf	___lodiv@quotient^0,f,c
 10661   006992  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
 10662   006994  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
 10663   006996  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
 10664   006998  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
 10665   00699A  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
 10666   00699C  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
 10667   00699E  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
 10668   0069A0  5009               	movf	___lodiv@divisor^0,w,c
 10669   0069A2  5C01               	subwf	___lodiv@dividend^0,w,c
 10670   0069A4  500A               	movf	(___lodiv@divisor+1)^0,w,c
 10671   0069A6  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
 10672   0069A8  500B               	movf	(___lodiv@divisor+2)^0,w,c
 10673   0069AA  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
 10674   0069AC  500C               	movf	(___lodiv@divisor+3)^0,w,c
 10675   0069AE  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
 10676   0069B0  500D               	movf	(___lodiv@divisor+4)^0,w,c
 10677   0069B2  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
 10678   0069B4  500E               	movf	(___lodiv@divisor+5)^0,w,c
 10679   0069B6  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
 10680   0069B8  500F               	movf	(___lodiv@divisor+6)^0,w,c
 10681   0069BA  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
 10682   0069BC  5010               	movf	(___lodiv@divisor+7)^0,w,c
 10683   0069BE  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
 10684   0069C0  A0D8               	btfss	status,0,c
 10685   0069C2  EFE5  F034         	goto	u6061
 10686   0069C6  EFE7  F034         	goto	u6060
 10687   0069CA                     u6061:
 10688   0069CA  EFF8  F034         	goto	l5932
 10689   0069CE                     u6060:
 10690   0069CE  5009               	movf	___lodiv@divisor^0,w,c
 10691   0069D0  5E01               	subwf	___lodiv@dividend^0,f,c
 10692   0069D2  500A               	movf	(___lodiv@divisor+1)^0,w,c
 10693   0069D4  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
 10694   0069D6  500B               	movf	(___lodiv@divisor+2)^0,w,c
 10695   0069D8  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
 10696   0069DA  500C               	movf	(___lodiv@divisor+3)^0,w,c
 10697   0069DC  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
 10698   0069DE  500D               	movf	(___lodiv@divisor+4)^0,w,c
 10699   0069E0  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
 10700   0069E2  500E               	movf	(___lodiv@divisor+5)^0,w,c
 10701   0069E4  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
 10702   0069E6  500F               	movf	(___lodiv@divisor+6)^0,w,c
 10703   0069E8  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
 10704   0069EA  5010               	movf	(___lodiv@divisor+7)^0,w,c
 10705   0069EC  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
 10706   0069EE  8011               	bsf	___lodiv@quotient^0,0,c
 10707   0069F0                     l5932:
 10708   0069F0  90D8               	bcf	status,0,c
 10709   0069F2  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
 10710   0069F4  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
 10711   0069F6  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
 10712   0069F8  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
 10713   0069FA  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
 10714   0069FC  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
 10715   0069FE  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
 10716   006A00  3209               	rrcf	___lodiv@divisor^0,f,c
 10717   006A02  2E19               	decfsz	___lodiv@counter^0,f,c
 10718   006A04  EFC7  F034         	goto	l5924
 10719   006A08                     l894:
 10720   006A08  C011  F001         	movff	___lodiv@quotient,?___lodiv
 10721   006A0C  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
 10722   006A10  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
 10723   006A14  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
 10724   006A18  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
 10725   006A1C  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
 10726   006A20  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
 10727   006A24  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
 10728   006A28  0012               	return		;funcret
 10729   006A2A                     __end_of___lodiv:
 10730                           	callstack 0
 10731                           
 10732 ;; *************** function _stoa *****************
 10733 ;; Defined at:
 10734 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 10735 ;; Parameters:    Size  Location     Type
 10736 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
 10737 ;;		 -> vsnprintf@f(12), 
 10738 ;;  s               2   11[COMRAM] PTR unsigned char 
 10739 ;;		 -> HR_val(4), ?_UART1_SendFormatted(1), 
 10740 ;; Auto vars:     Size  Location     Type
 10741 ;;  l               2   21[COMRAM] int 
 10742 ;;  cp              2   19[COMRAM] PTR unsigned char 
 10743 ;;		 -> STR_55(7), HR_val(4), ?_UART1_SendFormatted(1), 
 10744 ;;  w               2   17[COMRAM] int 
 10745 ;;  p               2   15[COMRAM] int 
 10746 ;; Return value:  Size  Location     Type
 10747 ;;                  2    9[COMRAM] int 
 10748 ;; Registers used:
 10749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10750 ;; Tracked objects:
 10751 ;;		On entry : 0/0
 10752 ;;		On exit  : 0/0
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10756 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10758 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10759 ;;Total ram usage:       14 bytes
 10760 ;; Hardware stack levels used: 1
 10761 ;; Hardware stack levels required when called: 3
 10762 ;; This function calls:
 10763 ;;		_fputc
 10764 ;; This function is called by:
 10765 ;;		_vfpfcnvrt
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           
 10769                           	psect	text38
 10770   005972                     __ptext38:
 10771                           	callstack 0
 10772   005972                     _stoa:
 10773                           	callstack 21
 10774   005972                     
 10775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 942: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprn
      +                          t.c: 943: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 944:  
      +                             char *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 945: 
      +                              int l, p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 947:
      +                            int w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 951:     
      +                          cp = s;
 10776   005972  C00C  F014         	movff	stoa@s,stoa@cp
 10777   005976  C00D  F015         	movff	stoa@s+1,stoa@cp+1
 10778                           
 10779                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
 10780   00597A  5014               	movf	stoa@cp^0,w,c
 10781   00597C  1015               	iorwf	(stoa@cp+1)^0,w,c
 10782   00597E  A4D8               	btfss	status,2,c
 10783   005980  EFC4  F02C         	goto	u11821
 10784   005984  EFC6  F02C         	goto	u11820
 10785   005988                     u11821:
 10786   005988  EFCA  F02C         	goto	l9702
 10787   00598C                     u11820:
 10788   00598C                     
 10789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
 10790   00598C  0ED2               	movlw	low STR_55
 10791   00598E  6E14               	movwf	stoa@cp^0,c
 10792   005990  0EFF               	movlw	high STR_55
 10793   005992  6E15               	movwf	(stoa@cp+1)^0,c
 10794   005994                     l9702:
 10795                           
 10796                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
 10797   005994  0E00               	movlw	0
 10798   005996  6E17               	movwf	(stoa@l+1)^0,c
 10799   005998  0E00               	movlw	0
 10800   00599A  6E16               	movwf	stoa@l^0,c
 10801   00599C  EFD2  F02C         	goto	l9706
 10802   0059A0                     l9704:
 10803   0059A0  4A16               	infsnz	stoa@l^0,f,c
 10804   0059A2  2A17               	incf	(stoa@l+1)^0,f,c
 10805   0059A4                     l9706:
 10806   0059A4  5016               	movf	stoa@l^0,w,c
 10807   0059A6  2414               	addwf	stoa@cp^0,w,c
 10808   0059A8  6E0E               	movwf	??_stoa^0,c
 10809   0059AA  5017               	movf	(stoa@l+1)^0,w,c
 10810   0059AC  2015               	addwfc	(stoa@cp+1)^0,w,c
 10811   0059AE  6E0F               	movwf	(??_stoa+1)^0,c
 10812   0059B0  C00E  FFF6         	movff	??_stoa,tblptrl
 10813   0059B4  C00F  FFF7         	movff	??_stoa+1,tblptrh
 10814   0059B8  0E00               	movlw	low (__mediumconst shr (0+16))
 10815   0059BA  6EF8               	movwf	tblptru,c
 10816   0059BC  0E0F               	movlw	(high __ramtop+-1)
 10817   0059BE  64F7               	cpfsgt	tblptrh,c
 10818   0059C0  D003               	bra	u11837
 10819   0059C2  0008               	tblrd		*
 10820   0059C4  50F5               	movf	tablat,w,c
 10821   0059C6  D005               	bra	u11830
 10822   0059C8                     u11837:
 10823   0059C8  CFF6 FFE1          	movff	tblptrl,fsr1l
 10824   0059CC  CFF7 FFE2          	movff	tblptrh,fsr1h
 10825   0059D0  50E7               	movf	indf1,w,c
 10826   0059D2                     u11830:
 10827   0059D2  0900               	iorlw	0
 10828   0059D4  A4D8               	btfss	status,2,c
 10829   0059D6  EFEF  F02C         	goto	u11841
 10830   0059DA  EFF1  F02C         	goto	u11840
 10831   0059DE                     u11841:
 10832   0059DE  EFD0  F02C         	goto	l9704
 10833   0059E2                     u11840:
 10834   0059E2                     
 10835                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 961:  if (!(prec 
      +                          < 0) && (prec < l)) {
 10836   0059E2  0101               	movlb	1	; () banked
 10837   0059E4  BFAD               	btfsc	(_prec+1)& (0+255),7,b
 10838   0059E6  EFF7  F02C         	goto	u11851
 10839   0059EA  EFF9  F02C         	goto	u11850
 10840   0059EE                     u11851:
 10841   0059EE  EF0C  F02D         	goto	l1444
 10842   0059F2                     u11850:
 10843   0059F2                     
 10844                           ; BSR set to: 1
 10845   0059F2  5016               	movf	stoa@l^0,w,c
 10846   0059F4  5DAC               	subwf	_prec& (0+255),w,b
 10847   0059F6  51AD               	movf	(_prec+1)& (0+255),w,b
 10848   0059F8  0A80               	xorlw	128
 10849   0059FA  6E0E               	movwf	??_stoa^0,c
 10850   0059FC  5017               	movf	(stoa@l+1)^0,w,c
 10851   0059FE  0A80               	xorlw	128
 10852   005A00  580E               	subwfb	??_stoa^0,w,c
 10853   005A02  B0D8               	btfsc	status,0,c
 10854   005A04  EF06  F02D         	goto	u11861
 10855   005A08  EF08  F02D         	goto	u11860
 10856   005A0C                     u11861:
 10857   005A0C  EF0C  F02D         	goto	l1444
 10858   005A10                     u11860:
 10859   005A10                     
 10860                           ; BSR set to: 1
 10861                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 962:   l = prec;
 10862   005A10  C1AC  F016         	movff	_prec,stoa@l
 10863   005A14  C1AD  F017         	movff	_prec+1,stoa@l+1
 10864   005A18                     l1444:
 10865                           
 10866                           ; BSR set to: 1
 10867                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 965:     p = l;
 10868   005A18  C016  F010         	movff	stoa@l,stoa@p
 10869   005A1C  C017  F011         	movff	stoa@l+1,stoa@p+1
 10870                           
 10871                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
 10872   005A20  C1AA  F012         	movff	_width,stoa@w
 10873   005A24  C1AB  F013         	movff	_width+1,stoa@w+1
 10874                           
 10875                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
 10876   005A28  B1B0               	btfsc	_flags& (0+255),0,b
 10877   005A2A  EF19  F02D         	goto	u11871
 10878   005A2E  EF1B  F02D         	goto	u11870
 10879   005A32                     u11871:
 10880   005A32  EF57  F02D         	goto	l9726
 10881   005A36                     u11870:
 10882   005A36  EF29  F02D         	goto	l9720
 10883   005A3A                     l9716:
 10884                           
 10885                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
 10886   005A3A  0E00               	movlw	0
 10887   005A3C  6E02               	movwf	(fputc@c+1)^0,c
 10888   005A3E  0E20               	movlw	32
 10889   005A40  6E01               	movwf	fputc@c^0,c
 10890   005A42  C00A  F003         	movff	stoa@fp,fputc@fp
 10891   005A46  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10892   005A4A  ECE9  F035         	call	_fputc	;wreg free
 10893   005A4E                     
 10894                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
 10895   005A4E  4A16               	infsnz	stoa@l^0,f,c
 10896   005A50  2A17               	incf	(stoa@l+1)^0,f,c
 10897   005A52                     l9720:
 10898                           
 10899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
 10900   005A52  5012               	movf	stoa@w^0,w,c
 10901   005A54  5C16               	subwf	stoa@l^0,w,c
 10902   005A56  5017               	movf	(stoa@l+1)^0,w,c
 10903   005A58  0A80               	xorlw	128
 10904   005A5A  6E0E               	movwf	??_stoa^0,c
 10905   005A5C  5013               	movf	(stoa@w+1)^0,w,c
 10906   005A5E  0A80               	xorlw	128
 10907   005A60  580E               	subwfb	??_stoa^0,w,c
 10908   005A62  A0D8               	btfss	status,0,c
 10909   005A64  EF36  F02D         	goto	u11881
 10910   005A68  EF38  F02D         	goto	u11880
 10911   005A6C                     u11881:
 10912   005A6C  EF1D  F02D         	goto	l9716
 10913   005A70                     u11880:
 10914   005A70  EF57  F02D         	goto	l9726
 10915   005A74                     l9722:
 10916                           
 10917                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
 10918   005A74  C014  FFF6         	movff	stoa@cp,tblptrl
 10919   005A78  C015  FFF7         	movff	stoa@cp+1,tblptrh
 10920   005A7C  0E00               	movlw	low (__mediumconst shr (0+16))
 10921   005A7E  6EF8               	movwf	tblptru,c
 10922   005A80  0E0F               	movlw	(high __ramtop+-1)
 10923   005A82  64F7               	cpfsgt	tblptrh,c
 10924   005A84  D003               	bra	u11897
 10925   005A86  0008               	tblrd		*
 10926   005A88  50F5               	movf	tablat,w,c
 10927   005A8A  D005               	bra	u11890
 10928   005A8C                     u11897:
 10929   005A8C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10930   005A90  CFF7 FFE2          	movff	tblptrh,fsr1h
 10931   005A94  50E7               	movf	indf1,w,c
 10932   005A96                     u11890:
 10933   005A96  6E0E               	movwf	??_stoa^0,c
 10934   005A98  500E               	movf	??_stoa^0,w,c
 10935   005A9A  6E01               	movwf	fputc@c^0,c
 10936   005A9C  6A02               	clrf	(fputc@c+1)^0,c
 10937   005A9E  C00A  F003         	movff	stoa@fp,fputc@fp
 10938   005AA2  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10939   005AA6  ECE9  F035         	call	_fputc	;wreg free
 10940   005AAA                     
 10941                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
 10942   005AAA  4A14               	infsnz	stoa@cp^0,f,c
 10943   005AAC  2A15               	incf	(stoa@cp+1)^0,f,c
 10944   005AAE                     l9726:
 10945                           
 10946                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
 10947   005AAE  0610               	decf	stoa@p^0,f,c
 10948   005AB0  A0D8               	btfss	status,0,c
 10949   005AB2  0611               	decf	(stoa@p+1)^0,f,c
 10950   005AB4  2810               	incf	stoa@p^0,w,c
 10951   005AB6  E106               	bnz	u11901
 10952   005AB8  2811               	incf	(stoa@p+1)^0,w,c
 10953   005ABA  A4D8               	btfss	status,2,c
 10954   005ABC  EF62  F02D         	goto	u11901
 10955   005AC0  EF64  F02D         	goto	u11900
 10956   005AC4                     u11901:
 10957   005AC4  EF3A  F02D         	goto	l9722
 10958   005AC8                     u11900:
 10959   005AC8                     
 10960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
 10961   005AC8  0101               	movlb	1	; () banked
 10962   005ACA  A1B0               	btfss	_flags& (0+255),0,b
 10963   005ACC  EF6A  F02D         	goto	u11911
 10964   005AD0  EF6C  F02D         	goto	u11910
 10965   005AD4                     u11911:
 10966   005AD4  EF89  F02D         	goto	l1452
 10967   005AD8                     u11910:
 10968   005AD8  EF7A  F02D         	goto	l9734
 10969   005ADC                     l9730:
 10970                           
 10971                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
 10972   005ADC  0E00               	movlw	0
 10973   005ADE  6E02               	movwf	(fputc@c+1)^0,c
 10974   005AE0  0E20               	movlw	32
 10975   005AE2  6E01               	movwf	fputc@c^0,c
 10976   005AE4  C00A  F003         	movff	stoa@fp,fputc@fp
 10977   005AE8  C00B  F004         	movff	stoa@fp+1,fputc@fp+1
 10978   005AEC  ECE9  F035         	call	_fputc	;wreg free
 10979   005AF0                     
 10980                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
 10981   005AF0  4A16               	infsnz	stoa@l^0,f,c
 10982   005AF2  2A17               	incf	(stoa@l+1)^0,f,c
 10983   005AF4                     l9734:
 10984                           
 10985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
 10986   005AF4  5012               	movf	stoa@w^0,w,c
 10987   005AF6  5C16               	subwf	stoa@l^0,w,c
 10988   005AF8  5017               	movf	(stoa@l+1)^0,w,c
 10989   005AFA  0A80               	xorlw	128
 10990   005AFC  6E0E               	movwf	??_stoa^0,c
 10991   005AFE  5013               	movf	(stoa@w+1)^0,w,c
 10992   005B00  0A80               	xorlw	128
 10993   005B02  580E               	subwfb	??_stoa^0,w,c
 10994   005B04  A0D8               	btfss	status,0,c
 10995   005B06  EF87  F02D         	goto	u11921
 10996   005B0A  EF89  F02D         	goto	u11920
 10997   005B0E                     u11921:
 10998   005B0E  EF6E  F02D         	goto	l9730
 10999   005B12                     u11920:
 11000   005B12                     l1452:
 11001                           
 11002                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 995:     return l
      +                          ;
 11003   005B12  C016  F00A         	movff	stoa@l,?_stoa
 11004   005B16  C017  F00B         	movff	stoa@l+1,?_stoa+1
 11005   005B1A  0012               	return		;funcret
 11006   005B1C                     __end_of_stoa:
 11007                           	callstack 0
 11008                           
 11009 ;; *************** function _read_prec_or_width *****************
 11010 ;; Defined at:
 11011 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 11012 ;; Parameters:    Size  Location     Type
 11013 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
 11014 ;;		 -> vfprintf@cfmt(2), 
 11015 ;;  ap              1    7[COMRAM] PTR PTR void [1]
 11016 ;;		 -> UART1_SendFormatted@args(2), 
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;  c               1   10[COMRAM] unsigned char 
 11019 ;;  n               2   11[COMRAM] int 
 11020 ;; Return value:  Size  Location     Type
 11021 ;;                  2    6[COMRAM] int 
 11022 ;; Registers used:
 11023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11024 ;; Tracked objects:
 11025 ;;		On entry : 0/0
 11026 ;;		On exit  : 0/0
 11027 ;;		Unchanged: 0/0
 11028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11030 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11031 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11032 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11033 ;;Total ram usage:        7 bytes
 11034 ;; Hardware stack levels used: 1
 11035 ;; Hardware stack levels required when called: 2
 11036 ;; This function calls:
 11037 ;;		___wmul
 11038 ;; This function is called by:
 11039 ;;		_vfpfcnvrt
 11040 ;; This function uses a non-reentrant model
 11041 ;;
 11042                           
 11043                           	psect	text39
 11044   006D60                     __ptext39:
 11045                           	callstack 0
 11046   006D60                     _read_prec_or_width:
 11047                           	callstack 22
 11048   006D60                     
 11049                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
 11050   006D60  0E00               	movlw	0
 11051   006D62  6E0D               	movwf	(read_prec_or_width@n+1)^0,c
 11052   006D64  0E00               	movlw	0
 11053   006D66  6E0C               	movwf	read_prec_or_width@n^0,c
 11054   006D68                     
 11055                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
 11056   006D68  5007               	movf	read_prec_or_width@fmt^0,w,c
 11057   006D6A  6ED9               	movwf	fsr2l,c
 11058   006D6C  6ADA               	clrf	fsr2h,c
 11059   006D6E  CFDE FFF6          	movff	postinc2,tblptrl
 11060   006D72  CFDD FFF7          	movff	postdec2,tblptrh
 11061   006D76                     	if	0	;tblptru may be non-zero
 11062   006D76                     	endif
 11063   006D76                     	if	0	;tblptru may be non-zero
 11064   006D76                     	endif
 11065   006D76  0008               	tblrd		*
 11066   006D78  50F5               	movf	tablat,w,c
 11067   006D7A  0A2A               	xorlw	42
 11068   006D7C  A4D8               	btfss	status,2,c
 11069   006D7E  EFC3  F036         	goto	u8161
 11070   006D82  EFC5  F036         	goto	u8160
 11071   006D86                     u8161:
 11072   006D86  EFF6  F036         	goto	l7030
 11073   006D8A                     u8160:
 11074   006D8A                     
 11075                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
 11076   006D8A  5007               	movf	read_prec_or_width@fmt^0,w,c
 11077   006D8C  6ED9               	movwf	fsr2l,c
 11078   006D8E  6ADA               	clrf	fsr2h,c
 11079   006D90  2ADE               	incf	postinc2,f,c
 11080   006D92  0E00               	movlw	0
 11081   006D94  22DD               	addwfc	postdec2,f,c
 11082                           
 11083                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
 11084   006D96  5008               	movf	read_prec_or_width@ap^0,w,c
 11085   006D98  6ED9               	movwf	fsr2l,c
 11086   006D9A  6ADA               	clrf	fsr2h,c
 11087   006D9C  CFDF F009          	movff	indf2,??_read_prec_or_width
 11088   006DA0  0E02               	movlw	2
 11089   006DA2  26DE               	addwf	postinc2,f,c
 11090   006DA4  CFDF F00A          	movff	indf2,??_read_prec_or_width+1
 11091   006DA8  0E00               	movlw	0
 11092   006DAA  22DD               	addwfc	postdec2,f,c
 11093   006DAC  C009  FFD9         	movff	??_read_prec_or_width,fsr2l
 11094   006DB0  C00A  FFDA         	movff	??_read_prec_or_width+1,fsr2h
 11095   006DB4  CFDE F00C          	movff	postinc2,read_prec_or_width@n
 11096   006DB8  CFDD F00D          	movff	postdec2,read_prec_or_width@n+1
 11097                           
 11098                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
 11099   006DBC  EF09  F037         	goto	l1498
 11100   006DC0                     l7026:
 11101                           
 11102                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
 11103   006DC0  C00C  F001         	movff	read_prec_or_width@n,___wmul@multiplier
 11104   006DC4  C00D  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
 11105   006DC8  0E00               	movlw	0
 11106   006DCA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 11107   006DCC  0E0A               	movlw	10
 11108   006DCE  6E03               	movwf	___wmul@multiplicand^0,c
 11109   006DD0  EC96  F03C         	call	___wmul	;wreg free
 11110   006DD4  500B               	movf	read_prec_or_width@c^0,w,c
 11111   006DD6  2401               	addwf	?___wmul^0,w,c
 11112   006DD8  6E0C               	movwf	read_prec_or_width@n^0,c
 11113   006DDA  0E00               	movlw	0
 11114   006DDC  2002               	addwfc	(?___wmul+1)^0,w,c
 11115   006DDE  6E0D               	movwf	(read_prec_or_width@n+1)^0,c
 11116   006DE0                     
 11117                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
 11118   006DE0  5007               	movf	read_prec_or_width@fmt^0,w,c
 11119   006DE2  6ED9               	movwf	fsr2l,c
 11120   006DE4  6ADA               	clrf	fsr2h,c
 11121   006DE6  2ADE               	incf	postinc2,f,c
 11122   006DE8  0E00               	movlw	0
 11123   006DEA  22DD               	addwfc	postdec2,f,c
 11124   006DEC                     l7030:
 11125                           
 11126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
 11127   006DEC  5007               	movf	read_prec_or_width@fmt^0,w,c
 11128   006DEE  6ED9               	movwf	fsr2l,c
 11129   006DF0  6ADA               	clrf	fsr2h,c
 11130   006DF2  CFDE FFF6          	movff	postinc2,tblptrl
 11131   006DF6  CFDD FFF7          	movff	postdec2,tblptrh
 11132   006DFA                     	if	0	;tblptru may be non-zero
 11133   006DFA                     	endif
 11134   006DFA                     	if	0	;tblptru may be non-zero
 11135   006DFA                     	endif
 11136   006DFA  0008               	tblrd		*
 11137   006DFC  50F5               	movf	tablat,w,c
 11138   006DFE  0FD0               	addlw	208
 11139   006E00  6E0B               	movwf	read_prec_or_width@c^0,c
 11140   006E02  0E09               	movlw	9
 11141   006E04  640B               	cpfsgt	read_prec_or_width@c^0,c
 11142   006E06  EF07  F037         	goto	u8171
 11143   006E0A  EF09  F037         	goto	u8170
 11144   006E0E                     u8171:
 11145   006E0E  EFE0  F036         	goto	l7026
 11146   006E12                     u8170:
 11147   006E12                     l1498:
 11148                           
 11149                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
 11150   006E12  C00C  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
 11151   006E16  C00D  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
 11152   006E1A  0012               	return		;funcret
 11153   006E1C                     __end_of_read_prec_or_width:
 11154                           	callstack 0
 11155                           
 11156 ;; *************** function ___wmul *****************
 11157 ;; Defined at:
 11158 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;  multiplier      2    0[COMRAM] unsigned int 
 11161 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11162 ;; Auto vars:     Size  Location     Type
 11163 ;;  product         2    4[COMRAM] unsigned int 
 11164 ;; Return value:  Size  Location     Type
 11165 ;;                  2    0[COMRAM] unsigned int 
 11166 ;; Registers used:
 11167 ;;		wreg, status,2, status,0, prodl, prodh
 11168 ;; Tracked objects:
 11169 ;;		On entry : 0/0
 11170 ;;		On exit  : 0/0
 11171 ;;		Unchanged: 0/0
 11172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11176 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11177 ;;Total ram usage:        6 bytes
 11178 ;; Hardware stack levels used: 1
 11179 ;; Hardware stack levels required when called: 1
 11180 ;; This function calls:
 11181 ;;		Nothing
 11182 ;; This function is called by:
 11183 ;;		_read_prec_or_width
 11184 ;; This function uses a non-reentrant model
 11185 ;;
 11186                           
 11187                           	psect	text40
 11188   00792C                     __ptext40:
 11189                           	callstack 0
 11190   00792C                     ___wmul:
 11191                           	callstack 22
 11192   00792C  5001               	movf	___wmul@multiplier^0,w,c
 11193   00792E  0203               	mulwf	___wmul@multiplicand^0,c
 11194   007930  CFF3 F005          	movff	prodl,___wmul@product
 11195   007934  CFF4 F006          	movff	prodh,___wmul@product+1
 11196   007938  5001               	movf	___wmul@multiplier^0,w,c
 11197   00793A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11198   00793C  50F3               	movf	243,w,c
 11199   00793E  2606               	addwf	(___wmul@product+1)^0,f,c
 11200   007940  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11201   007942  0203               	mulwf	___wmul@multiplicand^0,c
 11202   007944  50F3               	movf	243,w,c
 11203   007946  2606               	addwf	(___wmul@product+1)^0,f,c
 11204   007948  C005  F001         	movff	___wmul@product,?___wmul
 11205   00794C  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11206   007950  0012               	return		;funcret
 11207   007952                     __end_of___wmul:
 11208                           	callstack 0
 11209                           
 11210 ;; *************** function _otoa *****************
 11211 ;; Defined at:
 11212 ;;		line 872 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 11213 ;; Parameters:    Size  Location     Type
 11214 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
 11215 ;;		 -> vsnprintf@f(12), 
 11216 ;;  d               8   27[COMRAM] unsigned long long 
 11217 ;; Auto vars:     Size  Location     Type
 11218 ;;  i               2   48[COMRAM] int 
 11219 ;;  w               2   46[COMRAM] int 
 11220 ;;  p               2   43[COMRAM] int 
 11221 ;;  t               1   45[COMRAM] unsigned char 
 11222 ;; Return value:  Size  Location     Type
 11223 ;;                  2   25[COMRAM] int 
 11224 ;; Registers used:
 11225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11226 ;; Tracked objects:
 11227 ;;		On entry : 0/0
 11228 ;;		On exit  : 0/0
 11229 ;;		Unchanged: 0/0
 11230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11231 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11232 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11233 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11234 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11235 ;;Total ram usage:       25 bytes
 11236 ;; Hardware stack levels used: 1
 11237 ;; Hardware stack levels required when called: 5
 11238 ;; This function calls:
 11239 ;;		_pad
 11240 ;; This function is called by:
 11241 ;;		_vfpfcnvrt
 11242 ;; This function uses a non-reentrant model
 11243 ;;
 11244                           
 11245                           	psect	text41
 11246   00543C                     __ptext41:
 11247                           	callstack 0
 11248   00543C                     _otoa:
 11249                           	callstack 19
 11250   00543C                     
 11251                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 872: static int o
      +                          toa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 873: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 
      +                          875:  char t;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 877:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 879
      +                          :  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 887:    
      +                           if (!(prec < 0)) {
 11252   00543C  0101               	movlb	1	; () banked
 11253   00543E  BFAD               	btfsc	(_prec+1)& (0+255),7,b
 11254   005440  EF24  F02A         	goto	u11711
 11255   005444  EF26  F02A         	goto	u11710
 11256   005448                     u11711:
 11257   005448  EF27  F02A         	goto	l9652
 11258   00544C                     u11710:
 11259   00544C                     
 11260                           ; BSR set to: 1
 11261                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 888:         flag
      +                          s &= ~(1 << 1);
 11262   00544C  93B0               	bcf	_flags& (0+255),1,b
 11263   00544E                     l9652:
 11264                           
 11265                           ; BSR set to: 1
 11266                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 891:     p = (0 <
      +                          = prec) ? prec : 1;
 11267   00544E  BFAD               	btfsc	(_prec+1)& (0+255),7,b
 11268   005450  EF2E  F02A         	goto	u11720
 11269   005454  EF2C  F02A         	goto	u11721
 11270   005458                     u11721:
 11271   005458  EF34  F02A         	goto	l1423
 11272   00545C                     u11720:
 11273   00545C                     
 11274                           ; BSR set to: 1
 11275   00545C  0E00               	movlw	0
 11276   00545E  6E2D               	movwf	(otoa@p+1)^0,c
 11277   005460  0E01               	movlw	1
 11278   005462  6E2C               	movwf	otoa@p^0,c
 11279   005464  EF38  F02A         	goto	l1425
 11280   005468                     l1423:
 11281                           
 11282                           ; BSR set to: 1
 11283   005468  C1AC  F02C         	movff	_prec,otoa@p
 11284   00546C  C1AD  F02D         	movff	_prec+1,otoa@p+1
 11285   005470                     l1425:
 11286                           
 11287                           ; BSR set to: 1
 11288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 893:     w = widt
      +                          h;
 11289   005470  C1AA  F02F         	movff	_width,otoa@w
 11290   005474  C1AB  F030         	movff	_width+1,otoa@w+1
 11291   005478                     
 11292                           ; BSR set to: 1
 11293                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 896:     i = size
      +                          of(dbuf) - 1;
 11294   005478  0E00               	movlw	0
 11295   00547A  6E32               	movwf	(otoa@i+1)^0,c
 11296   00547C  0E4F               	movlw	79
 11297   00547E  6E31               	movwf	otoa@i^0,c
 11298   005480                     
 11299                           ; BSR set to: 1
 11300                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 897:     dbuf[i] 
      +                          = '\0';
 11301   005480  0E00               	movlw	0
 11302   005482  0103               	movlb	3	; () banked
 11303   005484  6F6F               	movwf	(_dbuf+79)& (0+255),b
 11304   005486                     
 11305                           ; BSR set to: 3
 11306                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 899:     t = 0;
 11307   005486  0E00               	movlw	0
 11308   005488  6E2E               	movwf	otoa@t^0,c
 11309                           
 11310                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 901:     while (!
      +                          (i < 1) && (d != 0
 11311   00548A  EF8B  F02A         	goto	l9674
 11312   00548E                     l9662:
 11313                           
 11314                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 910:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 911:         --i;
 11315   00548E  0631               	decf	otoa@i^0,f,c
 11316   005490  A0D8               	btfss	status,0,c
 11317   005492  0632               	decf	(otoa@i+1)^0,f,c
 11318   005494                     
 11319                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 913:         t = 
      +                          d & 07;
 11320   005494  501C               	movf	otoa@d^0,w,c
 11321   005496  0B07               	andlw	7
 11322   005498  6E2E               	movwf	otoa@t^0,c
 11323   00549A                     
 11324                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 914:         dbuf
      +                          [i] = (char)((int)'0' + t);
 11325   00549A  0E20               	movlw	low _dbuf
 11326   00549C  2431               	addwf	otoa@i^0,w,c
 11327   00549E  6ED9               	movwf	fsr2l,c
 11328   0054A0  0E03               	movlw	high _dbuf
 11329   0054A2  2032               	addwfc	(otoa@i+1)^0,w,c
 11330   0054A4  6EDA               	movwf	fsr2h,c
 11331   0054A6  502E               	movf	otoa@t^0,w,c
 11332   0054A8  0F30               	addlw	48
 11333   0054AA  6EDF               	movwf	indf2,c
 11334   0054AC                     
 11335                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 919:         --p;
 11336   0054AC  062C               	decf	otoa@p^0,f,c
 11337   0054AE  A0D8               	btfss	status,0,c
 11338   0054B0  062D               	decf	(otoa@p+1)^0,f,c
 11339   0054B2                     
 11340                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 923:         --w;
 11341   0054B2  062F               	decf	otoa@w^0,f,c
 11342   0054B4  A0D8               	btfss	status,0,c
 11343   0054B6  0630               	decf	(otoa@w+1)^0,f,c
 11344   0054B8                     
 11345                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 924:         d = 
      +                          d >> 3;
 11346   0054B8  C01C  F024         	movff	otoa@d,??_otoa
 11347   0054BC  C01D  F025         	movff	otoa@d+1,??_otoa+1
 11348   0054C0  C01E  F026         	movff	otoa@d+2,??_otoa+2
 11349   0054C4  C01F  F027         	movff	otoa@d+3,??_otoa+3
 11350   0054C8  C020  F028         	movff	otoa@d+4,??_otoa+4
 11351   0054CC  C021  F029         	movff	otoa@d+5,??_otoa+5
 11352   0054D0  C022  F02A         	movff	otoa@d+6,??_otoa+6
 11353   0054D4  C023  F02B         	movff	otoa@d+7,??_otoa+7
 11354   0054D8  0E04               	movlw	4
 11355   0054DA  EF78  F02A         	goto	u11730
 11356   0054DE                     u11735:
 11357   0054DE  90D8               	bcf	status,0,c
 11358   0054E0  322B               	rrcf	(??_otoa+7)^0,f,c
 11359   0054E2  322A               	rrcf	(??_otoa+6)^0,f,c
 11360   0054E4  3229               	rrcf	(??_otoa+5)^0,f,c
 11361   0054E6  3228               	rrcf	(??_otoa+4)^0,f,c
 11362   0054E8  3227               	rrcf	(??_otoa+3)^0,f,c
 11363   0054EA  3226               	rrcf	(??_otoa+2)^0,f,c
 11364   0054EC  3225               	rrcf	(??_otoa+1)^0,f,c
 11365   0054EE  3224               	rrcf	??_otoa^0,f,c
 11366   0054F0                     u11730:
 11367   0054F0  2EE8               	decfsz	wreg,f,c
 11368   0054F2  EF6F  F02A         	goto	u11735
 11369   0054F6  C024  F01C         	movff	??_otoa,otoa@d
 11370   0054FA  C025  F01D         	movff	??_otoa+1,otoa@d+1
 11371   0054FE  C026  F01E         	movff	??_otoa+2,otoa@d+2
 11372   005502  C027  F01F         	movff	??_otoa+3,otoa@d+3
 11373   005506  C028  F020         	movff	??_otoa+4,otoa@d+4
 11374   00550A  C029  F021         	movff	??_otoa+5,otoa@d+5
 11375   00550E  C02A  F022         	movff	??_otoa+6,otoa@d+6
 11376   005512  C02B  F023         	movff	??_otoa+7,otoa@d+7
 11377   005516                     l9674:
 11378                           
 11379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 901:     while (!
      +                          (i < 1) && (d != 0
 11380   005516  BE32               	btfsc	(otoa@i+1)^0,7,c
 11381   005518  EF96  F02A         	goto	u11741
 11382   00551C  5032               	movf	(otoa@i+1)^0,w,c
 11383   00551E  E108               	bnz	u11740
 11384   005520  0431               	decf	otoa@i^0,w,c
 11385   005522  A0D8               	btfss	status,0,c
 11386   005524  EF96  F02A         	goto	u11741
 11387   005528  EF98  F02A         	goto	u11740
 11388   00552C                     u11741:
 11389   00552C  EFC9  F02A         	goto	l9684
 11390   005530                     u11740:
 11391   005530  501C               	movf	otoa@d^0,w,c
 11392   005532  101D               	iorwf	(otoa@d+1)^0,w,c
 11393   005534  101E               	iorwf	(otoa@d+2)^0,w,c
 11394   005536  101F               	iorwf	(otoa@d+3)^0,w,c
 11395   005538  1020               	iorwf	(otoa@d+4)^0,w,c
 11396   00553A  1021               	iorwf	(otoa@d+5)^0,w,c
 11397   00553C  1022               	iorwf	(otoa@d+6)^0,w,c
 11398   00553E  1023               	iorwf	(otoa@d+7)^0,w,c
 11399   005540  A4D8               	btfss	status,2,c
 11400   005542  EFA5  F02A         	goto	u11751
 11401   005546  EFA7  F02A         	goto	u11750
 11402   00554A                     u11751:
 11403   00554A  EF47  F02A         	goto	l9662
 11404   00554E                     u11750:
 11405   00554E  BE2D               	btfsc	(otoa@p+1)^0,7,c
 11406   005550  EFB4  F02A         	goto	u11760
 11407   005554  502D               	movf	(otoa@p+1)^0,w,c
 11408   005556  E106               	bnz	u11761
 11409   005558  042C               	decf	otoa@p^0,w,c
 11410   00555A  B0D8               	btfsc	status,0,c
 11411   00555C  EFB2  F02A         	goto	u11761
 11412   005560  EFB4  F02A         	goto	u11760
 11413   005564                     u11761:
 11414   005564  EF47  F02A         	goto	l9662
 11415   005568                     u11760:
 11416   005568  BE30               	btfsc	(otoa@w+1)^0,7,c
 11417   00556A  EFBF  F02A         	goto	u11771
 11418   00556E  5030               	movf	(otoa@w+1)^0,w,c
 11419   005570  E108               	bnz	u11770
 11420   005572  042F               	decf	otoa@w^0,w,c
 11421   005574  A0D8               	btfss	status,0,c
 11422   005576  EFBF  F02A         	goto	u11771
 11423   00557A  EFC1  F02A         	goto	u11770
 11424   00557E                     u11771:
 11425   00557E  EFC9  F02A         	goto	l9684
 11426   005582                     u11770:
 11427   005582  0101               	movlb	1	; () banked
 11428   005584  B3B0               	btfsc	_flags& (0+255),1,b
 11429   005586  EFC7  F02A         	goto	u11781
 11430   00558A  EFC9  F02A         	goto	u11780
 11431   00558E                     u11781:
 11432   00558E  EF47  F02A         	goto	l9662
 11433   005592                     u11780:
 11434   005592                     l9684:
 11435                           
 11436                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 929:     if ((t |
      +                          | prec == 0) && (flags & (1 << 4))) {
 11437   005592  502E               	movf	otoa@t^0,w,c
 11438   005594  A4D8               	btfss	status,2,c
 11439   005596  EFCF  F02A         	goto	u11791
 11440   00559A  EFD1  F02A         	goto	u11790
 11441   00559E                     u11791:
 11442   00559E  EFDB  F02A         	goto	l1435
 11443   0055A2                     u11790:
 11444   0055A2  0101               	movlb	1	; () banked
 11445   0055A4  51AC               	movf	_prec& (0+255),w,b
 11446   0055A6  11AD               	iorwf	(_prec+1)& (0+255),w,b
 11447   0055A8  A4D8               	btfss	status,2,c
 11448   0055AA  EFD9  F02A         	goto	u11801
 11449   0055AE  EFDB  F02A         	goto	u11800
 11450   0055B2                     u11801:
 11451   0055B2  EFF1  F02A         	goto	l9694
 11452   0055B6                     u11800:
 11453   0055B6                     l1435:
 11454   0055B6  0101               	movlb	1	; () banked
 11455   0055B8  A9B0               	btfss	_flags& (0+255),4,b
 11456   0055BA  EFE1  F02A         	goto	u11811
 11457   0055BE  EFE3  F02A         	goto	u11810
 11458   0055C2                     u11811:
 11459   0055C2  EFF1  F02A         	goto	l9694
 11460   0055C6                     u11810:
 11461   0055C6                     
 11462                           ; BSR set to: 1
 11463                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 930:         --i;
 11464   0055C6  0631               	decf	otoa@i^0,f,c
 11465   0055C8  A0D8               	btfss	status,0,c
 11466   0055CA  0632               	decf	(otoa@i+1)^0,f,c
 11467   0055CC                     
 11468                           ; BSR set to: 1
 11469                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 931:         dbuf
      +                          [i] = '0';
 11470   0055CC  0E20               	movlw	low _dbuf
 11471   0055CE  2431               	addwf	otoa@i^0,w,c
 11472   0055D0  6ED9               	movwf	fsr2l,c
 11473   0055D2  0E03               	movlw	high _dbuf
 11474   0055D4  2032               	addwfc	(otoa@i+1)^0,w,c
 11475   0055D6  6EDA               	movwf	fsr2h,c
 11476   0055D8  0E30               	movlw	48
 11477   0055DA  6EDF               	movwf	indf2,c
 11478   0055DC                     
 11479                           ; BSR set to: 1
 11480                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 932:         --w;
 11481   0055DC  062F               	decf	otoa@w^0,f,c
 11482   0055DE  A0D8               	btfss	status,0,c
 11483   0055E0  0630               	decf	(otoa@w+1)^0,f,c
 11484   0055E2                     l9694:
 11485                           
 11486                           ; BSR set to: 1
 11487                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 937:     return (
      +                          int) pad(fp, &dbuf[i], w);
 11488   0055E2  C01A  F011         	movff	otoa@fp,pad@fp
 11489   0055E6  C01B  F012         	movff	otoa@fp+1,pad@fp+1
 11490   0055EA  0E20               	movlw	low _dbuf
 11491   0055EC  2431               	addwf	otoa@i^0,w,c
 11492   0055EE  6E13               	movwf	pad@buf^0,c
 11493   0055F0  0E03               	movlw	high _dbuf
 11494   0055F2  2032               	addwfc	(otoa@i+1)^0,w,c
 11495   0055F4  6E14               	movwf	(pad@buf+1)^0,c
 11496   0055F6  C02F  F015         	movff	otoa@w,pad@p
 11497   0055FA  C030  F016         	movff	otoa@w+1,pad@p+1
 11498   0055FE  EC0E  F037         	call	_pad	;wreg free
 11499   005602  C011  F01A         	movff	?_pad,?_otoa
 11500   005606  C012  F01B         	movff	?_pad+1,?_otoa+1
 11501   00560A  0012               	return		;funcret
 11502   00560C                     __end_of_otoa:
 11503                           	callstack 0
 11504                           
 11505 ;; *************** function _efgtoa *****************
 11506 ;; Defined at:
 11507 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 11508 ;; Parameters:    Size  Location     Type
 11509 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 11510 ;;		 -> vsnprintf@f(12), 
 11511 ;;  f               4   18[BANK0 ] PTR struct _IO_FILE
 11512 ;;  c               1   22[BANK0 ] unsigned char 
 11513 ;; Auto vars:     Size  Location     Type
 11514 ;;  u               4   68[BANK0 ] struct flui
 11515 ;;  g               4   60[BANK0 ] struct flui
 11516 ;;  l               4   55[BANK0 ] struct flui
 11517 ;;  h               4   51[BANK0 ] struct flui
 11518 ;;  ou              4   45[BANK0 ] struct flui
 11519 ;;  n               2   72[BANK0 ] int 
 11520 ;;  i               2   66[BANK0 ] int 
 11521 ;;  e               2   64[BANK0 ] int 
 11522 ;;  w               2   49[BANK0 ] int 
 11523 ;;  p               2   41[BANK0 ] int 
 11524 ;;  d               2   39[BANK0 ] int 
 11525 ;;  m               2   37[BANK0 ] int 
 11526 ;;  ne              2   35[BANK0 ] int 
 11527 ;;  t               2   32[BANK0 ] int 
 11528 ;;  sign            1   59[BANK0 ] unsigned char 
 11529 ;;  mode            1   44[BANK0 ] unsigned char 
 11530 ;;  nmode           1   43[BANK0 ] unsigned char 
 11531 ;;  pp              1   34[BANK0 ] unsigned char 
 11532 ;;  esign           1   31[BANK0 ] unsigned char 
 11533 ;; Return value:  Size  Location     Type
 11534 ;;                  2   16[BANK0 ] int 
 11535 ;; Registers used:
 11536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11537 ;; Tracked objects:
 11538 ;;		On entry : 0/0
 11539 ;;		On exit  : 0/0
 11540 ;;		Unchanged: 0/0
 11541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11542 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11543 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11544 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11545 ;;      Totals:         3      58       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11546 ;;Total ram usage:       61 bytes
 11547 ;; Hardware stack levels used: 1
 11548 ;; Hardware stack levels required when called: 5
 11549 ;; This function calls:
 11550 ;;		___awdiv
 11551 ;;		___awmod
 11552 ;;		___fladd
 11553 ;;		___fldiv
 11554 ;;		___fleq
 11555 ;;		___flge
 11556 ;;		___flmul
 11557 ;;		___flneg
 11558 ;;		___flsub
 11559 ;;		___fltol
 11560 ;;		___fpclassifyf
 11561 ;;		_floorf
 11562 ;;		_labs
 11563 ;;		_memcpy
 11564 ;;		_pad
 11565 ;;		_strcpy
 11566 ;; This function is called by:
 11567 ;;		_vfpfcnvrt
 11568 ;; This function uses a non-reentrant model
 11569 ;;
 11570                           
 11571                           	psect	text42
 11572   001282                     __ptext42:
 11573                           	callstack 0
 11574   001282                     _efgtoa:
 11575                           	callstack 19
 11576   001282                     
 11577                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources\
      +                          c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\
      +                          doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2.
      +                          45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program 
      +                          Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
 11578   001282  0E00               	movlw	0
 11579   001284  0100               	movlb	0	; () banked
 11580   001286  6FBB               	movwf	efgtoa@sign& (0+255),b
 11581   001288                     
 11582                           ; BSR set to: 0
 11583                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
 11584   001288  C092  F0BC         	movff	efgtoa@f,efgtoa@g
 11585   00128C  C093  F0BD         	movff	efgtoa@f+1,efgtoa@g+1
 11586   001290  C094  F0BE         	movff	efgtoa@f+2,efgtoa@g+2
 11587   001294  C095  F0BF         	movff	efgtoa@f+3,efgtoa@g+3
 11588   001298                     
 11589                           ; BSR set to: 0
 11590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
 11591   001298  BFBF               	btfsc	(efgtoa@g+3)& (0+255),7,b
 11592   00129A  EF53  F009         	goto	u11090
 11593   00129E  EF51  F009         	goto	u11091
 11594   0012A2                     u11091:
 11595   0012A2  EF67  F009         	goto	l9310
 11596   0012A6                     u11090:
 11597   0012A6                     
 11598                           ; BSR set to: 0
 11599                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
 11600   0012A6  0E01               	movlw	1
 11601   0012A8  6FBB               	movwf	efgtoa@sign& (0+255),b
 11602   0012AA                     
 11603                           ; BSR set to: 0
 11604                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
 11605   0012AA  C0BC  F001         	movff	efgtoa@g,___flneg@f1
 11606   0012AE  C0BD  F002         	movff	efgtoa@g+1,___flneg@f1+1
 11607   0012B2  C0BE  F003         	movff	efgtoa@g+2,___flneg@f1+2
 11608   0012B6  C0BF  F004         	movff	efgtoa@g+3,___flneg@f1+3
 11609   0012BA  ECEF  F03B         	call	___flneg	;wreg free
 11610   0012BE  C001  F0BC         	movff	?___flneg,efgtoa@g
 11611   0012C2  C002  F0BD         	movff	?___flneg+1,efgtoa@g+1
 11612   0012C6  C003  F0BE         	movff	?___flneg+2,efgtoa@g+2
 11613   0012CA  C004  F0BF         	movff	?___flneg+3,efgtoa@g+3
 11614   0012CE                     l9310:
 11615                           
 11616                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
 11617   0012CE  0E00               	movlw	0
 11618   0012D0  0100               	movlb	0	; () banked
 11619   0012D2  6FC9               	movwf	(efgtoa@n+1)& (0+255),b
 11620   0012D4  0E00               	movlw	0
 11621   0012D6  6FC8               	movwf	efgtoa@n& (0+255),b
 11622   0012D8                     
 11623                           ; BSR set to: 0
 11624                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
 11625   0012D8  C1AA  F0B1         	movff	_width,efgtoa@w
 11626   0012DC  C1AB  F0B2         	movff	_width+1,efgtoa@w+1
 11627   0012E0                     
 11628                           ; BSR set to: 0
 11629                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
 11630   0012E0  51BB               	movf	efgtoa@sign& (0+255),w,b
 11631   0012E2  A4D8               	btfss	status,2,c
 11632   0012E4  EF76  F009         	goto	u11101
 11633   0012E8  EF78  F009         	goto	u11100
 11634   0012EC                     u11101:
 11635   0012EC  EF80  F009         	goto	l9318
 11636   0012F0                     u11100:
 11637   0012F0                     
 11638                           ; BSR set to: 0
 11639   0012F0  0101               	movlb	1	; () banked
 11640   0012F2  A5B0               	btfss	_flags& (0+255),2,b
 11641   0012F4  EF7E  F009         	goto	u11111
 11642   0012F8  EF80  F009         	goto	u11110
 11643   0012FC                     u11111:
 11644   0012FC  EF97  F009         	goto	l1319
 11645   001300                     u11110:
 11646   001300                     l9318:
 11647                           
 11648                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
 11649   001300  0100               	movlb	0	; () banked
 11650   001302  51BB               	movf	efgtoa@sign& (0+255),w,b
 11651   001304  A4D8               	btfss	status,2,c
 11652   001306  EF87  F009         	goto	u11121
 11653   00130A  EF89  F009         	goto	u11120
 11654   00130E                     u11121:
 11655   00130E  EF8F  F009         	goto	l9322
 11656   001312                     u11120:
 11657   001312                     
 11658                           ; BSR set to: 0
 11659   001312  0E00               	movlw	0
 11660   001314  6F98               	movwf	(_efgtoa$1333+1)& (0+255),b
 11661   001316  0E2B               	movlw	43
 11662   001318  6F97               	movwf	_efgtoa$1333& (0+255),b
 11663   00131A  EF93  F009         	goto	l9324
 11664   00131E                     l9322:
 11665                           
 11666                           ; BSR set to: 0
 11667   00131E  0E00               	movlw	0
 11668   001320  6F98               	movwf	(_efgtoa$1333+1)& (0+255),b
 11669   001322  0E2D               	movlw	45
 11670   001324  6F97               	movwf	_efgtoa$1333& (0+255),b
 11671   001326                     l9324:
 11672                           
 11673                           ; BSR set to: 0
 11674   001326  C097  F0BB         	movff	_efgtoa$1333,efgtoa@sign
 11675                           
 11676                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 611:     }
 11677   00132A  EFA1  F009         	goto	l9328
 11678   00132E                     l1319:
 11679                           
 11680                           ; BSR set to: 1
 11681   00132E  A7B0               	btfss	_flags& (0+255),3,b
 11682   001330  EF9C  F009         	goto	u11131
 11683   001334  EF9E  F009         	goto	u11130
 11684   001338                     u11131:
 11685   001338  EFA1  F009         	goto	l9328
 11686   00133C                     u11130:
 11687   00133C                     
 11688                           ; BSR set to: 1
 11689                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 614:   sign = ' '
      +                          ;
 11690   00133C  0E20               	movlw	32
 11691   00133E  0100               	movlb	0	; () banked
 11692   001340  6FBB               	movwf	efgtoa@sign& (0+255),b
 11693   001342                     l9328:
 11694                           
 11695                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
 11696   001342  C0BC  F001         	movff	efgtoa@g,___fpclassifyf@x
 11697   001346  C0BD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11698   00134A  C0BE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11699   00134E  C0BF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11700   001352  EC9F  F033         	call	___fpclassifyf	;wreg free
 11701   001356  0401               	decf	?___fpclassifyf^0,w,c
 11702   001358  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 11703   00135A  A4D8               	btfss	status,2,c
 11704   00135C  EFB2  F009         	goto	u11141
 11705   001360  EFB4  F009         	goto	u11140
 11706   001364                     u11141:
 11707   001364  EF05  F00A         	goto	l9350
 11708   001368                     u11140:
 11709   001368                     
 11710                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
 11711   001368  0100               	movlb	0	; () banked
 11712   00136A  51BB               	movf	efgtoa@sign& (0+255),w,b
 11713   00136C  B4D8               	btfsc	status,2,c
 11714   00136E  EFBB  F009         	goto	u11151
 11715   001372  EFBD  F009         	goto	u11150
 11716   001376                     u11151:
 11717   001376  EFC6  F009         	goto	l9338
 11718   00137A                     u11150:
 11719   00137A                     
 11720                           ; BSR set to: 0
 11721                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
 11722   00137A  C0BB  F320         	movff	efgtoa@sign,_dbuf
 11723   00137E                     
 11724                           ; BSR set to: 0
 11725                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
 11726   00137E  07B1               	decf	efgtoa@w& (0+255),f,b
 11727   001380  A0D8               	btfss	status,0,c
 11728   001382  07B2               	decf	(efgtoa@w+1)& (0+255),f,b
 11729   001384                     
 11730                           ; BSR set to: 0
 11731                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
 11732   001384  0E00               	movlw	0
 11733   001386  6FC9               	movwf	(efgtoa@n+1)& (0+255),b
 11734   001388  0E01               	movlw	1
 11735   00138A  6FC8               	movwf	efgtoa@n& (0+255),b
 11736   00138C                     l9338:
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 626:         if (
      +                          (((unsigned char)(((int)c)-'A')) < 26)) {
 11740   00138C  C096  F07C         	movff	efgtoa@c,??_efgtoa
 11741   001390  0EBF               	movlw	191
 11742   001392  267C               	addwf	??_efgtoa^0,f,c
 11743   001394  0E1A               	movlw	26
 11744   001396  607C               	cpfslt	??_efgtoa^0,c
 11745   001398  EFD0  F009         	goto	u11161
 11746   00139C  EFD2  F009         	goto	u11160
 11747   0013A0                     u11161:
 11748   0013A0  EFE0  F009         	goto	l9342
 11749   0013A4                     u11160:
 11750   0013A4                     
 11751                           ; BSR set to: 0
 11752                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 627:             
      +                          strcpy(&dbuf[n], "INF");
 11753   0013A4  0E20               	movlw	low _dbuf
 11754   0013A6  25C8               	addwf	efgtoa@n& (0+255),w,b
 11755   0013A8  6E01               	movwf	strcpy@dest^0,c
 11756   0013AA  0E03               	movlw	high _dbuf
 11757   0013AC  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11758   0013AE  6E02               	movwf	(strcpy@dest+1)^0,c
 11759   0013B0  0EE5               	movlw	low STR_39
 11760   0013B2  6E03               	movwf	strcpy@src^0,c
 11761   0013B4  0EFF               	movlw	high STR_39
 11762   0013B6  6E04               	movwf	(strcpy@src+1)^0,c
 11763   0013B8  ECD3  F03B         	call	_strcpy	;wreg free
 11764                           
 11765                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 628:         }
 11766   0013BC  EFEC  F009         	goto	l9344
 11767   0013C0                     l9342:
 11768                           
 11769                           ; BSR set to: 0
 11770                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
 11771   0013C0  0E20               	movlw	low _dbuf
 11772   0013C2  25C8               	addwf	efgtoa@n& (0+255),w,b
 11773   0013C4  6E01               	movwf	strcpy@dest^0,c
 11774   0013C6  0E03               	movlw	high _dbuf
 11775   0013C8  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11776   0013CA  6E02               	movwf	(strcpy@dest+1)^0,c
 11777   0013CC  0EED               	movlw	low STR_40
 11778   0013CE  6E03               	movwf	strcpy@src^0,c
 11779   0013D0  0EFF               	movlw	high STR_40
 11780   0013D2  6E04               	movwf	(strcpy@src+1)^0,c
 11781   0013D4  ECD3  F03B         	call	_strcpy	;wreg free
 11782   0013D8                     l9344:
 11783                           
 11784                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
 11785   0013D8  0100               	movlb	0	; () banked
 11786   0013DA  0EFD               	movlw	253
 11787   0013DC  27B1               	addwf	efgtoa@w& (0+255),f,b
 11788   0013DE  0EFF               	movlw	255
 11789   0013E0  23B2               	addwfc	(efgtoa@w+1)& (0+255),f,b
 11790   0013E2                     
 11791                           ; BSR set to: 0
 11792                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (int) pad(fp, &dbuf[0], w);
 11793   0013E2  C090  F011         	movff	efgtoa@fp,pad@fp
 11794   0013E6  C091  F012         	movff	efgtoa@fp+1,pad@fp+1
 11795   0013EA  0E20               	movlw	low _dbuf
 11796   0013EC  6E13               	movwf	pad@buf^0,c
 11797   0013EE  0E03               	movlw	high _dbuf
 11798   0013F0  6E14               	movwf	(pad@buf+1)^0,c
 11799   0013F2  C0B1  F015         	movff	efgtoa@w,pad@p
 11800   0013F6  C0B2  F016         	movff	efgtoa@w+1,pad@p+1
 11801   0013FA  EC0E  F037         	call	_pad	;wreg free
 11802   0013FE  C011  F090         	movff	?_pad,?_efgtoa
 11803   001402  C012  F091         	movff	?_pad+1,?_efgtoa+1
 11804   001406  EF4A  F010         	goto	l1332
 11805   00140A                     l9350:
 11806                           
 11807                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
 11808   00140A  C0BC  F001         	movff	efgtoa@g,___fpclassifyf@x
 11809   00140E  C0BD  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
 11810   001412  C0BE  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
 11811   001416  C0BF  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
 11812   00141A  EC9F  F033         	call	___fpclassifyf	;wreg free
 11813   00141E  5001               	movf	?___fpclassifyf^0,w,c
 11814   001420  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 11815   001422  A4D8               	btfss	status,2,c
 11816   001424  EF16  F00A         	goto	u11171
 11817   001428  EF18  F00A         	goto	u11170
 11818   00142C                     u11171:
 11819   00142C  EF52  F00A         	goto	l9372
 11820   001430                     u11170:
 11821   001430                     
 11822                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
 11823   001430  0100               	movlb	0	; () banked
 11824   001432  51BB               	movf	efgtoa@sign& (0+255),w,b
 11825   001434  B4D8               	btfsc	status,2,c
 11826   001436  EF1F  F00A         	goto	u11181
 11827   00143A  EF21  F00A         	goto	u11180
 11828   00143E                     u11181:
 11829   00143E  EF2A  F00A         	goto	l9360
 11830   001442                     u11180:
 11831   001442                     
 11832                           ; BSR set to: 0
 11833                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
 11834   001442  C0BB  F320         	movff	efgtoa@sign,_dbuf
 11835   001446                     
 11836                           ; BSR set to: 0
 11837                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
 11838   001446  07B1               	decf	efgtoa@w& (0+255),f,b
 11839   001448  A0D8               	btfss	status,0,c
 11840   00144A  07B2               	decf	(efgtoa@w+1)& (0+255),f,b
 11841   00144C                     
 11842                           ; BSR set to: 0
 11843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
 11844   00144C  0E00               	movlw	0
 11845   00144E  6FC9               	movwf	(efgtoa@n+1)& (0+255),b
 11846   001450  0E01               	movlw	1
 11847   001452  6FC8               	movwf	efgtoa@n& (0+255),b
 11848   001454                     l9360:
 11849                           
 11850                           ; BSR set to: 0
 11851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 644:         if (
      +                          (((unsigned char)(((int)c)-'A')) < 26)) {
 11852   001454  C096  F07C         	movff	efgtoa@c,??_efgtoa
 11853   001458  0EBF               	movlw	191
 11854   00145A  267C               	addwf	??_efgtoa^0,f,c
 11855   00145C  0E1A               	movlw	26
 11856   00145E  607C               	cpfslt	??_efgtoa^0,c
 11857   001460  EF34  F00A         	goto	u11191
 11858   001464  EF36  F00A         	goto	u11190
 11859   001468                     u11191:
 11860   001468  EF44  F00A         	goto	l9364
 11861   00146C                     u11190:
 11862   00146C                     
 11863                           ; BSR set to: 0
 11864                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 645:             
      +                          strcpy(&dbuf[n], "NAN");
 11865   00146C  0E20               	movlw	low _dbuf
 11866   00146E  25C8               	addwf	efgtoa@n& (0+255),w,b
 11867   001470  6E01               	movwf	strcpy@dest^0,c
 11868   001472  0E03               	movlw	high _dbuf
 11869   001474  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11870   001476  6E02               	movwf	(strcpy@dest+1)^0,c
 11871   001478  0EE9               	movlw	low STR_43
 11872   00147A  6E03               	movwf	strcpy@src^0,c
 11873   00147C  0EFF               	movlw	high STR_43
 11874   00147E  6E04               	movwf	(strcpy@src+1)^0,c
 11875   001480  ECD3  F03B         	call	_strcpy	;wreg free
 11876                           
 11877                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 646:         }
 11878   001484  EFEC  F009         	goto	l9344
 11879   001488                     l9364:
 11880                           
 11881                           ; BSR set to: 0
 11882                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
 11883   001488  0E20               	movlw	low _dbuf
 11884   00148A  25C8               	addwf	efgtoa@n& (0+255),w,b
 11885   00148C  6E01               	movwf	strcpy@dest^0,c
 11886   00148E  0E03               	movlw	high _dbuf
 11887   001490  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
 11888   001492  6E02               	movwf	(strcpy@dest+1)^0,c
 11889   001494  0EF1               	movlw	low STR_44
 11890   001496  6E03               	movwf	strcpy@src^0,c
 11891   001498  0EFF               	movlw	high STR_44
 11892   00149A  6E04               	movwf	(strcpy@src+1)^0,c
 11893   00149C  ECD3  F03B         	call	_strcpy	;wreg free
 11894   0014A0  EFEC  F009         	goto	l9344
 11895   0014A4                     l9372:
 11896                           
 11897                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
 11898   0014A4  0E00               	movlw	0
 11899   0014A6  0100               	movlb	0	; () banked
 11900   0014A8  6FC4               	movwf	efgtoa@u& (0+255),b
 11901   0014AA  0E00               	movlw	0
 11902   0014AC  6FC5               	movwf	(efgtoa@u+1)& (0+255),b
 11903   0014AE  0E80               	movlw	128
 11904   0014B0  6FC6               	movwf	(efgtoa@u+2)& (0+255),b
 11905   0014B2  0E3F               	movlw	63
 11906   0014B4  6FC7               	movwf	(efgtoa@u+3)& (0+255),b
 11907                           
 11908                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
 11909   0014B6  0E00               	movlw	0
 11910   0014B8  6FC1               	movwf	(efgtoa@e+1)& (0+255),b
 11911   0014BA  0E00               	movlw	0
 11912   0014BC  6FC0               	movwf	efgtoa@e& (0+255),b
 11913   0014BE                     
 11914                           ; BSR set to: 0
 11915                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
 11916   0014BE  C0BC  F001         	movff	efgtoa@g,___fleq@ff1
 11917   0014C2  C0BD  F002         	movff	efgtoa@g+1,___fleq@ff1+1
 11918   0014C6  C0BE  F003         	movff	efgtoa@g+2,___fleq@ff1+2
 11919   0014CA  C0BF  F004         	movff	efgtoa@g+3,___fleq@ff1+3
 11920   0014CE  0E00               	movlw	0
 11921   0014D0  6E05               	movwf	___fleq@ff2^0,c
 11922   0014D2  0E00               	movlw	0
 11923   0014D4  6E06               	movwf	(___fleq@ff2+1)^0,c
 11924   0014D6  0E00               	movlw	0
 11925   0014D8  6E07               	movwf	(___fleq@ff2+2)^0,c
 11926   0014DA  0E00               	movlw	0
 11927   0014DC  6E08               	movwf	(___fleq@ff2+3)^0,c
 11928   0014DE  ECC3  F037         	call	___fleq	;wreg free
 11929   0014E2  B0D8               	btfsc	status,0,c
 11930   0014E4  EF76  F00A         	goto	u11201
 11931   0014E8  EF78  F00A         	goto	u11200
 11932   0014EC                     u11201:
 11933   0014EC  EF58  F00B         	goto	l9400
 11934   0014F0                     u11200:
 11935   0014F0  EF85  F00A         	goto	l9380
 11936   0014F4                     l1339:
 11937                           
 11938                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
 11939   0014F4  C0AD  F0C4         	movff	efgtoa@ou,efgtoa@u
 11940   0014F8  C0AE  F0C5         	movff	efgtoa@ou+1,efgtoa@u+1
 11941   0014FC  C0AF  F0C6         	movff	efgtoa@ou+2,efgtoa@u+2
 11942   001500  C0B0  F0C7         	movff	efgtoa@ou+3,efgtoa@u+3
 11943   001504                     
 11944                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
 11945   001504  0100               	movlb	0	; () banked
 11946   001506  4BC0               	infsnz	efgtoa@e& (0+255),f,b
 11947   001508  2BC1               	incf	(efgtoa@e+1)& (0+255),f,b
 11948   00150A                     l9380:
 11949                           
 11950                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
 11951   00150A  C0C4  F03D         	movff	efgtoa@u,___flmul@b
 11952   00150E  C0C5  F03E         	movff	efgtoa@u+1,___flmul@b+1
 11953   001512  C0C6  F03F         	movff	efgtoa@u+2,___flmul@b+2
 11954   001516  C0C7  F040         	movff	efgtoa@u+3,___flmul@b+3
 11955   00151A  0E00               	movlw	0
 11956   00151C  6E41               	movwf	___flmul@a^0,c
 11957   00151E  0E00               	movlw	0
 11958   001520  6E42               	movwf	(___flmul@a+1)^0,c
 11959   001522  0E20               	movlw	32
 11960   001524  6E43               	movwf	(___flmul@a+2)^0,c
 11961   001526  0E41               	movlw	65
 11962   001528  6E44               	movwf	(___flmul@a+3)^0,c
 11963   00152A  EC59  F01D         	call	___flmul	;wreg free
 11964   00152E  C03D  F0AD         	movff	?___flmul,efgtoa@ou
 11965   001532  C03E  F0AE         	movff	?___flmul+1,efgtoa@ou+1
 11966   001536  C03F  F0AF         	movff	?___flmul+2,efgtoa@ou+2
 11967   00153A  C040  F0B0         	movff	?___flmul+3,efgtoa@ou+3
 11968   00153E  0100               	movlb	0	; () banked
 11969   001540  51AD               	movf	efgtoa@ou& (0+255),w,b
 11970   001542  5DBC               	subwf	efgtoa@g& (0+255),w,b
 11971   001544  6E01               	movwf	labs@a^0,c
 11972   001546  51AE               	movf	(efgtoa@ou+1)& (0+255),w,b
 11973   001548  59BD               	subwfb	(efgtoa@g+1)& (0+255),w,b
 11974   00154A  6E02               	movwf	(labs@a+1)^0,c
 11975   00154C  51AF               	movf	(efgtoa@ou+2)& (0+255),w,b
 11976   00154E  59BE               	subwfb	(efgtoa@g+2)& (0+255),w,b
 11977   001550  6E03               	movwf	(labs@a+2)^0,c
 11978   001552  51B0               	movf	(efgtoa@ou+3)& (0+255),w,b
 11979   001554  59BF               	subwfb	(efgtoa@g+3)& (0+255),w,b
 11980   001556  6E04               	movwf	(labs@a+3)^0,c
 11981   001558  ECDC  F03A         	call	_labs	;wreg free
 11982   00155C  BE04               	btfsc	(?_labs+3)^0,7,c
 11983   00155E  EFBC  F00A         	goto	u11211
 11984   001562  5004               	movf	(?_labs+3)^0,w,c
 11985   001564  1003               	iorwf	(?_labs+2)^0,w,c
 11986   001566  1002               	iorwf	(?_labs+1)^0,w,c
 11987   001568  E109               	bnz	u11210
 11988   00156A  0E02               	movlw	2
 11989   00156C  5C01               	subwf	?_labs^0,w,c
 11990   00156E  A0D8               	btfss	status,0,c
 11991   001570  EFBC  F00A         	goto	u11211
 11992   001574  EFBE  F00A         	goto	u11210
 11993   001578                     u11211:
 11994   001578  EF7A  F00A         	goto	l1339
 11995   00157C                     u11210:
 11996   00157C  C0AD  F084         	movff	efgtoa@ou,___flge@ff1
 11997   001580  C0AE  F085         	movff	efgtoa@ou+1,___flge@ff1+1
 11998   001584  C0AF  F086         	movff	efgtoa@ou+2,___flge@ff1+2
 11999   001588  C0B0  F087         	movff	efgtoa@ou+3,___flge@ff1+3
 12000   00158C  C0BC  F088         	movff	efgtoa@g,___flge@ff2
 12001   001590  C0BD  F089         	movff	efgtoa@g+1,___flge@ff2+1
 12002   001594  C0BE  F08A         	movff	efgtoa@g+2,___flge@ff2+2
 12003   001598  C0BF  F08B         	movff	efgtoa@g+3,___flge@ff2+3
 12004   00159C  EC1C  F033         	call	___flge	;wreg free
 12005   0015A0  0100               	movlb	0	; () banked
 12006   0015A2  A0D8               	btfss	status,0,c
 12007   0015A4  EFD6  F00A         	goto	u11221
 12008   0015A8  EFD8  F00A         	goto	u11220
 12009   0015AC                     u11221:
 12010   0015AC  EF7A  F00A         	goto	l1339
 12011   0015B0                     u11220:
 12012   0015B0                     
 12013                           ; BSR set to: 0
 12014                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
 12015   0015B0  51C4               	movf	efgtoa@u& (0+255),w,b
 12016   0015B2  5DBC               	subwf	efgtoa@g& (0+255),w,b
 12017   0015B4  6E01               	movwf	labs@a^0,c
 12018   0015B6  51C5               	movf	(efgtoa@u+1)& (0+255),w,b
 12019   0015B8  59BD               	subwfb	(efgtoa@g+1)& (0+255),w,b
 12020   0015BA  6E02               	movwf	(labs@a+1)^0,c
 12021   0015BC  51C6               	movf	(efgtoa@u+2)& (0+255),w,b
 12022   0015BE  59BE               	subwfb	(efgtoa@g+2)& (0+255),w,b
 12023   0015C0  6E03               	movwf	(labs@a+2)^0,c
 12024   0015C2  51C7               	movf	(efgtoa@u+3)& (0+255),w,b
 12025   0015C4  59BF               	subwfb	(efgtoa@g+3)& (0+255),w,b
 12026   0015C6  6E04               	movwf	(labs@a+3)^0,c
 12027   0015C8  ECDC  F03A         	call	_labs	;wreg free
 12028   0015CC  BE04               	btfsc	(?_labs+3)^0,7,c
 12029   0015CE  EFF6  F00A         	goto	u11230
 12030   0015D2  5004               	movf	(?_labs+3)^0,w,c
 12031   0015D4  1003               	iorwf	(?_labs+2)^0,w,c
 12032   0015D6  1002               	iorwf	(?_labs+1)^0,w,c
 12033   0015D8  E107               	bnz	u11231
 12034   0015DA  0E02               	movlw	2
 12035   0015DC  5C01               	subwf	?_labs^0,w,c
 12036   0015DE  B0D8               	btfsc	status,0,c
 12037   0015E0  EFF4  F00A         	goto	u11231
 12038   0015E4  EFF6  F00A         	goto	u11230
 12039   0015E8                     u11231:
 12040   0015E8  EF3E  F00B         	goto	l9398
 12041   0015EC                     u11230:
 12042   0015EC                     l9388:
 12043                           
 12044                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
 12045   0015EC  C0C4  F0BC         	movff	efgtoa@u,efgtoa@g
 12046   0015F0  C0C5  F0BD         	movff	efgtoa@u+1,efgtoa@g+1
 12047   0015F4  C0C6  F0BE         	movff	efgtoa@u+2,efgtoa@g+2
 12048   0015F8  C0C7  F0BF         	movff	efgtoa@u+3,efgtoa@g+3
 12049                           
 12050                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
 12051   0015FC  EF58  F00B         	goto	l9400
 12052   001600                     l9390:
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
 12056   001600  C0C4  F024         	movff	efgtoa@u,___fldiv@b
 12057   001604  C0C5  F025         	movff	efgtoa@u+1,___fldiv@b+1
 12058   001608  C0C6  F026         	movff	efgtoa@u+2,___fldiv@b+2
 12059   00160C  C0C7  F027         	movff	efgtoa@u+3,___fldiv@b+3
 12060   001610  0E00               	movlw	0
 12061   001612  6E28               	movwf	___fldiv@a^0,c
 12062   001614  0E00               	movlw	0
 12063   001616  6E29               	movwf	(___fldiv@a+1)^0,c
 12064   001618  0E20               	movlw	32
 12065   00161A  6E2A               	movwf	(___fldiv@a+2)^0,c
 12066   00161C  0E41               	movlw	65
 12067   00161E  6E2B               	movwf	(___fldiv@a+3)^0,c
 12068   001620  EC6E  F01F         	call	___fldiv	;wreg free
 12069   001624  C024  F0C4         	movff	?___fldiv,efgtoa@u
 12070   001628  C025  F0C5         	movff	?___fldiv+1,efgtoa@u+1
 12071   00162C  C026  F0C6         	movff	?___fldiv+2,efgtoa@u+2
 12072   001630  C027  F0C7         	movff	?___fldiv+3,efgtoa@u+3
 12073   001634                     
 12074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
 12075   001634  0100               	movlb	0	; () banked
 12076   001636  07C0               	decf	efgtoa@e& (0+255),f,b
 12077   001638  A0D8               	btfss	status,0,c
 12078   00163A  07C1               	decf	(efgtoa@e+1)& (0+255),f,b
 12079   00163C                     
 12080                           ; BSR set to: 0
 12081                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
 12082   00163C  51C4               	movf	efgtoa@u& (0+255),w,b
 12083   00163E  5DBC               	subwf	efgtoa@g& (0+255),w,b
 12084   001640  6E01               	movwf	labs@a^0,c
 12085   001642  51C5               	movf	(efgtoa@u+1)& (0+255),w,b
 12086   001644  59BD               	subwfb	(efgtoa@g+1)& (0+255),w,b
 12087   001646  6E02               	movwf	(labs@a+1)^0,c
 12088   001648  51C6               	movf	(efgtoa@u+2)& (0+255),w,b
 12089   00164A  59BE               	subwfb	(efgtoa@g+2)& (0+255),w,b
 12090   00164C  6E03               	movwf	(labs@a+2)^0,c
 12091   00164E  51C7               	movf	(efgtoa@u+3)& (0+255),w,b
 12092   001650  59BF               	subwfb	(efgtoa@g+3)& (0+255),w,b
 12093   001652  6E04               	movwf	(labs@a+3)^0,c
 12094   001654  ECDC  F03A         	call	_labs	;wreg free
 12095   001658  BE04               	btfsc	(?_labs+3)^0,7,c
 12096   00165A  EF3C  F00B         	goto	u11240
 12097   00165E  5004               	movf	(?_labs+3)^0,w,c
 12098   001660  1003               	iorwf	(?_labs+2)^0,w,c
 12099   001662  1002               	iorwf	(?_labs+1)^0,w,c
 12100   001664  E107               	bnz	u11241
 12101   001666  0E02               	movlw	2
 12102   001668  5C01               	subwf	?_labs^0,w,c
 12103   00166A  B0D8               	btfsc	status,0,c
 12104   00166C  EF3A  F00B         	goto	u11241
 12105   001670  EF3C  F00B         	goto	u11240
 12106   001674                     u11241:
 12107   001674  EF3E  F00B         	goto	l9398
 12108   001678                     u11240:
 12109   001678  EFF6  F00A         	goto	l9388
 12110   00167C                     l9398:
 12111                           
 12112                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
 12113   00167C  C0BC  F084         	movff	efgtoa@g,___flge@ff1
 12114   001680  C0BD  F085         	movff	efgtoa@g+1,___flge@ff1+1
 12115   001684  C0BE  F086         	movff	efgtoa@g+2,___flge@ff1+2
 12116   001688  C0BF  F087         	movff	efgtoa@g+3,___flge@ff1+3
 12117   00168C  C0C4  F088         	movff	efgtoa@u,___flge@ff2
 12118   001690  C0C5  F089         	movff	efgtoa@u+1,___flge@ff2+1
 12119   001694  C0C6  F08A         	movff	efgtoa@u+2,___flge@ff2+2
 12120   001698  C0C7  F08B         	movff	efgtoa@u+3,___flge@ff2+3
 12121   00169C  EC1C  F033         	call	___flge	;wreg free
 12122   0016A0  0100               	movlb	0	; () banked
 12123   0016A2  A0D8               	btfss	status,0,c
 12124   0016A4  EF56  F00B         	goto	u11251
 12125   0016A8  EF58  F00B         	goto	u11250
 12126   0016AC                     u11251:
 12127   0016AC  EF00  F00B         	goto	l9390
 12128   0016B0                     u11250:
 12129   0016B0                     l9400:
 12130                           
 12131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 681:     mode = (
      +                          char)((((unsigned char)(((int)c)-'A')) < 26) ? ((int)c)|0x20 : ((int)c));
 12132   0016B0  C096  F07C         	movff	efgtoa@c,??_efgtoa
 12133   0016B4  0EBF               	movlw	191
 12134   0016B6  267C               	addwf	??_efgtoa^0,f,c
 12135   0016B8  0E19               	movlw	25
 12136   0016BA  647C               	cpfsgt	??_efgtoa^0,c
 12137   0016BC  EF62  F00B         	goto	u11261
 12138   0016C0  EF64  F00B         	goto	u11260
 12139   0016C4                     u11261:
 12140   0016C4  EF6A  F00B         	goto	l9404
 12141   0016C8                     u11260:
 12142   0016C8  C096  F099         	movff	efgtoa@c,_efgtoa$1340
 12143   0016CC  0100               	movlb	0	; () banked
 12144   0016CE  6B9A               	clrf	(_efgtoa$1340+1)& (0+255),b
 12145   0016D0  EF73  F00B         	goto	l9406
 12146   0016D4                     l9404:
 12147   0016D4  0E20               	movlw	32
 12148   0016D6  C096  F07C         	movff	efgtoa@c,??_efgtoa
 12149   0016DA  6A7D               	clrf	(??_efgtoa+1)^0,c
 12150   0016DC  107C               	iorwf	??_efgtoa^0,w,c
 12151   0016DE  0100               	movlb	0	; () banked
 12152   0016E0  6F99               	movwf	_efgtoa$1340& (0+255),b
 12153   0016E2  507D               	movf	(??_efgtoa+1)^0,w,c
 12154   0016E4  6F9A               	movwf	(_efgtoa$1340+1)& (0+255),b
 12155   0016E6                     l9406:
 12156                           
 12157                           ; BSR set to: 0
 12158   0016E6  C099  F0AC         	movff	_efgtoa$1340,efgtoa@mode
 12159   0016EA                     
 12160                           ; BSR set to: 0
 12161                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
 12162   0016EA  C0AC  F0AB         	movff	efgtoa@mode,efgtoa@nmode
 12163                           
 12164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 687:     if (mode
      +                           == 'g') {
 12165   0016EE  0E67               	movlw	103
 12166   0016F0  19AC               	xorwf	efgtoa@mode& (0+255),w,b
 12167   0016F2  A4D8               	btfss	status,2,c
 12168   0016F4  EF7E  F00B         	goto	u11271
 12169   0016F8  EF80  F00B         	goto	u11270
 12170   0016FC                     u11271:
 12171   0016FC  EFA8  F00B         	goto	l9418
 12172   001700                     u11270:
 12173   001700                     
 12174                           ; BSR set to: 0
 12175                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 688:   if (prec =
      +                          = 0) {
 12176   001700  0101               	movlb	1	; () banked
 12177   001702  51AC               	movf	_prec& (0+255),w,b
 12178   001704  11AD               	iorwf	(_prec+1)& (0+255),w,b
 12179   001706  A4D8               	btfss	status,2,c
 12180   001708  EF88  F00B         	goto	u11281
 12181   00170C  EF8A  F00B         	goto	u11280
 12182   001710                     u11281:
 12183   001710  EF8E  F00B         	goto	l9414
 12184   001714                     u11280:
 12185   001714                     
 12186                           ; BSR set to: 1
 12187                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 689:    prec = 1;
 12188   001714  0E00               	movlw	0
 12189   001716  6FAD               	movwf	(_prec+1)& (0+255),b
 12190   001718  0E01               	movlw	1
 12191   00171A  6FAC               	movwf	_prec& (0+255),b
 12192   00171C                     l9414:
 12193                           
 12194                           ; BSR set to: 1
 12195                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 691:         p = 
      +                          (0 < prec) ? prec : 6;
 12196   00171C  BFAD               	btfsc	(_prec+1)& (0+255),7,b
 12197   00171E  EF9B  F00B         	goto	u11290
 12198   001722  51AD               	movf	(_prec+1)& (0+255),w,b
 12199   001724  E106               	bnz	u11291
 12200   001726  05AC               	decf	_prec& (0+255),w,b
 12201   001728  B0D8               	btfsc	status,0,c
 12202   00172A  EF99  F00B         	goto	u11291
 12203   00172E  EF9B  F00B         	goto	u11290
 12204   001732                     u11291:
 12205   001732  EFA2  F00B         	goto	l1354
 12206   001736                     u11290:
 12207   001736                     l9416:
 12208                           
 12209                           ; BSR set to: 1
 12210   001736  0E00               	movlw	0
 12211   001738  0100               	movlb	0	; () banked
 12212   00173A  6FAA               	movwf	(efgtoa@p+1)& (0+255),b
 12213   00173C  0E06               	movlw	6
 12214   00173E  6FA9               	movwf	efgtoa@p& (0+255),b
 12215   001740  EFB2  F00B         	goto	l9424
 12216   001744                     l1354:
 12217                           
 12218                           ; BSR set to: 1
 12219   001744  C1AC  F0A9         	movff	_prec,efgtoa@p
 12220   001748  C1AD  F0AA         	movff	_prec+1,efgtoa@p+1
 12221   00174C  EFB2  F00B         	goto	l9424
 12222   001750                     l9418:
 12223                           
 12224                           ; BSR set to: 0
 12225                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
 12226   001750  0101               	movlb	1	; () banked
 12227   001752  BFAD               	btfsc	(_prec+1)& (0+255),7,b
 12228   001754  EFAE  F00B         	goto	u11301
 12229   001758  EFB0  F00B         	goto	u11300
 12230   00175C                     u11301:
 12231   00175C  EF9B  F00B         	goto	l9416
 12232   001760                     u11300:
 12233   001760  EFA2  F00B         	goto	l1354
 12234   001764                     l9424:
 12235                           
 12236                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 701:     if (mode
      +                           == 'g') {
 12237   001764  0E67               	movlw	103
 12238   001766  0100               	movlb	0	; () banked
 12239   001768  19AC               	xorwf	efgtoa@mode& (0+255),w,b
 12240   00176A  A4D8               	btfss	status,2,c
 12241   00176C  EFBA  F00B         	goto	u11311
 12242   001770  EFBC  F00B         	goto	u11310
 12243   001774                     u11311:
 12244   001774  EFE5  F00B         	goto	l9434
 12245   001778                     u11310:
 12246   001778                     
 12247                           ; BSR set to: 0
 12248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 702:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
 12249   001778  AFC1               	btfss	(efgtoa@e+1)& (0+255),7,b
 12250   00177A  EFCA  F00B         	goto	u11320
 12251   00177E  0EFC               	movlw	252
 12252   001780  5DC0               	subwf	efgtoa@e& (0+255),w,b
 12253   001782  0EFF               	movlw	255
 12254   001784  59C1               	subwfb	(efgtoa@e+1)& (0+255),w,b
 12255   001786  A0D8               	btfss	status,0,c
 12256   001788  EFC8  F00B         	goto	u11321
 12257   00178C  EFCA  F00B         	goto	u11320
 12258   001790                     u11321:
 12259   001790  EFE3  F00B         	goto	l9432
 12260   001794                     u11320:
 12261   001794                     
 12262                           ; BSR set to: 0
 12263   001794  0EFF               	movlw	255
 12264   001796  25A9               	addwf	efgtoa@p& (0+255),w,b
 12265   001798  6E7C               	movwf	??_efgtoa^0,c
 12266   00179A  0EFF               	movlw	255
 12267   00179C  21AA               	addwfc	(efgtoa@p+1)& (0+255),w,b
 12268   00179E  6E7D               	movwf	(??_efgtoa+1)^0,c
 12269   0017A0  51C0               	movf	efgtoa@e& (0+255),w,b
 12270   0017A2  5C7C               	subwf	??_efgtoa^0,w,c
 12271   0017A4  507D               	movf	(??_efgtoa+1)^0,w,c
 12272   0017A6  0A80               	xorlw	128
 12273   0017A8  6E7E               	movwf	(??_efgtoa+2)^0,c
 12274   0017AA  51C1               	movf	(efgtoa@e+1)& (0+255),w,b
 12275   0017AC  0A80               	xorlw	128
 12276   0017AE  587E               	subwfb	(??_efgtoa+2)^0,w,c
 12277   0017B0  A0D8               	btfss	status,0,c
 12278   0017B2  EFDD  F00B         	goto	u11331
 12279   0017B6  EFDF  F00B         	goto	u11330
 12280   0017BA                     u11331:
 12281   0017BA  EFE3  F00B         	goto	l9432
 12282   0017BE                     u11330:
 12283   0017BE                     
 12284                           ; BSR set to: 0
 12285                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 703:             
      +                          nmode = 'f';
 12286   0017BE  0E66               	movlw	102
 12287   0017C0  6FAB               	movwf	efgtoa@nmode& (0+255),b
 12288                           
 12289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 704:         } el
      +                          se {
 12290   0017C2  EFE5  F00B         	goto	l9434
 12291   0017C6                     l9432:
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 705:             
      +                          nmode = 'e';
 12295   0017C6  0E65               	movlw	101
 12296   0017C8  6FAB               	movwf	efgtoa@nmode& (0+255),b
 12297   0017CA                     l9434:
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
 12301   0017CA  C0A9  F0A5         	movff	efgtoa@p,efgtoa@m
 12302   0017CE  C0AA  F0A6         	movff	efgtoa@p+1,efgtoa@m+1
 12303   0017D2                     
 12304                           ; BSR set to: 0
 12305                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 713:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0)))
 12306   0017D2  0E67               	movlw	103
 12307   0017D4  19AC               	xorwf	efgtoa@mode& (0+255),w,b
 12308   0017D6  A4D8               	btfss	status,2,c
 12309   0017D8  EFF0  F00B         	goto	u11341
 12310   0017DC  EFF2  F00B         	goto	u11340
 12311   0017E0                     u11341:
 12312   0017E0  EF02  F00C         	goto	l9442
 12313   0017E4                     u11340:
 12314   0017E4                     
 12315                           ; BSR set to: 0
 12316   0017E4  0E66               	movlw	102
 12317   0017E6  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
 12318   0017E8  A4D8               	btfss	status,2,c
 12319   0017EA  EFF9  F00B         	goto	u11351
 12320   0017EE  EFFB  F00B         	goto	u11350
 12321   0017F2                     u11351:
 12322   0017F2  EF04  F00C         	goto	l9444
 12323   0017F6                     u11350:
 12324   0017F6                     
 12325                           ; BSR set to: 0
 12326   0017F6  BFC1               	btfsc	(efgtoa@e+1)& (0+255),7,b
 12327   0017F8  EF02  F00C         	goto	u11360
 12328   0017FC  EF00  F00C         	goto	u11361
 12329   001800                     u11361:
 12330   001800  EF04  F00C         	goto	l9444
 12331   001804                     u11360:
 12332   001804                     l9442:
 12333                           
 12334                           ; BSR set to: 0
 12335                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
 12336   001804  4BA5               	infsnz	efgtoa@m& (0+255),f,b
 12337   001806  2BA6               	incf	(efgtoa@m+1)& (0+255),f,b
 12338   001808                     l9444:
 12339                           
 12340                           ; BSR set to: 0
 12341                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmod
      +                          e == 'f') {
 12342   001808  0E66               	movlw	102
 12343   00180A  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
 12344   00180C  A4D8               	btfss	status,2,c
 12345   00180E  EF0B  F00C         	goto	u11371
 12346   001812  EF0D  F00C         	goto	u11370
 12347   001816                     u11371:
 12348   001816  EF2D  F00C         	goto	l9454
 12349   00181A                     u11370:
 12350   00181A                     
 12351                           ; BSR set to: 0
 12352                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
 12353   00181A  BFC1               	btfsc	(efgtoa@e+1)& (0+255),7,b
 12354   00181C  EF14  F00C         	goto	u11380
 12355   001820  EF12  F00C         	goto	u11381
 12356   001824                     u11381:
 12357   001824  EF20  F00C         	goto	l9450
 12358   001828                     u11380:
 12359   001828                     
 12360                           ; BSR set to: 0
 12361                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
 12362   001828  0E00               	movlw	0
 12363   00182A  6FC4               	movwf	efgtoa@u& (0+255),b
 12364   00182C  0E00               	movlw	0
 12365   00182E  6FC5               	movwf	(efgtoa@u+1)& (0+255),b
 12366   001830  0E80               	movlw	128
 12367   001832  6FC6               	movwf	(efgtoa@u+2)& (0+255),b
 12368   001834  0E3F               	movlw	63
 12369   001836  6FC7               	movwf	(efgtoa@u+3)& (0+255),b
 12370                           
 12371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
 12372   001838  0E00               	movlw	0
 12373   00183A  6FC1               	movwf	(efgtoa@e+1)& (0+255),b
 12374   00183C  0E00               	movlw	0
 12375   00183E  6FC0               	movwf	efgtoa@e& (0+255),b
 12376   001840                     l9450:
 12377                           
 12378                           ; BSR set to: 0
 12379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
 12380   001840  0E67               	movlw	103
 12381   001842  19AC               	xorwf	efgtoa@mode& (0+255),w,b
 12382   001844  B4D8               	btfsc	status,2,c
 12383   001846  EF27  F00C         	goto	u11391
 12384   00184A  EF29  F00C         	goto	u11390
 12385   00184E                     u11391:
 12386   00184E  EF2D  F00C         	goto	l9454
 12387   001852                     u11390:
 12388   001852                     
 12389                           ; BSR set to: 0
 12390                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
 12391   001852  51C0               	movf	efgtoa@e& (0+255),w,b
 12392   001854  27A5               	addwf	efgtoa@m& (0+255),f,b
 12393   001856  51C1               	movf	(efgtoa@e+1)& (0+255),w,b
 12394   001858  23A6               	addwfc	(efgtoa@m+1)& (0+255),f,b
 12395   00185A                     l9454:
 12396                           
 12397                           ; BSR set to: 0
 12398                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 12399   00185A  0E00               	movlw	0
 12400   00185C  6FC3               	movwf	(efgtoa@i+1)& (0+255),b
 12401   00185E  0E00               	movlw	0
 12402   001860  6FC2               	movwf	efgtoa@i& (0+255),b
 12403   001862                     
 12404                           ; BSR set to: 0
 12405                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 12406   001862  C0BC  F0B3         	movff	efgtoa@g,efgtoa@h
 12407   001866  C0BD  F0B4         	movff	efgtoa@g+1,efgtoa@h+1
 12408   00186A  C0BE  F0B5         	movff	efgtoa@g+2,efgtoa@h+2
 12409   00186E  C0BF  F0B6         	movff	efgtoa@g+3,efgtoa@h+3
 12410   001872                     
 12411                           ; BSR set to: 0
 12412                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 12413   001872  C0C4  F0AD         	movff	efgtoa@u,efgtoa@ou
 12414   001876  C0C5  F0AE         	movff	efgtoa@u+1,efgtoa@ou+1
 12415   00187A  C0C6  F0AF         	movff	efgtoa@u+2,efgtoa@ou+2
 12416   00187E  C0C7  F0B0         	movff	efgtoa@u+3,efgtoa@ou+3
 12417                           
 12418                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 12419   001882  EFBE  F00C         	goto	l9468
 12420   001886                     l9460:
 12421                           
 12422                           ; BSR set to: 0
 12423                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
 12424   001886  C0B3  F024         	movff	efgtoa@h,___fldiv@b
 12425   00188A  C0B4  F025         	movff	efgtoa@h+1,___fldiv@b+1
 12426   00188E  C0B5  F026         	movff	efgtoa@h+2,___fldiv@b+2
 12427   001892  C0B6  F027         	movff	efgtoa@h+3,___fldiv@b+3
 12428   001896  C0C4  F028         	movff	efgtoa@u,___fldiv@a
 12429   00189A  C0C5  F029         	movff	efgtoa@u+1,___fldiv@a+1
 12430   00189E  C0C6  F02A         	movff	efgtoa@u+2,___fldiv@a+2
 12431   0018A2  C0C7  F02B         	movff	efgtoa@u+3,___fldiv@a+3
 12432   0018A6  EC6E  F01F         	call	___fldiv	;wreg free
 12433   0018AA  C024  F03D         	movff	?___fldiv,floorf@x
 12434   0018AE  C025  F03E         	movff	?___fldiv+1,floorf@x+1
 12435   0018B2  C026  F03F         	movff	?___fldiv+2,floorf@x+2
 12436   0018B6  C027  F040         	movff	?___fldiv+3,floorf@x+3
 12437   0018BA  EC41  F027         	call	_floorf	;wreg free
 12438   0018BE  C03D  F0B7         	movff	?_floorf,efgtoa@l
 12439   0018C2  C03E  F0B8         	movff	?_floorf+1,efgtoa@l+1
 12440   0018C6  C03F  F0B9         	movff	?_floorf+2,efgtoa@l+2
 12441   0018CA  C040  F0BA         	movff	?_floorf+3,efgtoa@l+3
 12442                           
 12443                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
 12444   0018CE  C0B7  F066         	movff	efgtoa@l,___fltol@f1
 12445   0018D2  C0B8  F067         	movff	efgtoa@l+1,___fltol@f1+1
 12446   0018D6  C0B9  F068         	movff	efgtoa@l+2,___fltol@f1+2
 12447   0018DA  C0BA  F069         	movff	efgtoa@l+3,___fltol@f1+3
 12448   0018DE  EC99  F032         	call	___fltol	;wreg free
 12449   0018E2  C066  F0A7         	movff	?___fltol,efgtoa@d
 12450   0018E6  C067  F0A8         	movff	?___fltol+1,efgtoa@d+1
 12451   0018EA                     
 12452                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
 12453   0018EA  C0B3  F074         	movff	efgtoa@h,___flsub@b
 12454   0018EE  C0B4  F075         	movff	efgtoa@h+1,___flsub@b+1
 12455   0018F2  C0B5  F076         	movff	efgtoa@h+2,___flsub@b+2
 12456   0018F6  C0B6  F077         	movff	efgtoa@h+3,___flsub@b+3
 12457   0018FA  C0B7  F041         	movff	efgtoa@l,___flmul@a
 12458   0018FE  C0B8  F042         	movff	efgtoa@l+1,___flmul@a+1
 12459   001902  C0B9  F043         	movff	efgtoa@l+2,___flmul@a+2
 12460   001906  C0BA  F044         	movff	efgtoa@l+3,___flmul@a+3
 12461   00190A  C0C4  F03D         	movff	efgtoa@u,___flmul@b
 12462   00190E  C0C5  F03E         	movff	efgtoa@u+1,___flmul@b+1
 12463   001912  C0C6  F03F         	movff	efgtoa@u+2,___flmul@b+2
 12464   001916  C0C7  F040         	movff	efgtoa@u+3,___flmul@b+3
 12465   00191A  EC59  F01D         	call	___flmul	;wreg free
 12466   00191E  C03D  F078         	movff	?___flmul,___flsub@a
 12467   001922  C03E  F079         	movff	?___flmul+1,___flsub@a+1
 12468   001926  C03F  F07A         	movff	?___flmul+2,___flsub@a+2
 12469   00192A  C040  F07B         	movff	?___flmul+3,___flsub@a+3
 12470   00192E  EC54  F03B         	call	___flsub	;wreg free
 12471   001932  C074  F0B3         	movff	?___flsub,efgtoa@h
 12472   001936  C075  F0B4         	movff	?___flsub+1,efgtoa@h+1
 12473   00193A  C076  F0B5         	movff	?___flsub+2,efgtoa@h+2
 12474   00193E  C077  F0B6         	movff	?___flsub+3,efgtoa@h+3
 12475   001942                     
 12476                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
 12477   001942  C0C4  F024         	movff	efgtoa@u,___fldiv@b
 12478   001946  C0C5  F025         	movff	efgtoa@u+1,___fldiv@b+1
 12479   00194A  C0C6  F026         	movff	efgtoa@u+2,___fldiv@b+2
 12480   00194E  C0C7  F027         	movff	efgtoa@u+3,___fldiv@b+3
 12481   001952  0E00               	movlw	0
 12482   001954  6E28               	movwf	___fldiv@a^0,c
 12483   001956  0E00               	movlw	0
 12484   001958  6E29               	movwf	(___fldiv@a+1)^0,c
 12485   00195A  0E20               	movlw	32
 12486   00195C  6E2A               	movwf	(___fldiv@a+2)^0,c
 12487   00195E  0E41               	movlw	65
 12488   001960  6E2B               	movwf	(___fldiv@a+3)^0,c
 12489   001962  EC6E  F01F         	call	___fldiv	;wreg free
 12490   001966  C024  F0C4         	movff	?___fldiv,efgtoa@u
 12491   00196A  C025  F0C5         	movff	?___fldiv+1,efgtoa@u+1
 12492   00196E  C026  F0C6         	movff	?___fldiv+2,efgtoa@u+2
 12493   001972  C027  F0C7         	movff	?___fldiv+3,efgtoa@u+3
 12494   001976                     
 12495                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
 12496   001976  0100               	movlb	0	; () banked
 12497   001978  4BC2               	infsnz	efgtoa@i& (0+255),f,b
 12498   00197A  2BC3               	incf	(efgtoa@i+1)& (0+255),f,b
 12499   00197C                     l9468:
 12500                           
 12501                           ; BSR set to: 0
 12502                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
 12503   00197C  51A5               	movf	efgtoa@m& (0+255),w,b
 12504   00197E  5DC2               	subwf	efgtoa@i& (0+255),w,b
 12505   001980  51C3               	movf	(efgtoa@i+1)& (0+255),w,b
 12506   001982  0A80               	xorlw	128
 12507   001984  6E7C               	movwf	??_efgtoa^0,c
 12508   001986  51A6               	movf	(efgtoa@m+1)& (0+255),w,b
 12509   001988  0A80               	xorlw	128
 12510   00198A  587C               	subwfb	??_efgtoa^0,w,c
 12511   00198C  A0D8               	btfss	status,0,c
 12512   00198E  EFCB  F00C         	goto	u11401
 12513   001992  EFCD  F00C         	goto	u11400
 12514   001996                     u11401:
 12515   001996  EF43  F00C         	goto	l9460
 12516   00199A                     u11400:
 12517   00199A                     
 12518                           ; BSR set to: 0
 12519                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
 12520   00199A  C0C4  F03D         	movff	efgtoa@u,___flmul@b
 12521   00199E  C0C5  F03E         	movff	efgtoa@u+1,___flmul@b+1
 12522   0019A2  C0C6  F03F         	movff	efgtoa@u+2,___flmul@b+2
 12523   0019A6  C0C7  F040         	movff	efgtoa@u+3,___flmul@b+3
 12524   0019AA  0E00               	movlw	0
 12525   0019AC  6E41               	movwf	___flmul@a^0,c
 12526   0019AE  0E00               	movlw	0
 12527   0019B0  6E42               	movwf	(___flmul@a+1)^0,c
 12528   0019B2  0EA0               	movlw	160
 12529   0019B4  6E43               	movwf	(___flmul@a+2)^0,c
 12530   0019B6  0E40               	movlw	64
 12531   0019B8  6E44               	movwf	(___flmul@a+3)^0,c
 12532   0019BA  EC59  F01D         	call	___flmul	;wreg free
 12533   0019BE  C03D  F0B7         	movff	?___flmul,efgtoa@l
 12534   0019C2  C03E  F0B8         	movff	?___flmul+1,efgtoa@l+1
 12535   0019C6  C03F  F0B9         	movff	?___flmul+2,efgtoa@l+2
 12536   0019CA  C040  F0BA         	movff	?___flmul+3,efgtoa@l+3
 12537   0019CE                     
 12538                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
 12539   0019CE  C0B3  F084         	movff	efgtoa@h,___flge@ff1
 12540   0019D2  C0B4  F085         	movff	efgtoa@h+1,___flge@ff1+1
 12541   0019D6  C0B5  F086         	movff	efgtoa@h+2,___flge@ff1+2
 12542   0019DA  C0B6  F087         	movff	efgtoa@h+3,___flge@ff1+3
 12543   0019DE  C0B7  F088         	movff	efgtoa@l,___flge@ff2
 12544   0019E2  C0B8  F089         	movff	efgtoa@l+1,___flge@ff2+1
 12545   0019E6  C0B9  F08A         	movff	efgtoa@l+2,___flge@ff2+2
 12546   0019EA  C0BA  F08B         	movff	efgtoa@l+3,___flge@ff2+3
 12547   0019EE  EC1C  F033         	call	___flge	;wreg free
 12548   0019F2  0100               	movlb	0	; () banked
 12549   0019F4  B0D8               	btfsc	status,0,c
 12550   0019F6  EFFF  F00C         	goto	u11411
 12551   0019FA  EF01  F00D         	goto	u11410
 12552   0019FE                     u11411:
 12553   0019FE  EF0B  F00D         	goto	l9476
 12554   001A02                     u11410:
 12555   001A02                     
 12556                           ; BSR set to: 0
 12557                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
 12558   001A02  0E00               	movlw	0
 12559   001A04  6FB7               	movwf	efgtoa@l& (0+255),b
 12560   001A06  0E00               	movlw	0
 12561   001A08  6FB8               	movwf	(efgtoa@l+1)& (0+255),b
 12562   001A0A  0E00               	movlw	0
 12563   001A0C  6FB9               	movwf	(efgtoa@l+2)& (0+255),b
 12564   001A0E  0E00               	movlw	0
 12565   001A10  6FBA               	movwf	(efgtoa@l+3)& (0+255),b
 12566                           
 12567                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
 12568   001A12  EF34  F00D         	goto	l9482
 12569   001A16                     l9476:
 12570                           
 12571                           ; BSR set to: 0
 12572                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
 12573   001A16  C0B3  F001         	movff	efgtoa@h,___fleq@ff1
 12574   001A1A  C0B4  F002         	movff	efgtoa@h+1,___fleq@ff1+1
 12575   001A1E  C0B5  F003         	movff	efgtoa@h+2,___fleq@ff1+2
 12576   001A22  C0B6  F004         	movff	efgtoa@h+3,___fleq@ff1+3
 12577   001A26  C0B7  F005         	movff	efgtoa@l,___fleq@ff2
 12578   001A2A  C0B8  F006         	movff	efgtoa@l+1,___fleq@ff2+1
 12579   001A2E  C0B9  F007         	movff	efgtoa@l+2,___fleq@ff2+2
 12580   001A32  C0BA  F008         	movff	efgtoa@l+3,___fleq@ff2+3
 12581   001A36  ECC3  F037         	call	___fleq	;wreg free
 12582   001A3A  A0D8               	btfss	status,0,c
 12583   001A3C  EF22  F00D         	goto	u11421
 12584   001A40  EF24  F00D         	goto	u11420
 12585   001A44                     u11421:
 12586   001A44  EF34  F00D         	goto	l9482
 12587   001A48                     u11420:
 12588   001A48  0100               	movlb	0	; () banked
 12589   001A4A  B1A7               	btfsc	efgtoa@d& (0+255),0,b
 12590   001A4C  EF2A  F00D         	goto	u11431
 12591   001A50  EF2C  F00D         	goto	u11430
 12592   001A54                     u11431:
 12593   001A54  EF34  F00D         	goto	l9482
 12594   001A58                     u11430:
 12595   001A58                     
 12596                           ; BSR set to: 0
 12597                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
 12598   001A58  0E00               	movlw	0
 12599   001A5A  6FB7               	movwf	efgtoa@l& (0+255),b
 12600   001A5C  0E00               	movlw	0
 12601   001A5E  6FB8               	movwf	(efgtoa@l+1)& (0+255),b
 12602   001A60  0E00               	movlw	0
 12603   001A62  6FB9               	movwf	(efgtoa@l+2)& (0+255),b
 12604   001A64  0E00               	movlw	0
 12605   001A66  6FBA               	movwf	(efgtoa@l+3)& (0+255),b
 12606   001A68                     l9482:
 12607                           
 12608                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
 12609   001A68  C0BC  F056         	movff	efgtoa@g,___fladd@b
 12610   001A6C  C0BD  F057         	movff	efgtoa@g+1,___fladd@b+1
 12611   001A70  C0BE  F058         	movff	efgtoa@g+2,___fladd@b+2
 12612   001A74  C0BF  F059         	movff	efgtoa@g+3,___fladd@b+3
 12613   001A78  C0B7  F05A         	movff	efgtoa@l,___fladd@a
 12614   001A7C  C0B8  F05B         	movff	efgtoa@l+1,___fladd@a+1
 12615   001A80  C0B9  F05C         	movff	efgtoa@l+2,___fladd@a+2
 12616   001A84  C0BA  F05D         	movff	efgtoa@l+3,___fladd@a+3
 12617   001A88  ECB3  F016         	call	___fladd	;wreg free
 12618   001A8C  C056  F0B3         	movff	?___fladd,efgtoa@h
 12619   001A90  C057  F0B4         	movff	?___fladd+1,efgtoa@h+1
 12620   001A94  C058  F0B5         	movff	?___fladd+2,efgtoa@h+2
 12621   001A98  C059  F0B6         	movff	?___fladd+3,efgtoa@h+3
 12622   001A9C                     
 12623                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
 12624   001A9C  C0B3  F084         	movff	efgtoa@h,___flge@ff1
 12625   001AA0  C0B4  F085         	movff	efgtoa@h+1,___flge@ff1+1
 12626   001AA4  C0B5  F086         	movff	efgtoa@h+2,___flge@ff1+2
 12627   001AA8  C0B6  F087         	movff	efgtoa@h+3,___flge@ff1+3
 12628   001AAC  0E00               	movlw	0
 12629   001AAE  6E41               	movwf	___flmul@a^0,c
 12630   001AB0  0E00               	movlw	0
 12631   001AB2  6E42               	movwf	(___flmul@a+1)^0,c
 12632   001AB4  0E20               	movlw	32
 12633   001AB6  6E43               	movwf	(___flmul@a+2)^0,c
 12634   001AB8  0E41               	movlw	65
 12635   001ABA  6E44               	movwf	(___flmul@a+3)^0,c
 12636   001ABC  C0AD  F03D         	movff	efgtoa@ou,___flmul@b
 12637   001AC0  C0AE  F03E         	movff	efgtoa@ou+1,___flmul@b+1
 12638   001AC4  C0AF  F03F         	movff	efgtoa@ou+2,___flmul@b+2
 12639   001AC8  C0B0  F040         	movff	efgtoa@ou+3,___flmul@b+3
 12640   001ACC  EC59  F01D         	call	___flmul	;wreg free
 12641   001AD0  C03D  F088         	movff	?___flmul,___flge@ff2
 12642   001AD4  C03E  F089         	movff	?___flmul+1,___flge@ff2+1
 12643   001AD8  C03F  F08A         	movff	?___flmul+2,___flge@ff2+2
 12644   001ADC  C040  F08B         	movff	?___flmul+3,___flge@ff2+3
 12645   001AE0  EC1C  F033         	call	___flge	;wreg free
 12646   001AE4  0100               	movlb	0	; () banked
 12647   001AE6  A0D8               	btfss	status,0,c
 12648   001AE8  EF78  F00D         	goto	u11441
 12649   001AEC  EF7A  F00D         	goto	u11440
 12650   001AF0                     u11441:
 12651   001AF0  EFA2  F00D         	goto	l9494
 12652   001AF4                     u11440:
 12653   001AF4                     
 12654                           ; BSR set to: 0
 12655                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
 12656   001AF4  4BC0               	infsnz	efgtoa@e& (0+255),f,b
 12657   001AF6  2BC1               	incf	(efgtoa@e+1)& (0+255),f,b
 12658   001AF8                     
 12659                           ; BSR set to: 0
 12660                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
 12661   001AF8  C0AD  F03D         	movff	efgtoa@ou,___flmul@b
 12662   001AFC  C0AE  F03E         	movff	efgtoa@ou+1,___flmul@b+1
 12663   001B00  C0AF  F03F         	movff	efgtoa@ou+2,___flmul@b+2
 12664   001B04  C0B0  F040         	movff	efgtoa@ou+3,___flmul@b+3
 12665   001B08  0E00               	movlw	0
 12666   001B0A  6E41               	movwf	___flmul@a^0,c
 12667   001B0C  0E00               	movlw	0
 12668   001B0E  6E42               	movwf	(___flmul@a+1)^0,c
 12669   001B10  0E20               	movlw	32
 12670   001B12  6E43               	movwf	(___flmul@a+2)^0,c
 12671   001B14  0E41               	movlw	65
 12672   001B16  6E44               	movwf	(___flmul@a+3)^0,c
 12673   001B18  EC59  F01D         	call	___flmul	;wreg free
 12674   001B1C  C03D  F0AD         	movff	?___flmul,efgtoa@ou
 12675   001B20  C03E  F0AE         	movff	?___flmul+1,efgtoa@ou+1
 12676   001B24  C03F  F0AF         	movff	?___flmul+2,efgtoa@ou+2
 12677   001B28  C040  F0B0         	movff	?___flmul+3,efgtoa@ou+3
 12678   001B2C                     
 12679                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
 12680   001B2C  0E66               	movlw	102
 12681   001B2E  0100               	movlb	0	; () banked
 12682   001B30  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
 12683   001B32  A4D8               	btfss	status,2,c
 12684   001B34  EF9E  F00D         	goto	u11451
 12685   001B38  EFA0  F00D         	goto	u11450
 12686   001B3C                     u11451:
 12687   001B3C  EFA2  F00D         	goto	l9494
 12688   001B40                     u11450:
 12689   001B40                     
 12690                           ; BSR set to: 0
 12691                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
 12692   001B40  4BA5               	infsnz	efgtoa@m& (0+255),f,b
 12693   001B42  2BA6               	incf	(efgtoa@m+1)& (0+255),f,b
 12694   001B44                     l9494:
 12695                           
 12696                           ; BSR set to: 0
 12697                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 12698   001B44  C0AD  F0C4         	movff	efgtoa@ou,efgtoa@u
 12699   001B48  C0AE  F0C5         	movff	efgtoa@ou+1,efgtoa@u+1
 12700   001B4C  C0AF  F0C6         	movff	efgtoa@ou+2,efgtoa@u+2
 12701   001B50  C0B0  F0C7         	movff	efgtoa@ou+3,efgtoa@u+3
 12702   001B54                     
 12703                           ; BSR set to: 0
 12704                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 772:     ne = (nm
      +                          ode == 'e') ? 0 : e;
 12705   001B54  0E65               	movlw	101
 12706   001B56  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
 12707   001B58  B4D8               	btfsc	status,2,c
 12708   001B5A  EFB1  F00D         	goto	u11461
 12709   001B5E  EFB3  F00D         	goto	u11460
 12710   001B62                     u11461:
 12711   001B62  EFB9  F00D         	goto	l9500
 12712   001B66                     u11460:
 12713   001B66                     
 12714                           ; BSR set to: 0
 12715   001B66  C0C0  F0A3         	movff	efgtoa@e,efgtoa@ne
 12716   001B6A  C0C1  F0A4         	movff	efgtoa@e+1,efgtoa@ne+1
 12717   001B6E  EFBD  F00D         	goto	l1382
 12718   001B72                     l9500:
 12719                           
 12720                           ; BSR set to: 0
 12721   001B72  0E00               	movlw	0
 12722   001B74  6FA4               	movwf	(efgtoa@ne+1)& (0+255),b
 12723   001B76  0E00               	movlw	0
 12724   001B78  6FA3               	movwf	efgtoa@ne& (0+255),b
 12725   001B7A                     l1382:
 12726                           
 12727                           ; BSR set to: 0
 12728                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 12729   001B7A  0E00               	movlw	0
 12730   001B7C  6FA2               	movwf	efgtoa@pp& (0+255),b
 12731                           
 12732                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 12733   001B7E  0E00               	movlw	0
 12734   001B80  6FA1               	movwf	(efgtoa@t+1)& (0+255),b
 12735   001B82  0E00               	movlw	0
 12736   001B84  6FA0               	movwf	efgtoa@t& (0+255),b
 12737                           
 12738                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 12739   001B86  0E00               	movlw	0
 12740   001B88  6FC3               	movwf	(efgtoa@i+1)& (0+255),b
 12741   001B8A  0E00               	movlw	0
 12742   001B8C  6FC2               	movwf	efgtoa@i& (0+255),b
 12743                           
 12744                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 12745   001B8E  EFD5  F00E         	goto	l9554
 12746   001B92                     l9502:
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
 12750   001B92  C0B3  F024         	movff	efgtoa@h,___fldiv@b
 12751   001B96  C0B4  F025         	movff	efgtoa@h+1,___fldiv@b+1
 12752   001B9A  C0B5  F026         	movff	efgtoa@h+2,___fldiv@b+2
 12753   001B9E  C0B6  F027         	movff	efgtoa@h+3,___fldiv@b+3
 12754   001BA2  C0C4  F028         	movff	efgtoa@u,___fldiv@a
 12755   001BA6  C0C5  F029         	movff	efgtoa@u+1,___fldiv@a+1
 12756   001BAA  C0C6  F02A         	movff	efgtoa@u+2,___fldiv@a+2
 12757   001BAE  C0C7  F02B         	movff	efgtoa@u+3,___fldiv@a+3
 12758   001BB2  EC6E  F01F         	call	___fldiv	;wreg free
 12759   001BB6  C024  F03D         	movff	?___fldiv,floorf@x
 12760   001BBA  C025  F03E         	movff	?___fldiv+1,floorf@x+1
 12761   001BBE  C026  F03F         	movff	?___fldiv+2,floorf@x+2
 12762   001BC2  C027  F040         	movff	?___fldiv+3,floorf@x+3
 12763   001BC6  EC41  F027         	call	_floorf	;wreg free
 12764   001BCA  C03D  F0B7         	movff	?_floorf,efgtoa@l
 12765   001BCE  C03E  F0B8         	movff	?_floorf+1,efgtoa@l+1
 12766   001BD2  C03F  F0B9         	movff	?_floorf+2,efgtoa@l+2
 12767   001BD6  C040  F0BA         	movff	?_floorf+3,efgtoa@l+3
 12768                           
 12769                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
 12770   001BDA  C0B7  F066         	movff	efgtoa@l,___fltol@f1
 12771   001BDE  C0B8  F067         	movff	efgtoa@l+1,___fltol@f1+1
 12772   001BE2  C0B9  F068         	movff	efgtoa@l+2,___fltol@f1+2
 12773   001BE6  C0BA  F069         	movff	efgtoa@l+3,___fltol@f1+3
 12774   001BEA  EC99  F032         	call	___fltol	;wreg free
 12775   001BEE  BE67               	btfsc	(?___fltol+1)^0,7,c
 12776   001BF0  EF05  F00E         	goto	u11470
 12777   001BF4  5067               	movf	(?___fltol+1)^0,w,c
 12778   001BF6  E107               	bnz	u11471
 12779   001BF8  0E0A               	movlw	10
 12780   001BFA  5C66               	subwf	?___fltol^0,w,c
 12781   001BFC  B0D8               	btfsc	status,0,c
 12782   001BFE  EF03  F00E         	goto	u11471
 12783   001C02  EF05  F00E         	goto	u11470
 12784   001C06                     u11471:
 12785   001C06  EF15  F00E         	goto	l9506
 12786   001C0A                     u11470:
 12787   001C0A  C0B7  F066         	movff	efgtoa@l,___fltol@f1
 12788   001C0E  C0B8  F067         	movff	efgtoa@l+1,___fltol@f1+1
 12789   001C12  C0B9  F068         	movff	efgtoa@l+2,___fltol@f1+2
 12790   001C16  C0BA  F069         	movff	efgtoa@l+3,___fltol@f1+3
 12791   001C1A  EC99  F032         	call	___fltol	;wreg free
 12792   001C1E  C066  F0A7         	movff	?___fltol,efgtoa@d
 12793   001C22  C067  F0A8         	movff	?___fltol+1,efgtoa@d+1
 12794   001C26  EF1A  F00E         	goto	l9508
 12795   001C2A                     l9506:
 12796   001C2A  0E00               	movlw	0
 12797   001C2C  0100               	movlb	0	; () banked
 12798   001C2E  6FA8               	movwf	(efgtoa@d+1)& (0+255),b
 12799   001C30  0E09               	movlw	9
 12800   001C32  6FA7               	movwf	efgtoa@d& (0+255),b
 12801   001C34                     l9508:
 12802                           
 12803                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 783:         if (
      +                          !d && (mode == 'g') && (ne < 0)
 12804   001C34  0100               	movlb	0	; () banked
 12805   001C36  51A7               	movf	efgtoa@d& (0+255),w,b
 12806   001C38  11A8               	iorwf	(efgtoa@d+1)& (0+255),w,b
 12807   001C3A  A4D8               	btfss	status,2,c
 12808   001C3C  EF22  F00E         	goto	u11481
 12809   001C40  EF24  F00E         	goto	u11480
 12810   001C44                     u11481:
 12811   001C44  EF41  F00E         	goto	l9518
 12812   001C48                     u11480:
 12813   001C48                     
 12814                           ; BSR set to: 0
 12815   001C48  0E67               	movlw	103
 12816   001C4A  19AC               	xorwf	efgtoa@mode& (0+255),w,b
 12817   001C4C  A4D8               	btfss	status,2,c
 12818   001C4E  EF2B  F00E         	goto	u11491
 12819   001C52  EF2D  F00E         	goto	u11490
 12820   001C56                     u11491:
 12821   001C56  EF41  F00E         	goto	l9518
 12822   001C5A                     u11490:
 12823   001C5A                     
 12824                           ; BSR set to: 0
 12825   001C5A  BFA4               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 12826   001C5C  EF34  F00E         	goto	u11500
 12827   001C60  EF32  F00E         	goto	u11501
 12828   001C64                     u11501:
 12829   001C64  EF41  F00E         	goto	l9518
 12830   001C68                     u11500:
 12831   001C68                     
 12832                           ; BSR set to: 0
 12833   001C68  0101               	movlb	1	; () banked
 12834   001C6A  B9B0               	btfsc	_flags& (0+255),4,b
 12835   001C6C  EF3A  F00E         	goto	u11511
 12836   001C70  EF3C  F00E         	goto	u11510
 12837   001C74                     u11511:
 12838   001C74  EF41  F00E         	goto	l9518
 12839   001C78                     u11510:
 12840   001C78                     
 12841                           ; BSR set to: 1
 12842                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 787:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 788:             ++t;
 12843   001C78  0100               	movlb	0	; () banked
 12844   001C7A  4BA0               	infsnz	efgtoa@t& (0+255),f,b
 12845   001C7C  2BA1               	incf	(efgtoa@t+1)& (0+255),f,b
 12846                           
 12847                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 789:         }
 12848   001C7E  EF89  F00E         	goto	l9546
 12849   001C82                     l9518:
 12850                           
 12851                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
 12852   001C82  0100               	movlb	0	; () banked
 12853   001C84  51A2               	movf	efgtoa@pp& (0+255),w,b
 12854   001C86  A4D8               	btfss	status,2,c
 12855   001C88  EF48  F00E         	goto	u11521
 12856   001C8C  EF4A  F00E         	goto	u11520
 12857   001C90                     u11521:
 12858   001C90  EF72  F00E         	goto	l9538
 12859   001C94                     u11520:
 12860   001C94                     
 12861                           ; BSR set to: 0
 12862   001C94  BFA4               	btfsc	(efgtoa@ne+1)& (0+255),7,b
 12863   001C96  EF51  F00E         	goto	u11530
 12864   001C9A  EF4F  F00E         	goto	u11531
 12865   001C9E                     u11531:
 12866   001C9E  EF72  F00E         	goto	l9538
 12867   001CA2                     u11530:
 12868   001CA2                     
 12869                           ; BSR set to: 0
 12870                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
 12871   001CA2  0E20               	movlw	low _dbuf
 12872   001CA4  25C8               	addwf	efgtoa@n& (0+255),w,b
 12873   001CA6  6ED9               	movwf	fsr2l,c
 12874   001CA8  0E03               	movlw	high _dbuf
 12875   001CAA  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12876   001CAC  6EDA               	movwf	fsr2h,c
 12877   001CAE  0E2E               	movlw	46
 12878   001CB0  6EDF               	movwf	indf2,c
 12879   001CB2                     
 12880                           ; BSR set to: 0
 12881   001CB2  4BC8               	infsnz	efgtoa@n& (0+255),f,b
 12882   001CB4  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
 12883   001CB6                     
 12884                           ; BSR set to: 0
 12885                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
 12886   001CB6  07B1               	decf	efgtoa@w& (0+255),f,b
 12887   001CB8  A0D8               	btfss	status,0,c
 12888   001CBA  07B2               	decf	(efgtoa@w+1)& (0+255),f,b
 12889   001CBC                     
 12890                           ; BSR set to: 0
 12891                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
 12892   001CBC  0E01               	movlw	1
 12893   001CBE  6FA2               	movwf	efgtoa@pp& (0+255),b
 12894   001CC0  EF72  F00E         	goto	l9538
 12895   001CC4                     l9530:
 12896                           
 12897                           ; BSR set to: 0
 12898                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
 12899   001CC4  0E20               	movlw	low _dbuf
 12900   001CC6  25C8               	addwf	efgtoa@n& (0+255),w,b
 12901   001CC8  6ED9               	movwf	fsr2l,c
 12902   001CCA  0E03               	movlw	high _dbuf
 12903   001CCC  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12904   001CCE  6EDA               	movwf	fsr2h,c
 12905   001CD0  0E30               	movlw	48
 12906   001CD2  6EDF               	movwf	indf2,c
 12907   001CD4                     
 12908                           ; BSR set to: 0
 12909   001CD4  4BC8               	infsnz	efgtoa@n& (0+255),f,b
 12910   001CD6  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
 12911   001CD8                     
 12912                           ; BSR set to: 0
 12913                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
 12914   001CD8  07B1               	decf	efgtoa@w& (0+255),f,b
 12915   001CDA  A0D8               	btfss	status,0,c
 12916   001CDC  07B2               	decf	(efgtoa@w+1)& (0+255),f,b
 12917   001CDE                     
 12918                           ; BSR set to: 0
 12919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
 12920   001CDE  07A0               	decf	efgtoa@t& (0+255),f,b
 12921   001CE0  A0D8               	btfss	status,0,c
 12922   001CE2  07A1               	decf	(efgtoa@t+1)& (0+255),f,b
 12923   001CE4                     l9538:
 12924                           
 12925                           ; BSR set to: 0
 12926                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
 12927   001CE4  51A0               	movf	efgtoa@t& (0+255),w,b
 12928   001CE6  11A1               	iorwf	(efgtoa@t+1)& (0+255),w,b
 12929   001CE8  A4D8               	btfss	status,2,c
 12930   001CEA  EF79  F00E         	goto	u11541
 12931   001CEE  EF7B  F00E         	goto	u11540
 12932   001CF2                     u11541:
 12933   001CF2  EF62  F00E         	goto	l9530
 12934   001CF6                     u11540:
 12935   001CF6                     
 12936                           ; BSR set to: 0
 12937                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
 12938   001CF6  0E20               	movlw	low _dbuf
 12939   001CF8  25C8               	addwf	efgtoa@n& (0+255),w,b
 12940   001CFA  6ED9               	movwf	fsr2l,c
 12941   001CFC  0E03               	movlw	high _dbuf
 12942   001CFE  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
 12943   001D00  6EDA               	movwf	fsr2h,c
 12944   001D02  51A7               	movf	efgtoa@d& (0+255),w,b
 12945   001D04  0F30               	addlw	48
 12946   001D06  6EDF               	movwf	indf2,c
 12947   001D08                     
 12948                           ; BSR set to: 0
 12949   001D08  4BC8               	infsnz	efgtoa@n& (0+255),f,b
 12950   001D0A  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
 12951   001D0C                     
 12952                           ; BSR set to: 0
 12953                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
 12954   001D0C  07B1               	decf	efgtoa@w& (0+255),f,b
 12955   001D0E  A0D8               	btfss	status,0,c
 12956   001D10  07B2               	decf	(efgtoa@w+1)& (0+255),f,b
 12957   001D12                     l9546:
 12958                           
 12959                           ; BSR set to: 0
 12960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -=
      +                           l*u.f;
 12961   001D12  C0B3  F074         	movff	efgtoa@h,___flsub@b
 12962   001D16  C0B4  F075         	movff	efgtoa@h+1,___flsub@b+1
 12963   001D1A  C0B5  F076         	movff	efgtoa@h+2,___flsub@b+2
 12964   001D1E  C0B6  F077         	movff	efgtoa@h+3,___flsub@b+3
 12965   001D22  C0B7  F041         	movff	efgtoa@l,___flmul@a
 12966   001D26  C0B8  F042         	movff	efgtoa@l+1,___flmul@a+1
 12967   001D2A  C0B9  F043         	movff	efgtoa@l+2,___flmul@a+2
 12968   001D2E  C0BA  F044         	movff	efgtoa@l+3,___flmul@a+3
 12969   001D32  C0C4  F03D         	movff	efgtoa@u,___flmul@b
 12970   001D36  C0C5  F03E         	movff	efgtoa@u+1,___flmul@b+1
 12971   001D3A  C0C6  F03F         	movff	efgtoa@u+2,___flmul@b+2
 12972   001D3E  C0C7  F040         	movff	efgtoa@u+3,___flmul@b+3
 12973   001D42  EC59  F01D         	call	___flmul	;wreg free
 12974   001D46  C03D  F078         	movff	?___flmul,___flsub@a
 12975   001D4A  C03E  F079         	movff	?___flmul+1,___flsub@a+1
 12976   001D4E  C03F  F07A         	movff	?___flmul+2,___flsub@a+2
 12977   001D52  C040  F07B         	movff	?___flmul+3,___flsub@a+3
 12978   001D56  EC54  F03B         	call	___flsub	;wreg free
 12979   001D5A  C074  F0B3         	movff	?___flsub,efgtoa@h
 12980   001D5E  C075  F0B4         	movff	?___flsub+1,efgtoa@h+1
 12981   001D62  C076  F0B5         	movff	?___flsub+2,efgtoa@h+2
 12982   001D66  C077  F0B6         	movff	?___flsub+3,efgtoa@h+3
 12983   001D6A                     
 12984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
 12985   001D6A  C0C4  F024         	movff	efgtoa@u,___fldiv@b
 12986   001D6E  C0C5  F025         	movff	efgtoa@u+1,___fldiv@b+1
 12987   001D72  C0C6  F026         	movff	efgtoa@u+2,___fldiv@b+2
 12988   001D76  C0C7  F027         	movff	efgtoa@u+3,___fldiv@b+3
 12989   001D7A  0E00               	movlw	0
 12990   001D7C  6E28               	movwf	___fldiv@a^0,c
 12991   001D7E  0E00               	movlw	0
 12992   001D80  6E29               	movwf	(___fldiv@a+1)^0,c
 12993   001D82  0E20               	movlw	32
 12994   001D84  6E2A               	movwf	(___fldiv@a+2)^0,c
 12995   001D86  0E41               	movlw	65
 12996   001D88  6E2B               	movwf	(___fldiv@a+3)^0,c
 12997   001D8A  EC6E  F01F         	call	___fldiv	;wreg free
 12998   001D8E  C024  F0C4         	movff	?___fldiv,efgtoa@u
 12999   001D92  C025  F0C5         	movff	?___fldiv+1,efgtoa@u+1
 13000   001D96  C026  F0C6         	movff	?___fldiv+2,efgtoa@u+2
 13001   001D9A  C027  F0C7         	movff	?___fldiv+3,efgtoa@u+3
 13002   001D9E                     
 13003                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
 13004   001D9E  0100               	movlb	0	; () banked
 13005   001DA0  07A3               	decf	efgtoa@ne& (0+255),f,b
 13006   001DA2  A0D8               	btfss	status,0,c
 13007   001DA4  07A4               	decf	(efgtoa@ne+1)& (0+255),f,b
 13008   001DA6                     
 13009                           ; BSR set to: 0
 13010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
 13011   001DA6  4BC2               	infsnz	efgtoa@i& (0+255),f,b
 13012   001DA8  2BC3               	incf	(efgtoa@i+1)& (0+255),f,b
 13013   001DAA                     l9554:
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
 13017   001DAA  51A5               	movf	efgtoa@m& (0+255),w,b
 13018   001DAC  5DC2               	subwf	efgtoa@i& (0+255),w,b
 13019   001DAE  51C3               	movf	(efgtoa@i+1)& (0+255),w,b
 13020   001DB0  0A80               	xorlw	128
 13021   001DB2  6E7C               	movwf	??_efgtoa^0,c
 13022   001DB4  51A6               	movf	(efgtoa@m+1)& (0+255),w,b
 13023   001DB6  0A80               	xorlw	128
 13024   001DB8  587C               	subwfb	??_efgtoa^0,w,c
 13025   001DBA  B0D8               	btfsc	status,0,c
 13026   001DBC  EFE2  F00E         	goto	u11551
 13027   001DC0  EFE4  F00E         	goto	u11550
 13028   001DC4                     u11551:
 13029   001DC4  EFF2  F00E         	goto	l9558
 13030   001DC8                     u11550:
 13031   001DC8                     
 13032                           ; BSR set to: 0
 13033   001DC8  BFC9               	btfsc	(efgtoa@n+1)& (0+255),7,b
 13034   001DCA  EFF0  F00E         	goto	u11561
 13035   001DCE  51C9               	movf	(efgtoa@n+1)& (0+255),w,b
 13036   001DD0  E109               	bnz	u11560
 13037   001DD2  0E4B               	movlw	75
 13038   001DD4  5DC8               	subwf	efgtoa@n& (0+255),w,b
 13039   001DD6  A0D8               	btfss	status,0,c
 13040   001DD8  EFF0  F00E         	goto	u11561
 13041   001DDC  EFF2  F00E         	goto	u11560
 13042   001DE0                     u11561:
 13043   001DE0  EFC9  F00D         	goto	l9502
 13044   001DE4                     u11560:
 13045   001DE4                     l9558:
 13046                           
 13047                           ; BSR set to: 0
 13048                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 812:     if (!pp 
      +                          && (flags & (1 << 4))) {
 13049   001DE4  51A2               	movf	efgtoa@pp& (0+255),w,b
 13050   001DE6  A4D8               	btfss	status,2,c
 13051   001DE8  EFF8  F00E         	goto	u11571
 13052   001DEC  EFFA  F00E         	goto	u11570
 13053   001DF0                     u11571:
 13054   001DF0  EF0D  F00F         	goto	l9566
 13055   001DF4                     u11570:
 13056   001DF4                     
 13057                           ; BSR set to: 0
 13058   001DF4  0101               	movlb	1	; () banked
 13059   001DF6  A9B0               	btfss	_flags& (0+255),4,b
 13060   001DF8  EF00  F00F         	goto	u11581
 13061   001DFC  EF02  F00F         	goto	u11580
 13062   001E00                     u11581:
 13063   001E00  EF0D  F00F         	goto	l9566
 13064   001E04                     u11580:
 13065   001E04                     
 13066                           ; BSR set to: 1
 13067                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 813:         dbuf
      +                          [n++] = '.';
 13068   001E04  0E20               	movlw	low _dbuf
 13069   001E06  0100               	movlb	0	; () banked
 13070   001E08  25C8               	addwf	efgtoa@n& (0+255),w,b
 13071   001E0A  6ED9               	movwf	fsr2l,c
 13072   001E0C  0E03               	movlw	high _dbuf
 13073   001E0E  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13074   001E10  6EDA               	movwf	fsr2h,c
 13075   001E12  0E2E               	movlw	46
 13076   001E14  6EDF               	movwf	indf2,c
 13077   001E16                     
 13078                           ; BSR set to: 0
 13079   001E16  4BC8               	infsnz	efgtoa@n& (0+255),f,b
 13080   001E18  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
 13081   001E1A                     l9566:
 13082                           
 13083                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
 13084   001E1A  0E00               	movlw	0
 13085   001E1C  0100               	movlb	0	; () banked
 13086   001E1E  6FC3               	movwf	(efgtoa@i+1)& (0+255),b
 13087   001E20  0E4F               	movlw	79
 13088   001E22  6FC2               	movwf	efgtoa@i& (0+255),b
 13089   001E24                     
 13090                           ; BSR set to: 0
 13091                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
 13092   001E24  0E20               	movlw	low _dbuf
 13093   001E26  25C2               	addwf	efgtoa@i& (0+255),w,b
 13094   001E28  6ED9               	movwf	fsr2l,c
 13095   001E2A  0E03               	movlw	high _dbuf
 13096   001E2C  21C3               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13097   001E2E  6EDA               	movwf	fsr2h,c
 13098   001E30  6ADF               	clrf	indf2,c
 13099   001E32                     
 13100                           ; BSR set to: 0
 13101                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 821:     if (nmod
      +                          e == 'e') {
 13102   001E32  0E65               	movlw	101
 13103   001E34  19AB               	xorwf	efgtoa@nmode& (0+255),w,b
 13104   001E36  A4D8               	btfss	status,2,c
 13105   001E38  EF20  F00F         	goto	u11591
 13106   001E3C  EF22  F00F         	goto	u11590
 13107   001E40                     u11591:
 13108   001E40  EFBC  F00F         	goto	l9620
 13109   001E44                     u11590:
 13110   001E44                     
 13111                           ; BSR set to: 0
 13112                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 822:         esig
      +                          n = 0;
 13113   001E44  0E00               	movlw	0
 13114   001E46  6F9F               	movwf	efgtoa@esign& (0+255),b
 13115   001E48                     
 13116                           ; BSR set to: 0
 13117                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 823:         if (
      +                          e < 0) {
 13118   001E48  BFC1               	btfsc	(efgtoa@e+1)& (0+255),7,b
 13119   001E4A  EF2B  F00F         	goto	u11600
 13120   001E4E  EF29  F00F         	goto	u11601
 13121   001E52                     u11601:
 13122   001E52  EF31  F00F         	goto	l9580
 13123   001E56                     u11600:
 13124   001E56                     
 13125                           ; BSR set to: 0
 13126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 824:             
      +                          esign = 1;
 13127   001E56  0E01               	movlw	1
 13128   001E58  6F9F               	movwf	efgtoa@esign& (0+255),b
 13129   001E5A                     
 13130                           ; BSR set to: 0
 13131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 825:             
      +                          e = -e;
 13132   001E5A  6DC0               	negf	efgtoa@e& (0+255),b
 13133   001E5C  1FC1               	comf	(efgtoa@e+1)& (0+255),f,b
 13134   001E5E  B0D8               	btfsc	status,0,c
 13135   001E60  2BC1               	incf	(efgtoa@e+1)& (0+255),f,b
 13136   001E62                     l9580:
 13137                           
 13138                           ; BSR set to: 0
 13139                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 827:         p = 
      +                          2;
 13140   001E62  0E00               	movlw	0
 13141   001E64  6FAA               	movwf	(efgtoa@p+1)& (0+255),b
 13142   001E66  0E02               	movlw	2
 13143   001E68  6FA9               	movwf	efgtoa@p& (0+255),b
 13144                           
 13145                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 828:         whil
      +                          e (e || (0 < p)) {
 13146   001E6A  EF62  F00F         	goto	l9592
 13147   001E6E                     l9582:
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 829:             
      +                          --i;
 13151   001E6E  07C2               	decf	efgtoa@i& (0+255),f,b
 13152   001E70  A0D8               	btfss	status,0,c
 13153   001E72  07C3               	decf	(efgtoa@i+1)& (0+255),f,b
 13154   001E74                     
 13155                           ; BSR set to: 0
 13156                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 830:             
      +                          dbuf[i] = '0' + (e % 10);
 13157   001E74  0E20               	movlw	low _dbuf
 13158   001E76  25C2               	addwf	efgtoa@i& (0+255),w,b
 13159   001E78  6ED9               	movwf	fsr2l,c
 13160   001E7A  0E03               	movlw	high _dbuf
 13161   001E7C  21C3               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13162   001E7E  6EDA               	movwf	fsr2h,c
 13163   001E80  C0C0  F001         	movff	efgtoa@e,___awmod@dividend
 13164   001E84  C0C1  F002         	movff	efgtoa@e+1,___awmod@dividend+1
 13165   001E88  0E00               	movlw	0
 13166   001E8A  6E04               	movwf	(___awmod@divisor+1)^0,c
 13167   001E8C  0E0A               	movlw	10
 13168   001E8E  6E03               	movwf	___awmod@divisor^0,c
 13169   001E90  EC6B  F037         	call	___awmod	;wreg free
 13170   001E94  5001               	movf	?___awmod^0,w,c
 13171   001E96  0F30               	addlw	48
 13172   001E98  6EDF               	movwf	indf2,c
 13173   001E9A                     
 13174                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 831:             
      +                          e = e / 10;
 13175   001E9A  C0C0  F001         	movff	efgtoa@e,___awdiv@dividend
 13176   001E9E  C0C1  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
 13177   001EA2  0E00               	movlw	0
 13178   001EA4  6E04               	movwf	(___awdiv@divisor+1)^0,c
 13179   001EA6  0E0A               	movlw	10
 13180   001EA8  6E03               	movwf	___awdiv@divisor^0,c
 13181   001EAA  EC4E  F036         	call	___awdiv	;wreg free
 13182   001EAE  C001  F0C0         	movff	?___awdiv,efgtoa@e
 13183   001EB2  C002  F0C1         	movff	?___awdiv+1,efgtoa@e+1
 13184   001EB6                     
 13185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 832:             
      +                          --p;
 13186   001EB6  0100               	movlb	0	; () banked
 13187   001EB8  07A9               	decf	efgtoa@p& (0+255),f,b
 13188   001EBA  A0D8               	btfss	status,0,c
 13189   001EBC  07AA               	decf	(efgtoa@p+1)& (0+255),f,b
 13190   001EBE                     
 13191                           ; BSR set to: 0
 13192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 833:             
      +                          --w;
 13193   001EBE  07B1               	decf	efgtoa@w& (0+255),f,b
 13194   001EC0  A0D8               	btfss	status,0,c
 13195   001EC2  07B2               	decf	(efgtoa@w+1)& (0+255),f,b
 13196   001EC4                     l9592:
 13197                           
 13198                           ; BSR set to: 0
 13199                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 828:         whil
      +                          e (e || (0 < p)) {
 13200   001EC4  51C0               	movf	efgtoa@e& (0+255),w,b
 13201   001EC6  11C1               	iorwf	(efgtoa@e+1)& (0+255),w,b
 13202   001EC8  A4D8               	btfss	status,2,c
 13203   001ECA  EF69  F00F         	goto	u11611
 13204   001ECE  EF6B  F00F         	goto	u11610
 13205   001ED2                     u11611:
 13206   001ED2  EF37  F00F         	goto	l9582
 13207   001ED6                     u11610:
 13208   001ED6                     
 13209                           ; BSR set to: 0
 13210   001ED6  BFAA               	btfsc	(efgtoa@p+1)& (0+255),7,b
 13211   001ED8  EF78  F00F         	goto	u11620
 13212   001EDC  51AA               	movf	(efgtoa@p+1)& (0+255),w,b
 13213   001EDE  E106               	bnz	u11621
 13214   001EE0  05A9               	decf	efgtoa@p& (0+255),w,b
 13215   001EE2  B0D8               	btfsc	status,0,c
 13216   001EE4  EF76  F00F         	goto	u11621
 13217   001EE8  EF78  F00F         	goto	u11620
 13218   001EEC                     u11621:
 13219   001EEC  EF37  F00F         	goto	l9582
 13220   001EF0                     u11620:
 13221   001EF0                     
 13222                           ; BSR set to: 0
 13223                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 835:         --i;
 13224   001EF0  07C2               	decf	efgtoa@i& (0+255),f,b
 13225   001EF2  A0D8               	btfss	status,0,c
 13226   001EF4  07C3               	decf	(efgtoa@i+1)& (0+255),f,b
 13227   001EF6                     
 13228                           ; BSR set to: 0
 13229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 836:         dbuf
      +                          [i] = esign ? '-' : '+';
 13230   001EF6  519F               	movf	efgtoa@esign& (0+255),w,b
 13231   001EF8  A4D8               	btfss	status,2,c
 13232   001EFA  EF81  F00F         	goto	u11631
 13233   001EFE  EF83  F00F         	goto	u11630
 13234   001F02                     u11631:
 13235   001F02  EF89  F00F         	goto	l9602
 13236   001F06                     u11630:
 13237   001F06                     
 13238                           ; BSR set to: 0
 13239   001F06  0E00               	movlw	0
 13240   001F08  6F9C               	movwf	(_efgtoa$1341+1)& (0+255),b
 13241   001F0A  0E2B               	movlw	43
 13242   001F0C  6F9B               	movwf	_efgtoa$1341& (0+255),b
 13243   001F0E  EF8D  F00F         	goto	l9604
 13244   001F12                     l9602:
 13245                           
 13246                           ; BSR set to: 0
 13247   001F12  0E00               	movlw	0
 13248   001F14  6F9C               	movwf	(_efgtoa$1341+1)& (0+255),b
 13249   001F16  0E2D               	movlw	45
 13250   001F18  6F9B               	movwf	_efgtoa$1341& (0+255),b
 13251   001F1A                     l9604:
 13252                           
 13253                           ; BSR set to: 0
 13254   001F1A  0E20               	movlw	low _dbuf
 13255   001F1C  25C2               	addwf	efgtoa@i& (0+255),w,b
 13256   001F1E  6ED9               	movwf	fsr2l,c
 13257   001F20  0E03               	movlw	high _dbuf
 13258   001F22  21C3               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13259   001F24  6EDA               	movwf	fsr2h,c
 13260   001F26  C09B  FFDF         	movff	_efgtoa$1341,indf2
 13261   001F2A                     
 13262                           ; BSR set to: 0
 13263                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 837:         --w;
 13264   001F2A  07B1               	decf	efgtoa@w& (0+255),f,b
 13265   001F2C  A0D8               	btfss	status,0,c
 13266   001F2E  07B2               	decf	(efgtoa@w+1)& (0+255),f,b
 13267   001F30                     
 13268                           ; BSR set to: 0
 13269                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 838:         --i;
 13270   001F30  07C2               	decf	efgtoa@i& (0+255),f,b
 13271   001F32  A0D8               	btfss	status,0,c
 13272   001F34  07C3               	decf	(efgtoa@i+1)& (0+255),f,b
 13273   001F36                     
 13274                           ; BSR set to: 0
 13275                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 840:         dbuf
      +                          [i] = (((unsigned char)(((int)c)-'A')) < 26) ? 'E' : 'e';
 13276   001F36  C096  F07C         	movff	efgtoa@c,??_efgtoa
 13277   001F3A  0EBF               	movlw	191
 13278   001F3C  267C               	addwf	??_efgtoa^0,f,c
 13279   001F3E  0E19               	movlw	25
 13280   001F40  647C               	cpfsgt	??_efgtoa^0,c
 13281   001F42  EFA5  F00F         	goto	u11641
 13282   001F46  EFA7  F00F         	goto	u11640
 13283   001F4A                     u11641:
 13284   001F4A  EFAD  F00F         	goto	l9614
 13285   001F4E                     u11640:
 13286   001F4E                     
 13287                           ; BSR set to: 0
 13288   001F4E  0E00               	movlw	0
 13289   001F50  6F9E               	movwf	(_efgtoa$1342+1)& (0+255),b
 13290   001F52  0E65               	movlw	101
 13291   001F54  6F9D               	movwf	_efgtoa$1342& (0+255),b
 13292   001F56  EFB1  F00F         	goto	l9616
 13293   001F5A                     l9614:
 13294                           
 13295                           ; BSR set to: 0
 13296   001F5A  0E00               	movlw	0
 13297   001F5C  6F9E               	movwf	(_efgtoa$1342+1)& (0+255),b
 13298   001F5E  0E45               	movlw	69
 13299   001F60  6F9D               	movwf	_efgtoa$1342& (0+255),b
 13300   001F62                     l9616:
 13301                           
 13302                           ; BSR set to: 0
 13303   001F62  0E20               	movlw	low _dbuf
 13304   001F64  25C2               	addwf	efgtoa@i& (0+255),w,b
 13305   001F66  6ED9               	movwf	fsr2l,c
 13306   001F68  0E03               	movlw	high _dbuf
 13307   001F6A  21C3               	addwfc	(efgtoa@i+1)& (0+255),w,b
 13308   001F6C  6EDA               	movwf	fsr2h,c
 13309   001F6E  C09D  FFDF         	movff	_efgtoa$1342,indf2
 13310   001F72                     
 13311                           ; BSR set to: 0
 13312                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 844:         --w;
 13313   001F72  07B1               	decf	efgtoa@w& (0+255),f,b
 13314   001F74  A0D8               	btfss	status,0,c
 13315   001F76  07B2               	decf	(efgtoa@w+1)& (0+255),f,b
 13316   001F78                     l9620:
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 13320   001F78  0E20               	movlw	low _dbuf
 13321   001F7A  6E7C               	movwf	??_efgtoa^0,c
 13322   001F7C  0E03               	movlw	high _dbuf
 13323   001F7E  6E7D               	movwf	(??_efgtoa+1)^0,c
 13324   001F80  51C8               	movf	efgtoa@n& (0+255),w,b
 13325   001F82  5E7C               	subwf	??_efgtoa^0,f,c
 13326   001F84  51C9               	movf	(efgtoa@n+1)& (0+255),w,b
 13327   001F86  5A7D               	subwfb	(??_efgtoa+1)^0,f,c
 13328   001F88  51C2               	movf	efgtoa@i& (0+255),w,b
 13329   001F8A  247C               	addwf	??_efgtoa^0,w,c
 13330   001F8C  6E01               	movwf	memcpy@d1^0,c
 13331   001F8E  51C3               	movf	(efgtoa@i+1)& (0+255),w,b
 13332   001F90  207D               	addwfc	(??_efgtoa+1)^0,w,c
 13333   001F92  6E02               	movwf	(memcpy@d1+1)^0,c
 13334   001F94  0E20               	movlw	low _dbuf
 13335   001F96  6E03               	movwf	memcpy@s1^0,c
 13336   001F98  0E03               	movlw	high _dbuf
 13337   001F9A  6E04               	movwf	(memcpy@s1+1)^0,c
 13338   001F9C  C0C8  F005         	movff	efgtoa@n,memcpy@n
 13339   001FA0  C0C9  F006         	movff	efgtoa@n+1,memcpy@n+1
 13340   001FA4  EC07  F03B         	call	_memcpy	;wreg free
 13341   001FA8                     
 13342                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 13343   001FA8  0100               	movlb	0	; () banked
 13344   001FAA  51C8               	movf	efgtoa@n& (0+255),w,b
 13345   001FAC  5DC2               	subwf	efgtoa@i& (0+255),w,b
 13346   001FAE  6FC8               	movwf	efgtoa@n& (0+255),b
 13347   001FB0  51C9               	movf	(efgtoa@n+1)& (0+255),w,b
 13348   001FB2  59C3               	subwfb	(efgtoa@i+1)& (0+255),w,b
 13349   001FB4  6FC9               	movwf	(efgtoa@n+1)& (0+255),b
 13350   001FB6                     
 13351                           ; BSR set to: 0
 13352                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 13353   001FB6  51BB               	movf	efgtoa@sign& (0+255),w,b
 13354   001FB8  A4D8               	btfss	status,2,c
 13355   001FBA  EFE1  F00F         	goto	u11651
 13356   001FBE  EFE4  F00F         	goto	u11650
 13357   001FC2                     u11651:
 13358   001FC2  0E01               	movlw	1
 13359   001FC4  EFE5  F00F         	goto	u11660
 13360   001FC8                     u11650:
 13361   001FC8  0E00               	movlw	0
 13362   001FCA                     u11660:
 13363   001FCA  6FC2               	movwf	efgtoa@i& (0+255),b
 13364   001FCC  6BC3               	clrf	(efgtoa@i+1)& (0+255),b
 13365   001FCE                     
 13366                           ; BSR set to: 0
 13367                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
 13368   001FCE  0101               	movlb	1	; () banked
 13369   001FD0  A3B0               	btfss	_flags& (0+255),1,b
 13370   001FD2  EFED  F00F         	goto	u11671
 13371   001FD6  EFEF  F00F         	goto	u11670
 13372   001FDA                     u11671:
 13373   001FDA  EF1E  F010         	goto	l9638
 13374   001FDE                     u11670:
 13375   001FDE  EFFF  F00F         	goto	l9634
 13376   001FE2                     l9630:
 13377                           
 13378                           ; BSR set to: 0
 13379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
 13380   001FE2  07C8               	decf	efgtoa@n& (0+255),f,b
 13381   001FE4  A0D8               	btfss	status,0,c
 13382   001FE6  07C9               	decf	(efgtoa@n+1)& (0+255),f,b
 13383   001FE8  0E20               	movlw	low _dbuf
 13384   001FEA  25C8               	addwf	efgtoa@n& (0+255),w,b
 13385   001FEC  6ED9               	movwf	fsr2l,c
 13386   001FEE  0E03               	movlw	high _dbuf
 13387   001FF0  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13388   001FF2  6EDA               	movwf	fsr2h,c
 13389   001FF4  0E30               	movlw	48
 13390   001FF6  6EDF               	movwf	indf2,c
 13391   001FF8                     
 13392                           ; BSR set to: 0
 13393                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 856:    w--;
 13394   001FF8  07B1               	decf	efgtoa@w& (0+255),f,b
 13395   001FFA  A0D8               	btfss	status,0,c
 13396   001FFC  07B2               	decf	(efgtoa@w+1)& (0+255),f,b
 13397   001FFE                     l9634:
 13398                           
 13399                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
 13400   001FFE  0100               	movlb	0	; () banked
 13401   002000  51B1               	movf	efgtoa@w& (0+255),w,b
 13402   002002  5DC2               	subwf	efgtoa@i& (0+255),w,b
 13403   002004  51C3               	movf	(efgtoa@i+1)& (0+255),w,b
 13404   002006  0A80               	xorlw	128
 13405   002008  6E7C               	movwf	??_efgtoa^0,c
 13406   00200A  51B2               	movf	(efgtoa@w+1)& (0+255),w,b
 13407   00200C  0A80               	xorlw	128
 13408   00200E  587C               	subwfb	??_efgtoa^0,w,c
 13409   002010  B0D8               	btfsc	status,0,c
 13410   002012  EF0D  F010         	goto	u11681
 13411   002016  EF0F  F010         	goto	u11680
 13412   00201A                     u11681:
 13413   00201A  EF1E  F010         	goto	l9638
 13414   00201E                     u11680:
 13415   00201E                     
 13416                           ; BSR set to: 0
 13417   00201E  51C8               	movf	efgtoa@n& (0+255),w,b
 13418   002020  5DC2               	subwf	efgtoa@i& (0+255),w,b
 13419   002022  51C3               	movf	(efgtoa@i+1)& (0+255),w,b
 13420   002024  0A80               	xorlw	128
 13421   002026  6E7C               	movwf	??_efgtoa^0,c
 13422   002028  51C9               	movf	(efgtoa@n+1)& (0+255),w,b
 13423   00202A  0A80               	xorlw	128
 13424   00202C  587C               	subwfb	??_efgtoa^0,w,c
 13425   00202E  A0D8               	btfss	status,0,c
 13426   002030  EF1C  F010         	goto	u11691
 13427   002034  EF1E  F010         	goto	u11690
 13428   002038                     u11691:
 13429   002038  EFF1  F00F         	goto	l9630
 13430   00203C                     u11690:
 13431   00203C                     l9638:
 13432                           
 13433                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 13434   00203C  0100               	movlb	0	; () banked
 13435   00203E  51BB               	movf	efgtoa@sign& (0+255),w,b
 13436   002040  B4D8               	btfsc	status,2,c
 13437   002042  EF25  F010         	goto	u11701
 13438   002046  EF27  F010         	goto	u11700
 13439   00204A                     u11701:
 13440   00204A  EF32  F010         	goto	l9642
 13441   00204E                     u11700:
 13442   00204E                     
 13443                           ; BSR set to: 0
 13444                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 13445   00204E  07C8               	decf	efgtoa@n& (0+255),f,b
 13446   002050  A0D8               	btfss	status,0,c
 13447   002052  07C9               	decf	(efgtoa@n+1)& (0+255),f,b
 13448   002054  0E20               	movlw	low _dbuf
 13449   002056  25C8               	addwf	efgtoa@n& (0+255),w,b
 13450   002058  6ED9               	movwf	fsr2l,c
 13451   00205A  0E03               	movlw	high _dbuf
 13452   00205C  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13453   00205E  6EDA               	movwf	fsr2h,c
 13454   002060  C0BB  FFDF         	movff	efgtoa@sign,indf2
 13455   002064                     l9642:
 13456                           
 13457                           ; BSR set to: 0
 13458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 13459   002064  51C2               	movf	efgtoa@i& (0+255),w,b
 13460   002066  5FB1               	subwf	efgtoa@w& (0+255),f,b
 13461   002068  51C3               	movf	(efgtoa@i+1)& (0+255),w,b
 13462   00206A  5BB2               	subwfb	(efgtoa@w+1)& (0+255),f,b
 13463   00206C                     
 13464                           ; BSR set to: 0
 13465                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          int) pad(fp, &dbuf[n], w);
 13466   00206C  C090  F011         	movff	efgtoa@fp,pad@fp
 13467   002070  C091  F012         	movff	efgtoa@fp+1,pad@fp+1
 13468   002074  0E20               	movlw	low _dbuf
 13469   002076  25C8               	addwf	efgtoa@n& (0+255),w,b
 13470   002078  6E13               	movwf	pad@buf^0,c
 13471   00207A  0E03               	movlw	high _dbuf
 13472   00207C  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
 13473   00207E  6E14               	movwf	(pad@buf+1)^0,c
 13474   002080  C0B1  F015         	movff	efgtoa@w,pad@p
 13475   002084  C0B2  F016         	movff	efgtoa@w+1,pad@p+1
 13476   002088  EC0E  F037         	call	_pad	;wreg free
 13477   00208C  C011  F090         	movff	?_pad,?_efgtoa
 13478   002090  C012  F091         	movff	?_pad+1,?_efgtoa+1
 13479   002094                     l1332:
 13480   002094  0012               	return		;funcret
 13481   002096                     __end_of_efgtoa:
 13482                           	callstack 0
 13483                           
 13484 ;; *************** function _labs *****************
 13485 ;; Defined at:
 13486 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
 13487 ;; Parameters:    Size  Location     Type
 13488 ;;  a               4    0[COMRAM] long 
 13489 ;; Auto vars:     Size  Location     Type
 13490 ;;		None
 13491 ;; Return value:  Size  Location     Type
 13492 ;;                  4    0[COMRAM] long 
 13493 ;; Registers used:
 13494 ;;		wreg, status,2, status,0
 13495 ;; Tracked objects:
 13496 ;;		On entry : 0/0
 13497 ;;		On exit  : 0/0
 13498 ;;		Unchanged: 0/0
 13499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13502 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13503 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13504 ;;Total ram usage:        8 bytes
 13505 ;; Hardware stack levels used: 1
 13506 ;; Hardware stack levels required when called: 1
 13507 ;; This function calls:
 13508 ;;		Nothing
 13509 ;; This function is called by:
 13510 ;;		_efgtoa
 13511 ;; This function uses a non-reentrant model
 13512 ;;
 13513                           
 13514                           	psect	text43
 13515   0075B8                     __ptext43:
 13516                           	callstack 0
 13517   0075B8                     _labs:
 13518                           	callstack 22
 13519   0075B8  BE04               	btfsc	(labs@a+3)^0,7,c
 13520   0075BA  EFE1  F03A         	goto	u6341
 13521   0075BE  EFE3  F03A         	goto	u6340
 13522   0075C2                     u6341:
 13523   0075C2  EFED  F03A         	goto	l6046
 13524   0075C6                     u6340:
 13525   0075C6  C001  F001         	movff	labs@a,?_labs
 13526   0075CA  C002  F002         	movff	labs@a+1,?_labs+1
 13527   0075CE  C003  F003         	movff	labs@a+2,?_labs+2
 13528   0075D2  C004  F004         	movff	labs@a+3,?_labs+3
 13529   0075D6  EF06  F03B         	goto	l1663
 13530   0075DA                     l6046:
 13531   0075DA  C001  F005         	movff	labs@a,??_labs
 13532   0075DE  C002  F006         	movff	labs@a+1,??_labs+1
 13533   0075E2  C003  F007         	movff	labs@a+2,??_labs+2
 13534   0075E6  C004  F008         	movff	labs@a+3,??_labs+3
 13535   0075EA  1E05               	comf	??_labs^0,f,c
 13536   0075EC  1E06               	comf	(??_labs+1)^0,f,c
 13537   0075EE  1E07               	comf	(??_labs+2)^0,f,c
 13538   0075F0  1E08               	comf	(??_labs+3)^0,f,c
 13539   0075F2  2A05               	incf	??_labs^0,f,c
 13540   0075F4  0E00               	movlw	0
 13541   0075F6  2206               	addwfc	(??_labs+1)^0,f,c
 13542   0075F8  2207               	addwfc	(??_labs+2)^0,f,c
 13543   0075FA  2208               	addwfc	(??_labs+3)^0,f,c
 13544   0075FC  C005  F001         	movff	??_labs,?_labs
 13545   007600  C006  F002         	movff	??_labs+1,?_labs+1
 13546   007604  C007  F003         	movff	??_labs+2,?_labs+2
 13547   007608  C008  F004         	movff	??_labs+3,?_labs+3
 13548   00760C                     l1663:
 13549   00760C  0012               	return		;funcret
 13550   00760E                     __end_of_labs:
 13551                           	callstack 0
 13552                           
 13553 ;; *************** function _dtoa *****************
 13554 ;; Defined at:
 13555 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 13556 ;; Parameters:    Size  Location     Type
 13557 ;;  fp              2   26[COMRAM] PTR struct _IO_FILE
 13558 ;;		 -> vsnprintf@f(12), 
 13559 ;;  d               8   28[COMRAM] long long 
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;  i               2   51[COMRAM] int 
 13562 ;;  w               2   48[COMRAM] int 
 13563 ;;  p               2   46[COMRAM] int 
 13564 ;;  s               1   50[COMRAM] unsigned char 
 13565 ;; Return value:  Size  Location     Type
 13566 ;;                  2   26[COMRAM] int 
 13567 ;; Registers used:
 13568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13569 ;; Tracked objects:
 13570 ;;		On entry : 0/0
 13571 ;;		On exit  : 0/0
 13572 ;;		Unchanged: 0/0
 13573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13574 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13575 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13576 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13577 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13578 ;;Total ram usage:       27 bytes
 13579 ;; Hardware stack levels used: 1
 13580 ;; Hardware stack levels required when called: 5
 13581 ;; This function calls:
 13582 ;;		___aodiv
 13583 ;;		___aomod
 13584 ;;		_abs
 13585 ;;		_pad
 13586 ;; This function is called by:
 13587 ;;		_vfpfcnvrt
 13588 ;; This function uses a non-reentrant model
 13589 ;;
 13590                           
 13591                           	psect	text44
 13592   004504                     __ptext44:
 13593                           	callstack 0
 13594   004504                     _dtoa:
 13595                           	callstack 19
 13596   004504                     
 13597                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static int d
      +                          toa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 
      +                          515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516:
      +                               int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 518
      +                          :  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:    
      +                           s = d < 0 ? 1 : 0;
 13598   004504  BE24               	btfsc	(dtoa@d+7)^0,7,c
 13599   004506  EF87  F022         	goto	u10951
 13600   00450A  EF8A  F022         	goto	u10950
 13601   00450E                     u10951:
 13602   00450E  0E01               	movlw	1
 13603   004510  EF8B  F022         	goto	u10960
 13604   004514                     u10950:
 13605   004514  0E00               	movlw	0
 13606   004516                     u10960:
 13607   004516  6E33               	movwf	dtoa@s^0,c
 13608                           
 13609                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 529:     if (!(pr
      +                          ec < 0)) {
 13610   004518  0101               	movlb	1	; () banked
 13611   00451A  BFAD               	btfsc	(_prec+1)& (0+255),7,b
 13612   00451C  EF92  F022         	goto	u10971
 13613   004520  EF94  F022         	goto	u10970
 13614   004524                     u10971:
 13615   004524  EF95  F022         	goto	l9244
 13616   004528                     u10970:
 13617   004528                     
 13618                           ; BSR set to: 1
 13619                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 530:         flag
      +                          s &= ~(1 << 1);
 13620   004528  93B0               	bcf	_flags& (0+255),1,b
 13621   00452A                     l9244:
 13622                           
 13623                           ; BSR set to: 1
 13624                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
 13625   00452A  BFAD               	btfsc	(_prec+1)& (0+255),7,b
 13626   00452C  EF9C  F022         	goto	u10980
 13627   004530  EF9A  F022         	goto	u10981
 13628   004534                     u10981:
 13629   004534  EFA2  F022         	goto	l1295
 13630   004538                     u10980:
 13631   004538                     
 13632                           ; BSR set to: 1
 13633   004538  0E00               	movlw	0
 13634   00453A  6E30               	movwf	(dtoa@p+1)^0,c
 13635   00453C  0E01               	movlw	1
 13636   00453E  6E2F               	movwf	dtoa@p^0,c
 13637   004540  EFA6  F022         	goto	l1297
 13638   004544                     l1295:
 13639                           
 13640                           ; BSR set to: 1
 13641   004544  C1AC  F02F         	movff	_prec,dtoa@p
 13642   004548  C1AD  F030         	movff	_prec+1,dtoa@p+1
 13643   00454C                     l1297:
 13644                           
 13645                           ; BSR set to: 1
 13646                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
 13647   00454C  C1AA  F031         	movff	_width,dtoa@w
 13648   004550  C1AB  F032         	movff	_width+1,dtoa@w+1
 13649   004554                     
 13650                           ; BSR set to: 1
 13651                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
 13652   004554  5033               	movf	dtoa@s^0,w,c
 13653   004556  A4D8               	btfss	status,2,c
 13654   004558  EFB0  F022         	goto	u10991
 13655   00455C  EFB2  F022         	goto	u10990
 13656   004560                     u10991:
 13657   004560  EFB9  F022         	goto	l9252
 13658   004564                     u10990:
 13659   004564                     
 13660                           ; BSR set to: 1
 13661   004564  A5B0               	btfss	_flags& (0+255),2,b
 13662   004566  EFB7  F022         	goto	u11001
 13663   00456A  EFB9  F022         	goto	u11000
 13664   00456E                     u11001:
 13665   00456E  EFD2  F022         	goto	l1298
 13666   004572                     u11000:
 13667   004572                     l9252:
 13668                           
 13669                           ; BSR set to: 1
 13670                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
 13671   004572  0631               	decf	dtoa@w^0,f,c
 13672   004574  A0D8               	btfss	status,0,c
 13673   004576  0632               	decf	(dtoa@w+1)^0,f,c
 13674   004578                     
 13675                           ; BSR set to: 1
 13676                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
 13677   004578  5033               	movf	dtoa@s^0,w,c
 13678   00457A  A4D8               	btfss	status,2,c
 13679   00457C  EFC2  F022         	goto	u11011
 13680   004580  EFC4  F022         	goto	u11010
 13681   004584                     u11011:
 13682   004584  EFCA  F022         	goto	l9258
 13683   004588                     u11010:
 13684   004588                     
 13685                           ; BSR set to: 1
 13686   004588  0E00               	movlw	0
 13687   00458A  6E2E               	movwf	(_dtoa$1303+1)^0,c
 13688   00458C  0E2B               	movlw	43
 13689   00458E  6E2D               	movwf	_dtoa$1303^0,c
 13690   004590  EFCE  F022         	goto	l9260
 13691   004594                     l9258:
 13692                           
 13693                           ; BSR set to: 1
 13694   004594  0E00               	movlw	0
 13695   004596  6E2E               	movwf	(_dtoa$1303+1)^0,c
 13696   004598  0E2D               	movlw	45
 13697   00459A  6E2D               	movwf	_dtoa$1303^0,c
 13698   00459C                     l9260:
 13699                           
 13700                           ; BSR set to: 1
 13701   00459C  C02D  F033         	movff	_dtoa$1303,dtoa@s
 13702                           
 13703                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 543:     }
 13704   0045A0  EFDE  F022         	goto	l9266
 13705   0045A4                     l1298:
 13706                           
 13707                           ; BSR set to: 1
 13708   0045A4  A7B0               	btfss	_flags& (0+255),3,b
 13709   0045A6  EFD7  F022         	goto	u11021
 13710   0045AA  EFD9  F022         	goto	u11020
 13711   0045AE                     u11021:
 13712   0045AE  EFDE  F022         	goto	l9266
 13713   0045B2                     u11020:
 13714   0045B2                     
 13715                           ; BSR set to: 1
 13716                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 546:         --w;
 13717   0045B2  0631               	decf	dtoa@w^0,f,c
 13718   0045B4  A0D8               	btfss	status,0,c
 13719   0045B6  0632               	decf	(dtoa@w+1)^0,f,c
 13720   0045B8                     
 13721                           ; BSR set to: 1
 13722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 547:   s = ' ';
 13723   0045B8  0E20               	movlw	32
 13724   0045BA  6E33               	movwf	dtoa@s^0,c
 13725   0045BC                     l9266:
 13726                           
 13727                           ; BSR set to: 1
 13728                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
 13729   0045BC  0E00               	movlw	0
 13730   0045BE  6E35               	movwf	(dtoa@i+1)^0,c
 13731   0045C0  0E4F               	movlw	79
 13732   0045C2  6E34               	movwf	dtoa@i^0,c
 13733   0045C4                     
 13734                           ; BSR set to: 1
 13735                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
 13736   0045C4  0E00               	movlw	0
 13737   0045C6  0103               	movlb	3	; () banked
 13738   0045C8  6F6F               	movwf	(_dbuf+79)& (0+255),b
 13739                           
 13740                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 13741   0045CA  EF63  F023         	goto	l9280
 13742   0045CE                     l9270:
 13743                           
 13744                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
 13745   0045CE  0634               	decf	dtoa@i^0,f,c
 13746   0045D0  A0D8               	btfss	status,0,c
 13747   0045D2  0635               	decf	(dtoa@i+1)^0,f,c
 13748   0045D4                     
 13749                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
 13750   0045D4  0E20               	movlw	low _dbuf
 13751   0045D6  2434               	addwf	dtoa@i^0,w,c
 13752   0045D8  6ED9               	movwf	fsr2l,c
 13753   0045DA  0E03               	movlw	high _dbuf
 13754   0045DC  2035               	addwfc	(dtoa@i+1)^0,w,c
 13755   0045DE  6EDA               	movwf	fsr2h,c
 13756   0045E0  C01D  F001         	movff	dtoa@d,___aomod@dividend
 13757   0045E4  C01E  F002         	movff	dtoa@d+1,___aomod@dividend+1
 13758   0045E8  C01F  F003         	movff	dtoa@d+2,___aomod@dividend+2
 13759   0045EC  C020  F004         	movff	dtoa@d+3,___aomod@dividend+3
 13760   0045F0  C021  F005         	movff	dtoa@d+4,___aomod@dividend+4
 13761   0045F4  C022  F006         	movff	dtoa@d+5,___aomod@dividend+5
 13762   0045F8  C023  F007         	movff	dtoa@d+6,___aomod@dividend+6
 13763   0045FC  C024  F008         	movff	dtoa@d+7,___aomod@dividend+7
 13764   004600  0E0A               	movlw	10
 13765   004602  6E09               	movwf	___aomod@divisor^0,c
 13766   004604  0E00               	movlw	0
 13767   004606  6E0A               	movwf	(___aomod@divisor+1)^0,c
 13768   004608  0E00               	movlw	0
 13769   00460A  6E0B               	movwf	(___aomod@divisor+2)^0,c
 13770   00460C  0E00               	movlw	0
 13771   00460E  6E0C               	movwf	(___aomod@divisor+3)^0,c
 13772   004610  0E00               	movlw	0
 13773   004612  6E0D               	movwf	(___aomod@divisor+4)^0,c
 13774   004614  0E00               	movlw	0
 13775   004616  6E0E               	movwf	(___aomod@divisor+5)^0,c
 13776   004618  0E00               	movlw	0
 13777   00461A  6E0F               	movwf	(___aomod@divisor+6)^0,c
 13778   00461C  0E00               	movlw	0
 13779   00461E  6E10               	movwf	(___aomod@divisor+7)^0,c
 13780   004620  EC20  F02F         	call	___aomod	;wreg free
 13781   004624  C001  F025         	movff	?___aomod,??_dtoa
 13782   004628  C002  F026         	movff	?___aomod+1,??_dtoa+1
 13783   00462C  C003  F027         	movff	?___aomod+2,??_dtoa+2
 13784   004630  C004  F028         	movff	?___aomod+3,??_dtoa+3
 13785   004634  C005  F029         	movff	?___aomod+4,??_dtoa+4
 13786   004638  C006  F02A         	movff	?___aomod+5,??_dtoa+5
 13787   00463C  C007  F02B         	movff	?___aomod+6,??_dtoa+6
 13788   004640  C008  F02C         	movff	?___aomod+7,??_dtoa+7
 13789   004644  C025  F013         	movff	??_dtoa,abs@a
 13790   004648  C026  F014         	movff	??_dtoa+1,abs@a+1
 13791   00464C  EC26  F03C         	call	_abs	;wreg free
 13792   004650  5013               	movf	?_abs^0,w,c
 13793   004652  0F30               	addlw	48
 13794   004654  6EDF               	movwf	indf2,c
 13795   004656                     
 13796                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 567:         --p;
 13797   004656  062F               	decf	dtoa@p^0,f,c
 13798   004658  A0D8               	btfss	status,0,c
 13799   00465A  0630               	decf	(dtoa@p+1)^0,f,c
 13800   00465C                     
 13801                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
 13802   00465C  0631               	decf	dtoa@w^0,f,c
 13803   00465E  A0D8               	btfss	status,0,c
 13804   004660  0632               	decf	(dtoa@w+1)^0,f,c
 13805   004662                     
 13806                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
 13807   004662  C01D  F001         	movff	dtoa@d,___aodiv@dividend
 13808   004666  C01E  F002         	movff	dtoa@d+1,___aodiv@dividend+1
 13809   00466A  C01F  F003         	movff	dtoa@d+2,___aodiv@dividend+2
 13810   00466E  C020  F004         	movff	dtoa@d+3,___aodiv@dividend+3
 13811   004672  C021  F005         	movff	dtoa@d+4,___aodiv@dividend+4
 13812   004676  C022  F006         	movff	dtoa@d+5,___aodiv@dividend+5
 13813   00467A  C023  F007         	movff	dtoa@d+6,___aodiv@dividend+6
 13814   00467E  C024  F008         	movff	dtoa@d+7,___aodiv@dividend+7
 13815   004682  0E0A               	movlw	10
 13816   004684  6E09               	movwf	___aodiv@divisor^0,c
 13817   004686  0E00               	movlw	0
 13818   004688  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 13819   00468A  0E00               	movlw	0
 13820   00468C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 13821   00468E  0E00               	movlw	0
 13822   004690  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 13823   004692  0E00               	movlw	0
 13824   004694  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 13825   004696  0E00               	movlw	0
 13826   004698  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 13827   00469A  0E00               	movlw	0
 13828   00469C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 13829   00469E  0E00               	movlw	0
 13830   0046A0  6E10               	movwf	(___aodiv@divisor+7)^0,c
 13831   0046A2  EC5C  F02E         	call	___aodiv	;wreg free
 13832   0046A6  C001  F01D         	movff	?___aodiv,dtoa@d
 13833   0046AA  C002  F01E         	movff	?___aodiv+1,dtoa@d+1
 13834   0046AE  C003  F01F         	movff	?___aodiv+2,dtoa@d+2
 13835   0046B2  C004  F020         	movff	?___aodiv+3,dtoa@d+3
 13836   0046B6  C005  F021         	movff	?___aodiv+4,dtoa@d+4
 13837   0046BA  C006  F022         	movff	?___aodiv+5,dtoa@d+5
 13838   0046BE  C007  F023         	movff	?___aodiv+6,dtoa@d+6
 13839   0046C2  C008  F024         	movff	?___aodiv+7,dtoa@d+7
 13840   0046C6                     l9280:
 13841                           
 13842                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
 13843   0046C6  BE35               	btfsc	(dtoa@i+1)^0,7,c
 13844   0046C8  EF6E  F023         	goto	u11031
 13845   0046CC  5035               	movf	(dtoa@i+1)^0,w,c
 13846   0046CE  E108               	bnz	u11030
 13847   0046D0  0434               	decf	dtoa@i^0,w,c
 13848   0046D2  A0D8               	btfss	status,0,c
 13849   0046D4  EF6E  F023         	goto	u11031
 13850   0046D8  EF70  F023         	goto	u11030
 13851   0046DC                     u11031:
 13852   0046DC  EFA1  F023         	goto	l9290
 13853   0046E0                     u11030:
 13854   0046E0  501D               	movf	dtoa@d^0,w,c
 13855   0046E2  101E               	iorwf	(dtoa@d+1)^0,w,c
 13856   0046E4  101F               	iorwf	(dtoa@d+2)^0,w,c
 13857   0046E6  1020               	iorwf	(dtoa@d+3)^0,w,c
 13858   0046E8  1021               	iorwf	(dtoa@d+4)^0,w,c
 13859   0046EA  1022               	iorwf	(dtoa@d+5)^0,w,c
 13860   0046EC  1023               	iorwf	(dtoa@d+6)^0,w,c
 13861   0046EE  1024               	iorwf	(dtoa@d+7)^0,w,c
 13862   0046F0  A4D8               	btfss	status,2,c
 13863   0046F2  EF7D  F023         	goto	u11041
 13864   0046F6  EF7F  F023         	goto	u11040
 13865   0046FA                     u11041:
 13866   0046FA  EFE7  F022         	goto	l9270
 13867   0046FE                     u11040:
 13868   0046FE  BE30               	btfsc	(dtoa@p+1)^0,7,c
 13869   004700  EF8C  F023         	goto	u11050
 13870   004704  5030               	movf	(dtoa@p+1)^0,w,c
 13871   004706  E106               	bnz	u11051
 13872   004708  042F               	decf	dtoa@p^0,w,c
 13873   00470A  B0D8               	btfsc	status,0,c
 13874   00470C  EF8A  F023         	goto	u11051
 13875   004710  EF8C  F023         	goto	u11050
 13876   004714                     u11051:
 13877   004714  EFE7  F022         	goto	l9270
 13878   004718                     u11050:
 13879   004718  BE32               	btfsc	(dtoa@w+1)^0,7,c
 13880   00471A  EF97  F023         	goto	u11061
 13881   00471E  5032               	movf	(dtoa@w+1)^0,w,c
 13882   004720  E108               	bnz	u11060
 13883   004722  0431               	decf	dtoa@w^0,w,c
 13884   004724  A0D8               	btfss	status,0,c
 13885   004726  EF97  F023         	goto	u11061
 13886   00472A  EF99  F023         	goto	u11060
 13887   00472E                     u11061:
 13888   00472E  EFA1  F023         	goto	l9290
 13889   004732                     u11060:
 13890   004732  0101               	movlb	1	; () banked
 13891   004734  B3B0               	btfsc	_flags& (0+255),1,b
 13892   004736  EF9F  F023         	goto	u11071
 13893   00473A  EFA1  F023         	goto	u11070
 13894   00473E                     u11071:
 13895   00473E  EFE7  F022         	goto	l9270
 13896   004742                     u11070:
 13897   004742                     l9290:
 13898                           
 13899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
 13900   004742  5033               	movf	dtoa@s^0,w,c
 13901   004744  B4D8               	btfsc	status,2,c
 13902   004746  EFA7  F023         	goto	u11081
 13903   00474A  EFA9  F023         	goto	u11080
 13904   00474E                     u11081:
 13905   00474E  EFB4  F023         	goto	l9296
 13906   004752                     u11080:
 13907   004752                     
 13908                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
 13909   004752  0634               	decf	dtoa@i^0,f,c
 13910   004754  A0D8               	btfss	status,0,c
 13911   004756  0635               	decf	(dtoa@i+1)^0,f,c
 13912   004758                     
 13913                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
 13914   004758  0E20               	movlw	low _dbuf
 13915   00475A  2434               	addwf	dtoa@i^0,w,c
 13916   00475C  6ED9               	movwf	fsr2l,c
 13917   00475E  0E03               	movlw	high _dbuf
 13918   004760  2035               	addwfc	(dtoa@i+1)^0,w,c
 13919   004762  6EDA               	movwf	fsr2h,c
 13920   004764  C033  FFDF         	movff	dtoa@s,indf2
 13921   004768                     l9296:
 13922                           
 13923                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          int) pad(fp, &dbuf[i], w);
 13924   004768  C01B  F011         	movff	dtoa@fp,pad@fp
 13925   00476C  C01C  F012         	movff	dtoa@fp+1,pad@fp+1
 13926   004770  0E20               	movlw	low _dbuf
 13927   004772  2434               	addwf	dtoa@i^0,w,c
 13928   004774  6E13               	movwf	pad@buf^0,c
 13929   004776  0E03               	movlw	high _dbuf
 13930   004778  2035               	addwfc	(dtoa@i+1)^0,w,c
 13931   00477A  6E14               	movwf	(pad@buf+1)^0,c
 13932   00477C  C031  F015         	movff	dtoa@w,pad@p
 13933   004780  C032  F016         	movff	dtoa@w+1,pad@p+1
 13934   004784  EC0E  F037         	call	_pad	;wreg free
 13935   004788  C011  F01B         	movff	?_pad,?_dtoa
 13936   00478C  C012  F01C         	movff	?_pad+1,?_dtoa+1
 13937   004790  0012               	return		;funcret
 13938   004792                     __end_of_dtoa:
 13939                           	callstack 0
 13940                           
 13941 ;; *************** function _abs *****************
 13942 ;; Defined at:
 13943 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
 13944 ;; Parameters:    Size  Location     Type
 13945 ;;  a               2   18[COMRAM] int 
 13946 ;; Auto vars:     Size  Location     Type
 13947 ;;		None
 13948 ;; Return value:  Size  Location     Type
 13949 ;;                  2   18[COMRAM] int 
 13950 ;; Registers used:
 13951 ;;		wreg, status,2, status,0
 13952 ;; Tracked objects:
 13953 ;;		On entry : 0/0
 13954 ;;		On exit  : 0/0
 13955 ;;		Unchanged: 0/0
 13956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13957 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13959 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13960 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13961 ;;Total ram usage:        4 bytes
 13962 ;; Hardware stack levels used: 1
 13963 ;; Hardware stack levels required when called: 1
 13964 ;; This function calls:
 13965 ;;		Nothing
 13966 ;; This function is called by:
 13967 ;;		_dtoa
 13968 ;; This function uses a non-reentrant model
 13969 ;;
 13970                           
 13971                           	psect	text45
 13972   00784C                     __ptext45:
 13973                           	callstack 0
 13974   00784C                     _abs:
 13975                           	callstack 22
 13976   00784C  BE14               	btfsc	(abs@a+1)^0,7,c
 13977   00784E  EF2B  F03C         	goto	u6331
 13978   007852  EF2D  F03C         	goto	u6330
 13979   007856                     u6331:
 13980   007856  EF33  F03C         	goto	l1638
 13981   00785A                     u6330:
 13982   00785A  C013  F013         	movff	abs@a,?_abs
 13983   00785E  C014  F014         	movff	abs@a+1,?_abs+1
 13984   007862  EF3F  F03C         	goto	l1641
 13985   007866                     l1638:
 13986   007866  C013  F015         	movff	abs@a,??_abs
 13987   00786A  C014  F016         	movff	abs@a+1,??_abs+1
 13988   00786E  1E15               	comf	??_abs^0,f,c
 13989   007870  1E16               	comf	(??_abs+1)^0,f,c
 13990   007872  4A15               	infsnz	??_abs^0,f,c
 13991   007874  2A16               	incf	(??_abs+1)^0,f,c
 13992   007876  C015  F013         	movff	??_abs,?_abs
 13993   00787A  C016  F014         	movff	??_abs+1,?_abs+1
 13994   00787E                     l1641:
 13995   00787E  0012               	return		;funcret
 13996   007880                     __end_of_abs:
 13997                           	callstack 0
 13998                           
 13999 ;; *************** function ___aomod *****************
 14000 ;; Defined at:
 14001 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aomod.c"
 14002 ;; Parameters:    Size  Location     Type
 14003 ;;  dividend        8    0[COMRAM] long long 
 14004 ;;  divisor         8    8[COMRAM] long long 
 14005 ;; Auto vars:     Size  Location     Type
 14006 ;;  sign            1   17[COMRAM] unsigned char 
 14007 ;;  counter         1   16[COMRAM] unsigned char 
 14008 ;; Return value:  Size  Location     Type
 14009 ;;                  8    0[COMRAM] long long 
 14010 ;; Registers used:
 14011 ;;		wreg, status,2, status,0
 14012 ;; Tracked objects:
 14013 ;;		On entry : 0/0
 14014 ;;		On exit  : 0/0
 14015 ;;		Unchanged: 0/0
 14016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14017 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14020 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14021 ;;Total ram usage:       18 bytes
 14022 ;; Hardware stack levels used: 1
 14023 ;; Hardware stack levels required when called: 1
 14024 ;; This function calls:
 14025 ;;		Nothing
 14026 ;; This function is called by:
 14027 ;;		_dtoa
 14028 ;; This function uses a non-reentrant model
 14029 ;;
 14030                           
 14031                           	psect	text46
 14032   005E40                     __ptext46:
 14033                           	callstack 0
 14034   005E40                     ___aomod:
 14035                           	callstack 22
 14036   005E40  0E00               	movlw	0
 14037   005E42  6E12               	movwf	___aomod@sign^0,c
 14038   005E44  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 14039   005E46  EF29  F02F         	goto	u5270
 14040   005E4A  EF27  F02F         	goto	u5271
 14041   005E4E                     u5271:
 14042   005E4E  EF3B  F02F         	goto	l5442
 14043   005E52                     u5270:
 14044   005E52  1E08               	comf	(___aomod@dividend+7)^0,f,c
 14045   005E54  1E07               	comf	(___aomod@dividend+6)^0,f,c
 14046   005E56  1E06               	comf	(___aomod@dividend+5)^0,f,c
 14047   005E58  1E05               	comf	(___aomod@dividend+4)^0,f,c
 14048   005E5A  1E04               	comf	(___aomod@dividend+3)^0,f,c
 14049   005E5C  1E03               	comf	(___aomod@dividend+2)^0,f,c
 14050   005E5E  1E02               	comf	(___aomod@dividend+1)^0,f,c
 14051   005E60  6C01               	negf	___aomod@dividend^0,c
 14052   005E62  0E00               	movlw	0
 14053   005E64  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 14054   005E66  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 14055   005E68  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 14056   005E6A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 14057   005E6C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 14058   005E6E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 14059   005E70  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 14060   005E72  0E01               	movlw	1
 14061   005E74  6E12               	movwf	___aomod@sign^0,c
 14062   005E76                     l5442:
 14063   005E76  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 14064   005E78  EF42  F02F         	goto	u5280
 14065   005E7C  EF40  F02F         	goto	u5281
 14066   005E80                     u5281:
 14067   005E80  EF52  F02F         	goto	l5446
 14068   005E84                     u5280:
 14069   005E84  1E10               	comf	(___aomod@divisor+7)^0,f,c
 14070   005E86  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 14071   005E88  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 14072   005E8A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 14073   005E8C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 14074   005E8E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 14075   005E90  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 14076   005E92  6C09               	negf	___aomod@divisor^0,c
 14077   005E94  0E00               	movlw	0
 14078   005E96  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 14079   005E98  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 14080   005E9A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 14081   005E9C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 14082   005E9E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 14083   005EA0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 14084   005EA2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 14085   005EA4                     l5446:
 14086   005EA4  5009               	movf	___aomod@divisor^0,w,c
 14087   005EA6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 14088   005EA8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 14089   005EAA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 14090   005EAC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 14091   005EAE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 14092   005EB0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 14093   005EB2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 14094   005EB4  B4D8               	btfsc	status,2,c
 14095   005EB6  EF5F  F02F         	goto	u5291
 14096   005EBA  EF61  F02F         	goto	u5290
 14097   005EBE                     u5291:
 14098   005EBE  EFA9  F02F         	goto	l5462
 14099   005EC2                     u5290:
 14100   005EC2  0E01               	movlw	1
 14101   005EC4  6E11               	movwf	___aomod@counter^0,c
 14102   005EC6  EF6F  F02F         	goto	l5452
 14103   005ECA                     l5450:
 14104   005ECA  90D8               	bcf	status,0,c
 14105   005ECC  3609               	rlcf	___aomod@divisor^0,f,c
 14106   005ECE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 14107   005ED0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 14108   005ED2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 14109   005ED4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 14110   005ED6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 14111   005ED8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 14112   005EDA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 14113   005EDC  2A11               	incf	___aomod@counter^0,f,c
 14114   005EDE                     l5452:
 14115   005EDE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 14116   005EE0  EF74  F02F         	goto	u5301
 14117   005EE4  EF76  F02F         	goto	u5300
 14118   005EE8                     u5301:
 14119   005EE8  EF65  F02F         	goto	l5450
 14120   005EEC                     u5300:
 14121   005EEC                     l5454:
 14122   005EEC  5009               	movf	___aomod@divisor^0,w,c
 14123   005EEE  5C01               	subwf	___aomod@dividend^0,w,c
 14124   005EF0  500A               	movf	(___aomod@divisor+1)^0,w,c
 14125   005EF2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 14126   005EF4  500B               	movf	(___aomod@divisor+2)^0,w,c
 14127   005EF6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 14128   005EF8  500C               	movf	(___aomod@divisor+3)^0,w,c
 14129   005EFA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 14130   005EFC  500D               	movf	(___aomod@divisor+4)^0,w,c
 14131   005EFE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 14132   005F00  500E               	movf	(___aomod@divisor+5)^0,w,c
 14133   005F02  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 14134   005F04  500F               	movf	(___aomod@divisor+6)^0,w,c
 14135   005F06  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 14136   005F08  5010               	movf	(___aomod@divisor+7)^0,w,c
 14137   005F0A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 14138   005F0C  A0D8               	btfss	status,0,c
 14139   005F0E  EF8B  F02F         	goto	u5311
 14140   005F12  EF8D  F02F         	goto	u5310
 14141   005F16                     u5311:
 14142   005F16  EF9D  F02F         	goto	l5458
 14143   005F1A                     u5310:
 14144   005F1A  5009               	movf	___aomod@divisor^0,w,c
 14145   005F1C  5E01               	subwf	___aomod@dividend^0,f,c
 14146   005F1E  500A               	movf	(___aomod@divisor+1)^0,w,c
 14147   005F20  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 14148   005F22  500B               	movf	(___aomod@divisor+2)^0,w,c
 14149   005F24  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 14150   005F26  500C               	movf	(___aomod@divisor+3)^0,w,c
 14151   005F28  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 14152   005F2A  500D               	movf	(___aomod@divisor+4)^0,w,c
 14153   005F2C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 14154   005F2E  500E               	movf	(___aomod@divisor+5)^0,w,c
 14155   005F30  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 14156   005F32  500F               	movf	(___aomod@divisor+6)^0,w,c
 14157   005F34  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 14158   005F36  5010               	movf	(___aomod@divisor+7)^0,w,c
 14159   005F38  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 14160   005F3A                     l5458:
 14161   005F3A  90D8               	bcf	status,0,c
 14162   005F3C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 14163   005F3E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 14164   005F40  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 14165   005F42  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 14166   005F44  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 14167   005F46  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 14168   005F48  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 14169   005F4A  3209               	rrcf	___aomod@divisor^0,f,c
 14170   005F4C  2E11               	decfsz	___aomod@counter^0,f,c
 14171   005F4E  EF76  F02F         	goto	l5454
 14172   005F52                     l5462:
 14173   005F52  5012               	movf	___aomod@sign^0,w,c
 14174   005F54  B4D8               	btfsc	status,2,c
 14175   005F56  EFAF  F02F         	goto	u5321
 14176   005F5A  EFB1  F02F         	goto	u5320
 14177   005F5E                     u5321:
 14178   005F5E  EFC1  F02F         	goto	l5466
 14179   005F62                     u5320:
 14180   005F62  1E08               	comf	(___aomod@dividend+7)^0,f,c
 14181   005F64  1E07               	comf	(___aomod@dividend+6)^0,f,c
 14182   005F66  1E06               	comf	(___aomod@dividend+5)^0,f,c
 14183   005F68  1E05               	comf	(___aomod@dividend+4)^0,f,c
 14184   005F6A  1E04               	comf	(___aomod@dividend+3)^0,f,c
 14185   005F6C  1E03               	comf	(___aomod@dividend+2)^0,f,c
 14186   005F6E  1E02               	comf	(___aomod@dividend+1)^0,f,c
 14187   005F70  6C01               	negf	___aomod@dividend^0,c
 14188   005F72  0E00               	movlw	0
 14189   005F74  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 14190   005F76  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 14191   005F78  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 14192   005F7A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 14193   005F7C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 14194   005F7E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 14195   005F80  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 14196   005F82                     l5466:
 14197   005F82  C001  F001         	movff	___aomod@dividend,?___aomod
 14198   005F86  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 14199   005F8A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 14200   005F8E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 14201   005F92  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 14202   005F96  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 14203   005F9A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 14204   005F9E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 14205   005FA2  0012               	return		;funcret
 14206   005FA4                     __end_of___aomod:
 14207                           	callstack 0
 14208                           
 14209 ;; *************** function ___aodiv *****************
 14210 ;; Defined at:
 14211 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\aodiv.c"
 14212 ;; Parameters:    Size  Location     Type
 14213 ;;  dividend        8    0[COMRAM] long long 
 14214 ;;  divisor         8    8[COMRAM] long long 
 14215 ;; Auto vars:     Size  Location     Type
 14216 ;;  quotient        8   18[COMRAM] long long 
 14217 ;;  sign            1   17[COMRAM] unsigned char 
 14218 ;;  counter         1   16[COMRAM] unsigned char 
 14219 ;; Return value:  Size  Location     Type
 14220 ;;                  8    0[COMRAM] long long 
 14221 ;; Registers used:
 14222 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14223 ;; Tracked objects:
 14224 ;;		On entry : 0/0
 14225 ;;		On exit  : 0/0
 14226 ;;		Unchanged: 0/0
 14227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14228 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14229 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14231 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14232 ;;Total ram usage:       26 bytes
 14233 ;; Hardware stack levels used: 1
 14234 ;; Hardware stack levels required when called: 1
 14235 ;; This function calls:
 14236 ;;		Nothing
 14237 ;; This function is called by:
 14238 ;;		_dtoa
 14239 ;; This function uses a non-reentrant model
 14240 ;;
 14241                           
 14242                           	psect	text47
 14243   005CB8                     __ptext47:
 14244                           	callstack 0
 14245   005CB8                     ___aodiv:
 14246                           	callstack 22
 14247   005CB8  0E00               	movlw	0
 14248   005CBA  6E12               	movwf	___aodiv@sign^0,c
 14249   005CBC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 14250   005CBE  EF65  F02E         	goto	u5200
 14251   005CC2  EF63  F02E         	goto	u5201
 14252   005CC6                     u5201:
 14253   005CC6  EF77  F02E         	goto	l5398
 14254   005CCA                     u5200:
 14255   005CCA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 14256   005CCC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 14257   005CCE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 14258   005CD0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 14259   005CD2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 14260   005CD4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 14261   005CD6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 14262   005CD8  6C09               	negf	___aodiv@divisor^0,c
 14263   005CDA  0E00               	movlw	0
 14264   005CDC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 14265   005CDE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 14266   005CE0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 14267   005CE2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 14268   005CE4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 14269   005CE6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 14270   005CE8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 14271   005CEA  0E01               	movlw	1
 14272   005CEC  6E12               	movwf	___aodiv@sign^0,c
 14273   005CEE                     l5398:
 14274   005CEE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 14275   005CF0  EF7E  F02E         	goto	u5210
 14276   005CF4  EF7C  F02E         	goto	u5211
 14277   005CF8                     u5211:
 14278   005CF8  EF90  F02E         	goto	l5404
 14279   005CFC                     u5210:
 14280   005CFC  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 14281   005CFE  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 14282   005D00  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 14283   005D02  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 14284   005D04  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 14285   005D06  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 14286   005D08  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 14287   005D0A  6C01               	negf	___aodiv@dividend^0,c
 14288   005D0C  0E00               	movlw	0
 14289   005D0E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 14290   005D10  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 14291   005D12  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 14292   005D14  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 14293   005D16  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 14294   005D18  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 14295   005D1A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 14296   005D1C  0E01               	movlw	1
 14297   005D1E  1A12               	xorwf	___aodiv@sign^0,f,c
 14298   005D20                     l5404:
 14299   005D20  EE20  F013         	lfsr	2,___aodiv@quotient
 14300   005D24  0E07               	movlw	7
 14301   005D26                     u5221:
 14302   005D26  6ADE               	clrf	postinc2,c
 14303   005D28  06E8               	decf	wreg,f,c
 14304   005D2A  E2FD               	bc	u5221
 14305   005D2C  5009               	movf	___aodiv@divisor^0,w,c
 14306   005D2E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 14307   005D30  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 14308   005D32  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 14309   005D34  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 14310   005D36  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 14311   005D38  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 14312   005D3A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 14313   005D3C  B4D8               	btfsc	status,2,c
 14314   005D3E  EFA3  F02E         	goto	u5231
 14315   005D42  EFA5  F02E         	goto	u5230
 14316   005D46                     u5231:
 14317   005D46  EFF7  F02E         	goto	l5426
 14318   005D4A                     u5230:
 14319   005D4A  0E01               	movlw	1
 14320   005D4C  6E11               	movwf	___aodiv@counter^0,c
 14321   005D4E  EFB3  F02E         	goto	l5412
 14322   005D52                     l5410:
 14323   005D52  90D8               	bcf	status,0,c
 14324   005D54  3609               	rlcf	___aodiv@divisor^0,f,c
 14325   005D56  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 14326   005D58  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 14327   005D5A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 14328   005D5C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 14329   005D5E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 14330   005D60  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 14331   005D62  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 14332   005D64  2A11               	incf	___aodiv@counter^0,f,c
 14333   005D66                     l5412:
 14334   005D66  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 14335   005D68  EFB8  F02E         	goto	u5241
 14336   005D6C  EFBA  F02E         	goto	u5240
 14337   005D70                     u5241:
 14338   005D70  EFA9  F02E         	goto	l5410
 14339   005D74                     u5240:
 14340   005D74                     l5414:
 14341   005D74  90D8               	bcf	status,0,c
 14342   005D76  3613               	rlcf	___aodiv@quotient^0,f,c
 14343   005D78  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 14344   005D7A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 14345   005D7C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 14346   005D7E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 14347   005D80  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 14348   005D82  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 14349   005D84  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 14350   005D86  5009               	movf	___aodiv@divisor^0,w,c
 14351   005D88  5C01               	subwf	___aodiv@dividend^0,w,c
 14352   005D8A  500A               	movf	(___aodiv@divisor+1)^0,w,c
 14353   005D8C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 14354   005D8E  500B               	movf	(___aodiv@divisor+2)^0,w,c
 14355   005D90  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 14356   005D92  500C               	movf	(___aodiv@divisor+3)^0,w,c
 14357   005D94  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 14358   005D96  500D               	movf	(___aodiv@divisor+4)^0,w,c
 14359   005D98  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 14360   005D9A  500E               	movf	(___aodiv@divisor+5)^0,w,c
 14361   005D9C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 14362   005D9E  500F               	movf	(___aodiv@divisor+6)^0,w,c
 14363   005DA0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 14364   005DA2  5010               	movf	(___aodiv@divisor+7)^0,w,c
 14365   005DA4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 14366   005DA6  A0D8               	btfss	status,0,c
 14367   005DA8  EFD8  F02E         	goto	u5251
 14368   005DAC  EFDA  F02E         	goto	u5250
 14369   005DB0                     u5251:
 14370   005DB0  EFEB  F02E         	goto	l5422
 14371   005DB4                     u5250:
 14372   005DB4  5009               	movf	___aodiv@divisor^0,w,c
 14373   005DB6  5E01               	subwf	___aodiv@dividend^0,f,c
 14374   005DB8  500A               	movf	(___aodiv@divisor+1)^0,w,c
 14375   005DBA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 14376   005DBC  500B               	movf	(___aodiv@divisor+2)^0,w,c
 14377   005DBE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 14378   005DC0  500C               	movf	(___aodiv@divisor+3)^0,w,c
 14379   005DC2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 14380   005DC4  500D               	movf	(___aodiv@divisor+4)^0,w,c
 14381   005DC6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 14382   005DC8  500E               	movf	(___aodiv@divisor+5)^0,w,c
 14383   005DCA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 14384   005DCC  500F               	movf	(___aodiv@divisor+6)^0,w,c
 14385   005DCE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 14386   005DD0  5010               	movf	(___aodiv@divisor+7)^0,w,c
 14387   005DD2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 14388   005DD4  8013               	bsf	___aodiv@quotient^0,0,c
 14389   005DD6                     l5422:
 14390   005DD6  90D8               	bcf	status,0,c
 14391   005DD8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 14392   005DDA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 14393   005DDC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 14394   005DDE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 14395   005DE0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 14396   005DE2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 14397   005DE4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 14398   005DE6  3209               	rrcf	___aodiv@divisor^0,f,c
 14399   005DE8  2E11               	decfsz	___aodiv@counter^0,f,c
 14400   005DEA  EFBA  F02E         	goto	l5414
 14401   005DEE                     l5426:
 14402   005DEE  5012               	movf	___aodiv@sign^0,w,c
 14403   005DF0  B4D8               	btfsc	status,2,c
 14404   005DF2  EFFD  F02E         	goto	u5261
 14405   005DF6  EFFF  F02E         	goto	u5260
 14406   005DFA                     u5261:
 14407   005DFA  EF0F  F02F         	goto	l5430
 14408   005DFE                     u5260:
 14409   005DFE  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 14410   005E00  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 14411   005E02  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 14412   005E04  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 14413   005E06  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 14414   005E08  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 14415   005E0A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 14416   005E0C  6C13               	negf	___aodiv@quotient^0,c
 14417   005E0E  0E00               	movlw	0
 14418   005E10  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 14419   005E12  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 14420   005E14  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 14421   005E16  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 14422   005E18  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 14423   005E1A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 14424   005E1C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 14425   005E1E                     l5430:
 14426   005E1E  C013  F001         	movff	___aodiv@quotient,?___aodiv
 14427   005E22  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 14428   005E26  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 14429   005E2A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 14430   005E2E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 14431   005E32  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 14432   005E36  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 14433   005E3A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 14434   005E3E  0012               	return		;funcret
 14435   005E40                     __end_of___aodiv:
 14436                           	callstack 0
 14437                           
 14438 ;; *************** function _ctoa *****************
 14439 ;; Defined at:
 14440 ;;		line 476 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 14441 ;; Parameters:    Size  Location     Type
 14442 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
 14443 ;;		 -> vsnprintf@f(12), 
 14444 ;;  c               1   11[COMRAM] unsigned char 
 14445 ;; Auto vars:     Size  Location     Type
 14446 ;;  w               2   15[COMRAM] int 
 14447 ;;  l               2   13[COMRAM] int 
 14448 ;; Return value:  Size  Location     Type
 14449 ;;                  2    9[COMRAM] int 
 14450 ;; Registers used:
 14451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14452 ;; Tracked objects:
 14453 ;;		On entry : 0/0
 14454 ;;		On exit  : 0/0
 14455 ;;		Unchanged: 0/0
 14456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14457 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14458 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14460 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14461 ;;Total ram usage:        8 bytes
 14462 ;; Hardware stack levels used: 1
 14463 ;; Hardware stack levels required when called: 3
 14464 ;; This function calls:
 14465 ;;		_fputc
 14466 ;; This function is called by:
 14467 ;;		_vfpfcnvrt
 14468 ;; This function uses a non-reentrant model
 14469 ;;
 14470                           
 14471                           	psect	text48
 14472   006A2A                     __ptext48:
 14473                           	callstack 0
 14474   006A2A                     _ctoa:
 14475                           	callstack 21
 14476   006A2A                     
 14477                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 476: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt
      +                          .c: 477: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 478:   
      +                            int l,w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 481:   
      +                            w = width ? width - 1 : width;
 14478   006A2A  0101               	movlb	1	; () banked
 14479   006A2C  51AA               	movf	_width& (0+255),w,b
 14480   006A2E  11AB               	iorwf	(_width+1)& (0+255),w,b
 14481   006A30  A4D8               	btfss	status,2,c
 14482   006A32  EF1D  F035         	goto	u10901
 14483   006A36  EF1F  F035         	goto	u10900
 14484   006A3A                     u10901:
 14485   006A3A  EF25  F035         	goto	l9216
 14486   006A3E                     u10900:
 14487   006A3E                     
 14488                           ; BSR set to: 1
 14489   006A3E  C1AA  F010         	movff	_width,ctoa@w
 14490   006A42  C1AB  F011         	movff	_width+1,ctoa@w+1
 14491   006A46  EF2B  F035         	goto	l9218
 14492   006A4A                     l9216:
 14493                           
 14494                           ; BSR set to: 1
 14495   006A4A  0EFF               	movlw	255
 14496   006A4C  25AA               	addwf	_width& (0+255),w,b
 14497   006A4E  6E10               	movwf	ctoa@w^0,c
 14498   006A50  0EFF               	movlw	255
 14499   006A52  21AB               	addwfc	(_width+1)& (0+255),w,b
 14500   006A54  6E11               	movwf	(ctoa@w+1)^0,c
 14501   006A56                     l9218:
 14502                           
 14503                           ; BSR set to: 1
 14504                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 485:     if (flag
      +                          s & (1 << 0)) {
 14505   006A56  A1B0               	btfss	_flags& (0+255),0,b
 14506   006A58  EF30  F035         	goto	u10911
 14507   006A5C  EF32  F035         	goto	u10910
 14508   006A60                     u10911:
 14509   006A60  EF3B  F035         	goto	l9222
 14510   006A64                     u10910:
 14511   006A64                     
 14512                           ; BSR set to: 1
 14513                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 486:         fput
      +                          c(c, fp);
 14514   006A64  C00C  F001         	movff	ctoa@c,fputc@c
 14515   006A68  6A02               	clrf	(fputc@c+1)^0,c
 14516   006A6A  C00A  F003         	movff	ctoa@fp,fputc@fp
 14517   006A6E  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
 14518   006A72  ECE9  F035         	call	_fputc	;wreg free
 14519   006A76                     l9222:
 14520                           
 14521                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 491:     w = (w <
      +                           0) ? 0 : w;
 14522   006A76  BE11               	btfsc	(ctoa@w+1)^0,7,c
 14523   006A78  EF40  F035         	goto	u10921
 14524   006A7C  EF42  F035         	goto	u10920
 14525   006A80                     u10921:
 14526   006A80  EF44  F035         	goto	l9226
 14527   006A84                     u10920:
 14528   006A84  EF48  F035         	goto	l1285
 14529   006A88                     l9226:
 14530   006A88  0E00               	movlw	0
 14531   006A8A  6E11               	movwf	(ctoa@w+1)^0,c
 14532   006A8C  0E00               	movlw	0
 14533   006A8E  6E10               	movwf	ctoa@w^0,c
 14534   006A90                     l1285:
 14535                           
 14536                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 492:     l = 0;
 14537   006A90  0E00               	movlw	0
 14538   006A92  6E0F               	movwf	(ctoa@l+1)^0,c
 14539   006A94  0E00               	movlw	0
 14540   006A96  6E0E               	movwf	ctoa@l^0,c
 14541                           
 14542                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
 14543   006A98  EF5A  F035         	goto	l9232
 14544   006A9C                     l9228:
 14545                           
 14546                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 494:         fput
      +                          c(' ', fp);
 14547   006A9C  0E00               	movlw	0
 14548   006A9E  6E02               	movwf	(fputc@c+1)^0,c
 14549   006AA0  0E20               	movlw	32
 14550   006AA2  6E01               	movwf	fputc@c^0,c
 14551   006AA4  C00A  F003         	movff	ctoa@fp,fputc@fp
 14552   006AA8  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
 14553   006AAC  ECE9  F035         	call	_fputc	;wreg free
 14554   006AB0                     
 14555                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 495:         ++l;
 14556   006AB0  4A0E               	infsnz	ctoa@l^0,f,c
 14557   006AB2  2A0F               	incf	(ctoa@l+1)^0,f,c
 14558   006AB4                     l9232:
 14559                           
 14560                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 493:     while (l
      +                           < w) {
 14561   006AB4  5010               	movf	ctoa@w^0,w,c
 14562   006AB6  5C0E               	subwf	ctoa@l^0,w,c
 14563   006AB8  500F               	movf	(ctoa@l+1)^0,w,c
 14564   006ABA  0A80               	xorlw	128
 14565   006ABC  6E0D               	movwf	??_ctoa^0,c
 14566   006ABE  5011               	movf	(ctoa@w+1)^0,w,c
 14567   006AC0  0A80               	xorlw	128
 14568   006AC2  580D               	subwfb	??_ctoa^0,w,c
 14569   006AC4  A0D8               	btfss	status,0,c
 14570   006AC6  EF67  F035         	goto	u10931
 14571   006ACA  EF69  F035         	goto	u10930
 14572   006ACE                     u10931:
 14573   006ACE  EF4E  F035         	goto	l9228
 14574   006AD2                     u10930:
 14575   006AD2                     
 14576                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 499:     if (!(fl
      +                          ags & (1 << 0))) {
 14577   006AD2  0101               	movlb	1	; () banked
 14578   006AD4  B1B0               	btfsc	_flags& (0+255),0,b
 14579   006AD6  EF6F  F035         	goto	u10941
 14580   006ADA  EF71  F035         	goto	u10940
 14581   006ADE                     u10941:
 14582   006ADE  EF7A  F035         	goto	l9236
 14583   006AE2                     u10940:
 14584   006AE2                     
 14585                           ; BSR set to: 1
 14586                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 501:         fput
      +                          c(c, fp);
 14587   006AE2  C00C  F001         	movff	ctoa@c,fputc@c
 14588   006AE6  6A02               	clrf	(fputc@c+1)^0,c
 14589   006AE8  C00A  F003         	movff	ctoa@fp,fputc@fp
 14590   006AEC  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
 14591   006AF0  ECE9  F035         	call	_fputc	;wreg free
 14592   006AF4                     l9236:
 14593                           
 14594                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 507:     return l
      +                          +1;
 14595   006AF4  0E01               	movlw	1
 14596   006AF6  240E               	addwf	ctoa@l^0,w,c
 14597   006AF8  6E0A               	movwf	?_ctoa^0,c
 14598   006AFA  0E00               	movlw	0
 14599   006AFC  200F               	addwfc	(ctoa@l+1)^0,w,c
 14600   006AFE  6E0B               	movwf	(?_ctoa+1)^0,c
 14601   006B00  0012               	return		;funcret
 14602   006B02                     __end_of_ctoa:
 14603                           	callstack 0
 14604                           
 14605 ;; *************** function _atoa *****************
 14606 ;; Defined at:
 14607 ;;		line 231 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 14608 ;; Parameters:    Size  Location     Type
 14609 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 14610 ;;		 -> vsnprintf@f(12), 
 14611 ;;  f               4   18[BANK0 ] PTR struct _IO_FILE
 14612 ;;  c               1   22[BANK0 ] unsigned char 
 14613 ;; Auto vars:     Size  Location     Type
 14614 ;;  u               4   64[BANK0 ] unsigned char 
 14615 ;;  g               4   57[BANK0 ] unsigned char 
 14616 ;;  l               4   51[BANK0 ] unsigned char 
 14617 ;;  h               4   47[BANK0 ] unsigned char 
 14618 ;;  ou              4   23[BANK0 ] unsigned char 
 14619 ;;  n               2   70[BANK0 ] int 
 14620 ;;  i               2   68[BANK0 ] int 
 14621 ;;  d               2   62[BANK0 ] int 
 14622 ;;  w               2   55[BANK0 ] int 
 14623 ;;  e               2   45[BANK0 ] int 
 14624 ;;  t               2   43[BANK0 ] int 
 14625 ;;  p               2   40[BANK0 ] int 
 14626 ;;  ne              2   38[BANK0 ] int 
 14627 ;;  m               2   36[BANK0 ] int 
 14628 ;;  sign            1   61[BANK0 ] unsigned char 
 14629 ;;  pp              1   42[BANK0 ] unsigned char 
 14630 ;;  esign           1   35[BANK0 ] unsigned char 
 14631 ;; Return value:  Size  Location     Type
 14632 ;;                  2   16[BANK0 ] int 
 14633 ;; Registers used:
 14634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14635 ;; Tracked objects:
 14636 ;;		On entry : 0/0
 14637 ;;		On exit  : 0/0
 14638 ;;		Unchanged: 0/0
 14639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14640 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14641 ;;      Locals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14643 ;;      Totals:         2      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14644 ;;Total ram usage:       58 bytes
 14645 ;; Hardware stack levels used: 1
 14646 ;; Hardware stack levels required when called: 5
 14647 ;; This function calls:
 14648 ;;		___awdiv
 14649 ;;		___awmod
 14650 ;;		___fladd
 14651 ;;		___fldiv
 14652 ;;		___fleq
 14653 ;;		___flge
 14654 ;;		___flmul
 14655 ;;		___flneg
 14656 ;;		___flsub
 14657 ;;		___fltol
 14658 ;;		___fpclassifyf
 14659 ;;		_floorf
 14660 ;;		_memcpy
 14661 ;;		_pad
 14662 ;;		_strcpy
 14663 ;; This function is called by:
 14664 ;;		_vfpfcnvrt
 14665 ;; This function uses a non-reentrant model
 14666 ;;
 14667                           
 14668                           	psect	text49
 14669   002096                     __ptext49:
 14670                           	callstack 0
 14671   002096                     _atoa:
 14672                           	callstack 19
 14673   002096                     
 14674                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 231: static int a
      +                          toa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c9
      +                          9\common\doprnt.c: 237: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\do
      +                          prnt.c: 238:     char pp, sign, esign;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\
      +                          c99\common\doprnt.c: 239:     int d, e, i, m, n, ne, p, t, w;;C:\Program Files\Microchip
      +                          \xc8\v2.45\pic\sources\c99\common\doprnt.c: 240:     long double g, h, l, ou, u;
 14675   002096  C096  F07C         	movff	atoa@c,??_atoa
 14676   00209A  0EBF               	movlw	191
 14677   00209C  267C               	addwf	??_atoa^0,f,c
 14678   00209E  0E19               	movlw	25
 14679   0020A0  647C               	cpfsgt	??_atoa^0,c
 14680   0020A2  EF55  F010         	goto	u10361
 14681   0020A6  EF58  F010         	goto	u10360
 14682   0020AA                     u10361:
 14683   0020AA  0E01               	movlw	1
 14684   0020AC  EF59  F010         	goto	u10370
 14685   0020B0                     u10360:
 14686   0020B0  0E00               	movlw	0
 14687   0020B2                     u10370:
 14688   0020B2  0100               	movlb	0	; () banked
 14689   0020B4  6F96               	movwf	atoa@c& (0+255),b
 14690   0020B6                     
 14691                           ; BSR set to: 0
 14692                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 247:     sign = 0
      +                          ;
 14693   0020B6  0E00               	movlw	0
 14694   0020B8  6FBD               	movwf	atoa@sign& (0+255),b
 14695   0020BA                     
 14696                           ; BSR set to: 0
 14697                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 248:     g = f;
 14698   0020BA  C092  F0B9         	movff	atoa@f,atoa@g
 14699   0020BE  C093  F0BA         	movff	atoa@f+1,atoa@g+1
 14700   0020C2  C094  F0BB         	movff	atoa@f+2,atoa@g+2
 14701   0020C6  C095  F0BC         	movff	atoa@f+3,atoa@g+3
 14702   0020CA                     
 14703                           ; BSR set to: 0
 14704                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 249:     if (g < 
      +                          0.0) {
 14705   0020CA  BFBC               	btfsc	(atoa@g+3)& (0+255),7,b
 14706   0020CC  EF6C  F010         	goto	u10380
 14707   0020D0  EF6A  F010         	goto	u10381
 14708   0020D4                     u10381:
 14709   0020D4  EF80  F010         	goto	l8882
 14710   0020D8                     u10380:
 14711   0020D8                     
 14712                           ; BSR set to: 0
 14713                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 250:         sign
      +                           = 1;
 14714   0020D8  0E01               	movlw	1
 14715   0020DA  6FBD               	movwf	atoa@sign& (0+255),b
 14716   0020DC                     
 14717                           ; BSR set to: 0
 14718                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 251:         g = 
      +                          -g;
 14719   0020DC  C0B9  F001         	movff	atoa@g,___flneg@f1
 14720   0020E0  C0BA  F002         	movff	atoa@g+1,___flneg@f1+1
 14721   0020E4  C0BB  F003         	movff	atoa@g+2,___flneg@f1+2
 14722   0020E8  C0BC  F004         	movff	atoa@g+3,___flneg@f1+3
 14723   0020EC  ECEF  F03B         	call	___flneg	;wreg free
 14724   0020F0  C001  F0B9         	movff	?___flneg,atoa@g
 14725   0020F4  C002  F0BA         	movff	?___flneg+1,atoa@g+1
 14726   0020F8  C003  F0BB         	movff	?___flneg+2,atoa@g+2
 14727   0020FC  C004  F0BC         	movff	?___flneg+3,atoa@g+3
 14728   002100                     l8882:
 14729                           
 14730                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 255:     n = 0;
 14731   002100  0E00               	movlw	0
 14732   002102  0100               	movlb	0	; () banked
 14733   002104  6FC7               	movwf	(atoa@n+1)& (0+255),b
 14734   002106  0E00               	movlw	0
 14735   002108  6FC6               	movwf	atoa@n& (0+255),b
 14736   00210A                     
 14737                           ; BSR set to: 0
 14738                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 256:     w = widt
      +                          h;
 14739   00210A  C1AA  F0B7         	movff	_width,atoa@w
 14740   00210E  C1AB  F0B8         	movff	_width+1,atoa@w+1
 14741   002112                     
 14742                           ; BSR set to: 0
 14743                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 257:     if (sign
 14744   002112  51BD               	movf	atoa@sign& (0+255),w,b
 14745   002114  A4D8               	btfss	status,2,c
 14746   002116  EF8F  F010         	goto	u10391
 14747   00211A  EF91  F010         	goto	u10390
 14748   00211E                     u10391:
 14749   00211E  EF99  F010         	goto	l8890
 14750   002122                     u10390:
 14751   002122                     
 14752                           ; BSR set to: 0
 14753   002122  0101               	movlb	1	; () banked
 14754   002124  A5B0               	btfss	_flags& (0+255),2,b
 14755   002126  EF97  F010         	goto	u10401
 14756   00212A  EF99  F010         	goto	u10400
 14757   00212E                     u10401:
 14758   00212E  EFB0  F010         	goto	l1185
 14759   002132                     u10400:
 14760   002132                     l8890:
 14761                           
 14762                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 261:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 262:   sign = sign ? '-
      +                          ' : '+';
 14763   002132  0100               	movlb	0	; () banked
 14764   002134  51BD               	movf	atoa@sign& (0+255),w,b
 14765   002136  A4D8               	btfss	status,2,c
 14766   002138  EFA0  F010         	goto	u10411
 14767   00213C  EFA2  F010         	goto	u10410
 14768   002140                     u10411:
 14769   002140  EFA8  F010         	goto	l8894
 14770   002144                     u10410:
 14771   002144                     
 14772                           ; BSR set to: 0
 14773   002144  0E00               	movlw	0
 14774   002146  6F9C               	movwf	(_atoa$1280+1)& (0+255),b
 14775   002148  0E2B               	movlw	43
 14776   00214A  6F9B               	movwf	_atoa$1280& (0+255),b
 14777   00214C  EFAC  F010         	goto	l8896
 14778   002150                     l8894:
 14779                           
 14780                           ; BSR set to: 0
 14781   002150  0E00               	movlw	0
 14782   002152  6F9C               	movwf	(_atoa$1280+1)& (0+255),b
 14783   002154  0E2D               	movlw	45
 14784   002156  6F9B               	movwf	_atoa$1280& (0+255),b
 14785   002158                     l8896:
 14786                           
 14787                           ; BSR set to: 0
 14788   002158  C09B  F0BD         	movff	_atoa$1280,atoa@sign
 14789                           
 14790                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 263:     }
 14791   00215C  EFBA  F010         	goto	l8900
 14792   002160                     l1185:
 14793                           
 14794                           ; BSR set to: 1
 14795   002160  A7B0               	btfss	_flags& (0+255),3,b
 14796   002162  EFB5  F010         	goto	u10421
 14797   002166  EFB7  F010         	goto	u10420
 14798   00216A                     u10421:
 14799   00216A  EFBA  F010         	goto	l8900
 14800   00216E                     u10420:
 14801   00216E                     
 14802                           ; BSR set to: 1
 14803                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 266:   sign = ' '
      +                          ;
 14804   00216E  0E20               	movlw	32
 14805   002170  0100               	movlb	0	; () banked
 14806   002172  6FBD               	movwf	atoa@sign& (0+255),b
 14807   002174                     l8900:
 14808                           
 14809                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 270:     if (( __
      +                          fpclassifyf(g) == 1 )) {
 14810   002174  C0B9  F001         	movff	atoa@g,___fpclassifyf@x
 14811   002178  C0BA  F002         	movff	atoa@g+1,___fpclassifyf@x+1
 14812   00217C  C0BB  F003         	movff	atoa@g+2,___fpclassifyf@x+2
 14813   002180  C0BC  F004         	movff	atoa@g+3,___fpclassifyf@x+3
 14814   002184  EC9F  F033         	call	___fpclassifyf	;wreg free
 14815   002188  0401               	decf	?___fpclassifyf^0,w,c
 14816   00218A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 14817   00218C  A4D8               	btfss	status,2,c
 14818   00218E  EFCB  F010         	goto	u10431
 14819   002192  EFCD  F010         	goto	u10430
 14820   002196                     u10431:
 14821   002196  EF1A  F011         	goto	l8922
 14822   00219A                     u10430:
 14823   00219A                     
 14824                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 271:   if (sign) 
      +                          {
 14825   00219A  0100               	movlb	0	; () banked
 14826   00219C  51BD               	movf	atoa@sign& (0+255),w,b
 14827   00219E  B4D8               	btfsc	status,2,c
 14828   0021A0  EFD4  F010         	goto	u10441
 14829   0021A4  EFD6  F010         	goto	u10440
 14830   0021A8                     u10441:
 14831   0021A8  EFDF  F010         	goto	l8910
 14832   0021AC                     u10440:
 14833   0021AC                     
 14834                           ; BSR set to: 0
 14835                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 272:    dbuf[0] =
      +                           sign;
 14836   0021AC  C0BD  F320         	movff	atoa@sign,_dbuf
 14837   0021B0                     
 14838                           ; BSR set to: 0
 14839                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 273:    n = 1;
 14840   0021B0  0E00               	movlw	0
 14841   0021B2  6FC7               	movwf	(atoa@n+1)& (0+255),b
 14842   0021B4  0E01               	movlw	1
 14843   0021B6  6FC6               	movwf	atoa@n& (0+255),b
 14844   0021B8                     
 14845                           ; BSR set to: 0
 14846                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 274:    w--;
 14847   0021B8  07B7               	decf	atoa@w& (0+255),f,b
 14848   0021BA  A0D8               	btfss	status,0,c
 14849   0021BC  07B8               	decf	(atoa@w+1)& (0+255),f,b
 14850   0021BE                     l8910:
 14851                           
 14852                           ; BSR set to: 0
 14853                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 277:         if (
      +                          c) {
 14854   0021BE  5196               	movf	atoa@c& (0+255),w,b
 14855   0021C0  B4D8               	btfsc	status,2,c
 14856   0021C2  EFE5  F010         	goto	u10451
 14857   0021C6  EFE7  F010         	goto	u10450
 14858   0021CA                     u10451:
 14859   0021CA  EFF5  F010         	goto	l8914
 14860   0021CE                     u10450:
 14861   0021CE                     
 14862                           ; BSR set to: 0
 14863                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 278:             
      +                          strcpy(&dbuf[n], "INF");
 14864   0021CE  0E20               	movlw	low _dbuf
 14865   0021D0  25C6               	addwf	atoa@n& (0+255),w,b
 14866   0021D2  6E01               	movwf	strcpy@dest^0,c
 14867   0021D4  0E03               	movlw	high _dbuf
 14868   0021D6  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 14869   0021D8  6E02               	movwf	(strcpy@dest+1)^0,c
 14870   0021DA  0EE5               	movlw	low STR_39
 14871   0021DC  6E03               	movwf	strcpy@src^0,c
 14872   0021DE  0EFF               	movlw	high STR_39
 14873   0021E0  6E04               	movwf	(strcpy@src+1)^0,c
 14874   0021E2  ECD3  F03B         	call	_strcpy	;wreg free
 14875                           
 14876                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 279:         }
 14877   0021E6  EF01  F011         	goto	l8916
 14878   0021EA                     l8914:
 14879                           
 14880                           ; BSR set to: 0
 14881                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 282:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 283:             strcpy(&d
      +                          buf[n], "inf");
 14882   0021EA  0E20               	movlw	low _dbuf
 14883   0021EC  25C6               	addwf	atoa@n& (0+255),w,b
 14884   0021EE  6E01               	movwf	strcpy@dest^0,c
 14885   0021F0  0E03               	movlw	high _dbuf
 14886   0021F2  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 14887   0021F4  6E02               	movwf	(strcpy@dest+1)^0,c
 14888   0021F6  0EED               	movlw	low STR_40
 14889   0021F8  6E03               	movwf	strcpy@src^0,c
 14890   0021FA  0EFF               	movlw	high STR_40
 14891   0021FC  6E04               	movwf	(strcpy@src+1)^0,c
 14892   0021FE  ECD3  F03B         	call	_strcpy	;wreg free
 14893   002202                     l8916:
 14894                           
 14895                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 285:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
 14896   002202  0100               	movlb	0	; () banked
 14897   002204  0EFD               	movlw	253
 14898   002206  27B7               	addwf	atoa@w& (0+255),f,b
 14899   002208  0EFF               	movlw	255
 14900   00220A  23B8               	addwfc	(atoa@w+1)& (0+255),f,b
 14901   00220C                     
 14902                           ; BSR set to: 0
 14903                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 286:         retu
      +                          rn (int) pad(fp, &dbuf[0], w);
 14904   00220C  C090  F011         	movff	atoa@fp,pad@fp
 14905   002210  C091  F012         	movff	atoa@fp+1,pad@fp+1
 14906   002214  0E20               	movlw	low _dbuf
 14907   002216  6E13               	movwf	pad@buf^0,c
 14908   002218  0E03               	movlw	high _dbuf
 14909   00221A  6E14               	movwf	(pad@buf+1)^0,c
 14910   00221C  C0B7  F015         	movff	atoa@w,pad@p
 14911   002220  C0B8  F016         	movff	atoa@w+1,pad@p+1
 14912   002224  EC0E  F037         	call	_pad	;wreg free
 14913   002228  C011  F090         	movff	?_pad,?_atoa
 14914   00222C  C012  F091         	movff	?_pad+1,?_atoa+1
 14915   002230  EFB2  F016         	goto	l1198
 14916   002234                     l8922:
 14917                           
 14918                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 288:     if (( __
      +                          fpclassifyf(g) == 0 )) {
 14919   002234  C0B9  F001         	movff	atoa@g,___fpclassifyf@x
 14920   002238  C0BA  F002         	movff	atoa@g+1,___fpclassifyf@x+1
 14921   00223C  C0BB  F003         	movff	atoa@g+2,___fpclassifyf@x+2
 14922   002240  C0BC  F004         	movff	atoa@g+3,___fpclassifyf@x+3
 14923   002244  EC9F  F033         	call	___fpclassifyf	;wreg free
 14924   002248  5001               	movf	?___fpclassifyf^0,w,c
 14925   00224A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
 14926   00224C  A4D8               	btfss	status,2,c
 14927   00224E  EF2B  F011         	goto	u10461
 14928   002252  EF2D  F011         	goto	u10460
 14929   002256                     u10461:
 14930   002256  EF63  F011         	goto	l8944
 14931   00225A                     u10460:
 14932   00225A                     
 14933                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 289:   if (sign) 
      +                          {
 14934   00225A  0100               	movlb	0	; () banked
 14935   00225C  51BD               	movf	atoa@sign& (0+255),w,b
 14936   00225E  B4D8               	btfsc	status,2,c
 14937   002260  EF34  F011         	goto	u10471
 14938   002264  EF36  F011         	goto	u10470
 14939   002268                     u10471:
 14940   002268  EF3F  F011         	goto	l8932
 14941   00226C                     u10470:
 14942   00226C                     
 14943                           ; BSR set to: 0
 14944                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 290:    dbuf[0] =
      +                           sign;
 14945   00226C  C0BD  F320         	movff	atoa@sign,_dbuf
 14946   002270                     
 14947                           ; BSR set to: 0
 14948                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 291:    n = 1;
 14949   002270  0E00               	movlw	0
 14950   002272  6FC7               	movwf	(atoa@n+1)& (0+255),b
 14951   002274  0E01               	movlw	1
 14952   002276  6FC6               	movwf	atoa@n& (0+255),b
 14953   002278                     
 14954                           ; BSR set to: 0
 14955                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 292:    w--;
 14956   002278  07B7               	decf	atoa@w& (0+255),f,b
 14957   00227A  A0D8               	btfss	status,0,c
 14958   00227C  07B8               	decf	(atoa@w+1)& (0+255),f,b
 14959   00227E                     l8932:
 14960                           
 14961                           ; BSR set to: 0
 14962                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 295:         if (
      +                          c) {
 14963   00227E  5196               	movf	atoa@c& (0+255),w,b
 14964   002280  B4D8               	btfsc	status,2,c
 14965   002282  EF45  F011         	goto	u10481
 14966   002286  EF47  F011         	goto	u10480
 14967   00228A                     u10481:
 14968   00228A  EF55  F011         	goto	l8936
 14969   00228E                     u10480:
 14970   00228E                     
 14971                           ; BSR set to: 0
 14972                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 296:             
      +                          strcpy(&dbuf[n], "NAN");
 14973   00228E  0E20               	movlw	low _dbuf
 14974   002290  25C6               	addwf	atoa@n& (0+255),w,b
 14975   002292  6E01               	movwf	strcpy@dest^0,c
 14976   002294  0E03               	movlw	high _dbuf
 14977   002296  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 14978   002298  6E02               	movwf	(strcpy@dest+1)^0,c
 14979   00229A  0EE9               	movlw	low STR_43
 14980   00229C  6E03               	movwf	strcpy@src^0,c
 14981   00229E  0EFF               	movlw	high STR_43
 14982   0022A0  6E04               	movwf	(strcpy@src+1)^0,c
 14983   0022A2  ECD3  F03B         	call	_strcpy	;wreg free
 14984                           
 14985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 297:         }
 14986   0022A6  EF01  F011         	goto	l8916
 14987   0022AA                     l8936:
 14988                           
 14989                           ; BSR set to: 0
 14990                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 300:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 301:             strcpy(&d
      +                          buf[n], "nan");
 14991   0022AA  0E20               	movlw	low _dbuf
 14992   0022AC  25C6               	addwf	atoa@n& (0+255),w,b
 14993   0022AE  6E01               	movwf	strcpy@dest^0,c
 14994   0022B0  0E03               	movlw	high _dbuf
 14995   0022B2  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 14996   0022B4  6E02               	movwf	(strcpy@dest+1)^0,c
 14997   0022B6  0EF1               	movlw	low STR_44
 14998   0022B8  6E03               	movwf	strcpy@src^0,c
 14999   0022BA  0EFF               	movlw	high STR_44
 15000   0022BC  6E04               	movwf	(strcpy@src+1)^0,c
 15001   0022BE  ECD3  F03B         	call	_strcpy	;wreg free
 15002   0022C2  EF01  F011         	goto	l8916
 15003   0022C6                     l8944:
 15004                           
 15005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 308:     u = 1.0;
 15006   0022C6  0E00               	movlw	0
 15007   0022C8  0100               	movlb	0	; () banked
 15008   0022CA  6FC0               	movwf	atoa@u& (0+255),b
 15009   0022CC  0E00               	movlw	0
 15010   0022CE  6FC1               	movwf	(atoa@u+1)& (0+255),b
 15011   0022D0  0E80               	movlw	128
 15012   0022D2  6FC2               	movwf	(atoa@u+2)& (0+255),b
 15013   0022D4  0E3F               	movlw	63
 15014   0022D6  6FC3               	movwf	(atoa@u+3)& (0+255),b
 15015                           
 15016                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 309:     e = 0;
 15017   0022D8  0E00               	movlw	0
 15018   0022DA  6FAE               	movwf	(atoa@e+1)& (0+255),b
 15019   0022DC  0E00               	movlw	0
 15020   0022DE  6FAD               	movwf	atoa@e& (0+255),b
 15021   0022E0                     
 15022                           ; BSR set to: 0
 15023                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 310:     if (!(g 
      +                          == 0.0)) {
 15024   0022E0  C0B9  F001         	movff	atoa@g,___fleq@ff1
 15025   0022E4  C0BA  F002         	movff	atoa@g+1,___fleq@ff1+1
 15026   0022E8  C0BB  F003         	movff	atoa@g+2,___fleq@ff1+2
 15027   0022EC  C0BC  F004         	movff	atoa@g+3,___fleq@ff1+3
 15028   0022F0  0E00               	movlw	0
 15029   0022F2  6E05               	movwf	___fleq@ff2^0,c
 15030   0022F4  0E00               	movlw	0
 15031   0022F6  6E06               	movwf	(___fleq@ff2+1)^0,c
 15032   0022F8  0E00               	movlw	0
 15033   0022FA  6E07               	movwf	(___fleq@ff2+2)^0,c
 15034   0022FC  0E00               	movlw	0
 15035   0022FE  6E08               	movwf	(___fleq@ff2+3)^0,c
 15036   002300  ECC3  F037         	call	___fleq	;wreg free
 15037   002304  B0D8               	btfsc	status,0,c
 15038   002306  EF87  F011         	goto	u10491
 15039   00230A  EF89  F011         	goto	u10490
 15040   00230E                     u10491:
 15041   00230E  EF0E  F012         	goto	l8962
 15042   002312                     u10490:
 15043   002312  EFA8  F011         	goto	l8954
 15044   002316                     l8950:
 15045                           
 15046                           ; BSR set to: 0
 15047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 312:             
      +                          u = u*2.0;
 15048   002316  C0C0  F03D         	movff	atoa@u,___flmul@b
 15049   00231A  C0C1  F03E         	movff	atoa@u+1,___flmul@b+1
 15050   00231E  C0C2  F03F         	movff	atoa@u+2,___flmul@b+2
 15051   002322  C0C3  F040         	movff	atoa@u+3,___flmul@b+3
 15052   002326  0E00               	movlw	0
 15053   002328  6E41               	movwf	___flmul@a^0,c
 15054   00232A  0E00               	movlw	0
 15055   00232C  6E42               	movwf	(___flmul@a+1)^0,c
 15056   00232E  0E00               	movlw	0
 15057   002330  6E43               	movwf	(___flmul@a+2)^0,c
 15058   002332  0E40               	movlw	64
 15059   002334  6E44               	movwf	(___flmul@a+3)^0,c
 15060   002336  EC59  F01D         	call	___flmul	;wreg free
 15061   00233A  C03D  F0C0         	movff	?___flmul,atoa@u
 15062   00233E  C03E  F0C1         	movff	?___flmul+1,atoa@u+1
 15063   002342  C03F  F0C2         	movff	?___flmul+2,atoa@u+2
 15064   002346  C040  F0C3         	movff	?___flmul+3,atoa@u+3
 15065   00234A                     
 15066                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 313:             
      +                          ++e;
 15067   00234A  0100               	movlb	0	; () banked
 15068   00234C  4BAD               	infsnz	atoa@e& (0+255),f,b
 15069   00234E  2BAE               	incf	(atoa@e+1)& (0+255),f,b
 15070   002350                     l8954:
 15071                           
 15072                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 311:         whil
      +                          e (!(g < (u*2.0))) {
 15073   002350  C0B9  F084         	movff	atoa@g,___flge@ff1
 15074   002354  C0BA  F085         	movff	atoa@g+1,___flge@ff1+1
 15075   002358  C0BB  F086         	movff	atoa@g+2,___flge@ff1+2
 15076   00235C  C0BC  F087         	movff	atoa@g+3,___flge@ff1+3
 15077   002360  0E00               	movlw	0
 15078   002362  6E41               	movwf	___flmul@a^0,c
 15079   002364  0E00               	movlw	0
 15080   002366  6E42               	movwf	(___flmul@a+1)^0,c
 15081   002368  0E00               	movlw	0
 15082   00236A  6E43               	movwf	(___flmul@a+2)^0,c
 15083   00236C  0E40               	movlw	64
 15084   00236E  6E44               	movwf	(___flmul@a+3)^0,c
 15085   002370  C0C0  F03D         	movff	atoa@u,___flmul@b
 15086   002374  C0C1  F03E         	movff	atoa@u+1,___flmul@b+1
 15087   002378  C0C2  F03F         	movff	atoa@u+2,___flmul@b+2
 15088   00237C  C0C3  F040         	movff	atoa@u+3,___flmul@b+3
 15089   002380  EC59  F01D         	call	___flmul	;wreg free
 15090   002384  C03D  F088         	movff	?___flmul,___flge@ff2
 15091   002388  C03E  F089         	movff	?___flmul+1,___flge@ff2+1
 15092   00238C  C03F  F08A         	movff	?___flmul+2,___flge@ff2+2
 15093   002390  C040  F08B         	movff	?___flmul+3,___flge@ff2+3
 15094   002394  EC1C  F033         	call	___flge	;wreg free
 15095   002398  0100               	movlb	0	; () banked
 15096   00239A  B0D8               	btfsc	status,0,c
 15097   00239C  EFD2  F011         	goto	u10501
 15098   0023A0  EFD4  F011         	goto	u10500
 15099   0023A4                     u10501:
 15100   0023A4  EF8B  F011         	goto	l8950
 15101   0023A8                     u10500:
 15102   0023A8  EFF4  F011         	goto	l8960
 15103   0023AC                     l8956:
 15104                           
 15105                           ; BSR set to: 0
 15106                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 316:             
      +                          u = u/2.0;
 15107   0023AC  C0C0  F024         	movff	atoa@u,___fldiv@b
 15108   0023B0  C0C1  F025         	movff	atoa@u+1,___fldiv@b+1
 15109   0023B4  C0C2  F026         	movff	atoa@u+2,___fldiv@b+2
 15110   0023B8  C0C3  F027         	movff	atoa@u+3,___fldiv@b+3
 15111   0023BC  0E00               	movlw	0
 15112   0023BE  6E28               	movwf	___fldiv@a^0,c
 15113   0023C0  0E00               	movlw	0
 15114   0023C2  6E29               	movwf	(___fldiv@a+1)^0,c
 15115   0023C4  0E00               	movlw	0
 15116   0023C6  6E2A               	movwf	(___fldiv@a+2)^0,c
 15117   0023C8  0E40               	movlw	64
 15118   0023CA  6E2B               	movwf	(___fldiv@a+3)^0,c
 15119   0023CC  EC6E  F01F         	call	___fldiv	;wreg free
 15120   0023D0  C024  F0C0         	movff	?___fldiv,atoa@u
 15121   0023D4  C025  F0C1         	movff	?___fldiv+1,atoa@u+1
 15122   0023D8  C026  F0C2         	movff	?___fldiv+2,atoa@u+2
 15123   0023DC  C027  F0C3         	movff	?___fldiv+3,atoa@u+3
 15124   0023E0                     
 15125                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 317:             
      +                          --e;
 15126   0023E0  0100               	movlb	0	; () banked
 15127   0023E2  07AD               	decf	atoa@e& (0+255),f,b
 15128   0023E4  A0D8               	btfss	status,0,c
 15129   0023E6  07AE               	decf	(atoa@e+1)& (0+255),f,b
 15130   0023E8                     l8960:
 15131                           
 15132                           ; BSR set to: 0
 15133                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 315:         whil
      +                          e (g < u) {
 15134   0023E8  C0B9  F084         	movff	atoa@g,___flge@ff1
 15135   0023EC  C0BA  F085         	movff	atoa@g+1,___flge@ff1+1
 15136   0023F0  C0BB  F086         	movff	atoa@g+2,___flge@ff1+2
 15137   0023F4  C0BC  F087         	movff	atoa@g+3,___flge@ff1+3
 15138   0023F8  C0C0  F088         	movff	atoa@u,___flge@ff2
 15139   0023FC  C0C1  F089         	movff	atoa@u+1,___flge@ff2+1
 15140   002400  C0C2  F08A         	movff	atoa@u+2,___flge@ff2+2
 15141   002404  C0C3  F08B         	movff	atoa@u+3,___flge@ff2+3
 15142   002408  EC1C  F033         	call	___flge	;wreg free
 15143   00240C  0100               	movlb	0	; () banked
 15144   00240E  A0D8               	btfss	status,0,c
 15145   002410  EF0C  F012         	goto	u10511
 15146   002414  EF0E  F012         	goto	u10510
 15147   002418                     u10511:
 15148   002418  EFD6  F011         	goto	l8956
 15149   00241C                     u10510:
 15150   00241C                     l8962:
 15151                           
 15152                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 322:     p = (pre
      +                          c < 0) ? (80 -5 -1) : prec;
 15153   00241C  0101               	movlb	1	; () banked
 15154   00241E  BFAD               	btfsc	(_prec+1)& (0+255),7,b
 15155   002420  EF14  F012         	goto	u10521
 15156   002424  EF16  F012         	goto	u10520
 15157   002428                     u10521:
 15158   002428  EF1C  F012         	goto	l8966
 15159   00242C                     u10520:
 15160   00242C                     
 15161                           ; BSR set to: 1
 15162   00242C  C1AC  F0A8         	movff	_prec,atoa@p
 15163   002430  C1AD  F0A9         	movff	_prec+1,atoa@p+1
 15164   002434  EF21  F012         	goto	l8968
 15165   002438                     l8966:
 15166                           
 15167                           ; BSR set to: 1
 15168   002438  0E00               	movlw	0
 15169   00243A  0100               	movlb	0	; () banked
 15170   00243C  6FA9               	movwf	(atoa@p+1)& (0+255),b
 15171   00243E  0E4A               	movlw	74
 15172   002440  6FA8               	movwf	atoa@p& (0+255),b
 15173   002442                     l8968:
 15174                           
 15175                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 325:     m = p + 
      +                          1;
 15176   002442  0E01               	movlw	1
 15177   002444  0100               	movlb	0	; () banked
 15178   002446  25A8               	addwf	atoa@p& (0+255),w,b
 15179   002448  6FA4               	movwf	atoa@m& (0+255),b
 15180   00244A  0E00               	movlw	0
 15181   00244C  21A9               	addwfc	(atoa@p+1)& (0+255),w,b
 15182   00244E  6FA5               	movwf	(atoa@m+1)& (0+255),b
 15183   002450                     
 15184                           ; BSR set to: 0
 15185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 328:     i = 0;
 15186   002450  0E00               	movlw	0
 15187   002452  6FC5               	movwf	(atoa@i+1)& (0+255),b
 15188   002454  0E00               	movlw	0
 15189   002456  6FC4               	movwf	atoa@i& (0+255),b
 15190   002458                     
 15191                           ; BSR set to: 0
 15192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 329:     h = g;
 15193   002458  C0B9  F0AF         	movff	atoa@g,atoa@h
 15194   00245C  C0BA  F0B0         	movff	atoa@g+1,atoa@h+1
 15195   002460  C0BB  F0B1         	movff	atoa@g+2,atoa@h+2
 15196   002464  C0BC  F0B2         	movff	atoa@g+3,atoa@h+3
 15197   002468                     
 15198                           ; BSR set to: 0
 15199                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 330:     ou = u;
 15200   002468  C0C0  F097         	movff	atoa@u,atoa@ou
 15201   00246C  C0C1  F098         	movff	atoa@u+1,atoa@ou+1
 15202   002470  C0C2  F099         	movff	atoa@u+2,atoa@ou+2
 15203   002474  C0C3  F09A         	movff	atoa@u+3,atoa@ou+3
 15204                           
 15205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 331:     while (i
      +                           < m) {
 15206   002478  EFB9  F012         	goto	l8984
 15207   00247C                     l8976:
 15208                           
 15209                           ; BSR set to: 0
 15210                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 332:         l = 
      +                          floorf(h/u);
 15211   00247C  C0AF  F024         	movff	atoa@h,___fldiv@b
 15212   002480  C0B0  F025         	movff	atoa@h+1,___fldiv@b+1
 15213   002484  C0B1  F026         	movff	atoa@h+2,___fldiv@b+2
 15214   002488  C0B2  F027         	movff	atoa@h+3,___fldiv@b+3
 15215   00248C  C0C0  F028         	movff	atoa@u,___fldiv@a
 15216   002490  C0C1  F029         	movff	atoa@u+1,___fldiv@a+1
 15217   002494  C0C2  F02A         	movff	atoa@u+2,___fldiv@a+2
 15218   002498  C0C3  F02B         	movff	atoa@u+3,___fldiv@a+3
 15219   00249C  EC6E  F01F         	call	___fldiv	;wreg free
 15220   0024A0  C024  F03D         	movff	?___fldiv,floorf@x
 15221   0024A4  C025  F03E         	movff	?___fldiv+1,floorf@x+1
 15222   0024A8  C026  F03F         	movff	?___fldiv+2,floorf@x+2
 15223   0024AC  C027  F040         	movff	?___fldiv+3,floorf@x+3
 15224   0024B0  EC41  F027         	call	_floorf	;wreg free
 15225   0024B4  C03D  F0B3         	movff	?_floorf,atoa@l
 15226   0024B8  C03E  F0B4         	movff	?_floorf+1,atoa@l+1
 15227   0024BC  C03F  F0B5         	movff	?_floorf+2,atoa@l+2
 15228   0024C0  C040  F0B6         	movff	?_floorf+3,atoa@l+3
 15229                           
 15230                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 333:         d = 
      +                          (int)l;
 15231   0024C4  C0B3  F066         	movff	atoa@l,___fltol@f1
 15232   0024C8  C0B4  F067         	movff	atoa@l+1,___fltol@f1+1
 15233   0024CC  C0B5  F068         	movff	atoa@l+2,___fltol@f1+2
 15234   0024D0  C0B6  F069         	movff	atoa@l+3,___fltol@f1+3
 15235   0024D4  EC99  F032         	call	___fltol	;wreg free
 15236   0024D8  C066  F0BE         	movff	?___fltol,atoa@d
 15237   0024DC  C067  F0BF         	movff	?___fltol+1,atoa@d+1
 15238   0024E0                     
 15239                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 334:         h -=
      +                           l*u;
 15240   0024E0  C0AF  F074         	movff	atoa@h,___flsub@b
 15241   0024E4  C0B0  F075         	movff	atoa@h+1,___flsub@b+1
 15242   0024E8  C0B1  F076         	movff	atoa@h+2,___flsub@b+2
 15243   0024EC  C0B2  F077         	movff	atoa@h+3,___flsub@b+3
 15244   0024F0  C0C0  F041         	movff	atoa@u,___flmul@a
 15245   0024F4  C0C1  F042         	movff	atoa@u+1,___flmul@a+1
 15246   0024F8  C0C2  F043         	movff	atoa@u+2,___flmul@a+2
 15247   0024FC  C0C3  F044         	movff	atoa@u+3,___flmul@a+3
 15248   002500  C0B3  F03D         	movff	atoa@l,___flmul@b
 15249   002504  C0B4  F03E         	movff	atoa@l+1,___flmul@b+1
 15250   002508  C0B5  F03F         	movff	atoa@l+2,___flmul@b+2
 15251   00250C  C0B6  F040         	movff	atoa@l+3,___flmul@b+3
 15252   002510  EC59  F01D         	call	___flmul	;wreg free
 15253   002514  C03D  F078         	movff	?___flmul,___flsub@a
 15254   002518  C03E  F079         	movff	?___flmul+1,___flsub@a+1
 15255   00251C  C03F  F07A         	movff	?___flmul+2,___flsub@a+2
 15256   002520  C040  F07B         	movff	?___flmul+3,___flsub@a+3
 15257   002524  EC54  F03B         	call	___flsub	;wreg free
 15258   002528  C074  F0AF         	movff	?___flsub,atoa@h
 15259   00252C  C075  F0B0         	movff	?___flsub+1,atoa@h+1
 15260   002530  C076  F0B1         	movff	?___flsub+2,atoa@h+2
 15261   002534  C077  F0B2         	movff	?___flsub+3,atoa@h+3
 15262   002538                     
 15263                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 335:         u = 
      +                          u/16.0;
 15264   002538  C0C0  F024         	movff	atoa@u,___fldiv@b
 15265   00253C  C0C1  F025         	movff	atoa@u+1,___fldiv@b+1
 15266   002540  C0C2  F026         	movff	atoa@u+2,___fldiv@b+2
 15267   002544  C0C3  F027         	movff	atoa@u+3,___fldiv@b+3
 15268   002548  0E00               	movlw	0
 15269   00254A  6E28               	movwf	___fldiv@a^0,c
 15270   00254C  0E00               	movlw	0
 15271   00254E  6E29               	movwf	(___fldiv@a+1)^0,c
 15272   002550  0E80               	movlw	128
 15273   002552  6E2A               	movwf	(___fldiv@a+2)^0,c
 15274   002554  0E41               	movlw	65
 15275   002556  6E2B               	movwf	(___fldiv@a+3)^0,c
 15276   002558  EC6E  F01F         	call	___fldiv	;wreg free
 15277   00255C  C024  F0C0         	movff	?___fldiv,atoa@u
 15278   002560  C025  F0C1         	movff	?___fldiv+1,atoa@u+1
 15279   002564  C026  F0C2         	movff	?___fldiv+2,atoa@u+2
 15280   002568  C027  F0C3         	movff	?___fldiv+3,atoa@u+3
 15281   00256C                     
 15282                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 336:         ++i;
 15283   00256C  0100               	movlb	0	; () banked
 15284   00256E  4BC4               	infsnz	atoa@i& (0+255),f,b
 15285   002570  2BC5               	incf	(atoa@i+1)& (0+255),f,b
 15286   002572                     l8984:
 15287                           
 15288                           ; BSR set to: 0
 15289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 331:     while (i
      +                           < m) {
 15290   002572  51A4               	movf	atoa@m& (0+255),w,b
 15291   002574  5DC4               	subwf	atoa@i& (0+255),w,b
 15292   002576  51C5               	movf	(atoa@i+1)& (0+255),w,b
 15293   002578  0A80               	xorlw	128
 15294   00257A  6E7C               	movwf	??_atoa^0,c
 15295   00257C  51A5               	movf	(atoa@m+1)& (0+255),w,b
 15296   00257E  0A80               	xorlw	128
 15297   002580  587C               	subwfb	??_atoa^0,w,c
 15298   002582  A0D8               	btfss	status,0,c
 15299   002584  EFC6  F012         	goto	u10531
 15300   002588  EFC8  F012         	goto	u10530
 15301   00258C                     u10531:
 15302   00258C  EF3E  F012         	goto	l8976
 15303   002590                     u10530:
 15304   002590                     
 15305                           ; BSR set to: 0
 15306                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 340:     l = u*8.
      +                          0;
 15307   002590  C0C0  F03D         	movff	atoa@u,___flmul@b
 15308   002594  C0C1  F03E         	movff	atoa@u+1,___flmul@b+1
 15309   002598  C0C2  F03F         	movff	atoa@u+2,___flmul@b+2
 15310   00259C  C0C3  F040         	movff	atoa@u+3,___flmul@b+3
 15311   0025A0  0E00               	movlw	0
 15312   0025A2  6E41               	movwf	___flmul@a^0,c
 15313   0025A4  0E00               	movlw	0
 15314   0025A6  6E42               	movwf	(___flmul@a+1)^0,c
 15315   0025A8  0E00               	movlw	0
 15316   0025AA  6E43               	movwf	(___flmul@a+2)^0,c
 15317   0025AC  0E41               	movlw	65
 15318   0025AE  6E44               	movwf	(___flmul@a+3)^0,c
 15319   0025B0  EC59  F01D         	call	___flmul	;wreg free
 15320   0025B4  C03D  F0B3         	movff	?___flmul,atoa@l
 15321   0025B8  C03E  F0B4         	movff	?___flmul+1,atoa@l+1
 15322   0025BC  C03F  F0B5         	movff	?___flmul+2,atoa@l+2
 15323   0025C0  C040  F0B6         	movff	?___flmul+3,atoa@l+3
 15324   0025C4                     
 15325                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 341:     if (h < 
      +                          l) {
 15326   0025C4  C0AF  F084         	movff	atoa@h,___flge@ff1
 15327   0025C8  C0B0  F085         	movff	atoa@h+1,___flge@ff1+1
 15328   0025CC  C0B1  F086         	movff	atoa@h+2,___flge@ff1+2
 15329   0025D0  C0B2  F087         	movff	atoa@h+3,___flge@ff1+3
 15330   0025D4  C0B3  F088         	movff	atoa@l,___flge@ff2
 15331   0025D8  C0B4  F089         	movff	atoa@l+1,___flge@ff2+1
 15332   0025DC  C0B5  F08A         	movff	atoa@l+2,___flge@ff2+2
 15333   0025E0  C0B6  F08B         	movff	atoa@l+3,___flge@ff2+3
 15334   0025E4  EC1C  F033         	call	___flge	;wreg free
 15335   0025E8  0100               	movlb	0	; () banked
 15336   0025EA  B0D8               	btfsc	status,0,c
 15337   0025EC  EFFA  F012         	goto	u10541
 15338   0025F0  EFFC  F012         	goto	u10540
 15339   0025F4                     u10541:
 15340   0025F4  EF06  F013         	goto	l8992
 15341   0025F8                     u10540:
 15342   0025F8                     
 15343                           ; BSR set to: 0
 15344                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 342:         l = 
      +                          0.0;
 15345   0025F8  0E00               	movlw	0
 15346   0025FA  6FB3               	movwf	atoa@l& (0+255),b
 15347   0025FC  0E00               	movlw	0
 15348   0025FE  6FB4               	movwf	(atoa@l+1)& (0+255),b
 15349   002600  0E00               	movlw	0
 15350   002602  6FB5               	movwf	(atoa@l+2)& (0+255),b
 15351   002604  0E00               	movlw	0
 15352   002606  6FB6               	movwf	(atoa@l+3)& (0+255),b
 15353                           
 15354                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 343:     } else {
 15355   002608  EF2F  F013         	goto	l8998
 15356   00260C                     l8992:
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 345:         if (
      +                          (h == l) && !(d % 2)) {
 15360   00260C  C0AF  F001         	movff	atoa@h,___fleq@ff1
 15361   002610  C0B0  F002         	movff	atoa@h+1,___fleq@ff1+1
 15362   002614  C0B1  F003         	movff	atoa@h+2,___fleq@ff1+2
 15363   002618  C0B2  F004         	movff	atoa@h+3,___fleq@ff1+3
 15364   00261C  C0B3  F005         	movff	atoa@l,___fleq@ff2
 15365   002620  C0B4  F006         	movff	atoa@l+1,___fleq@ff2+1
 15366   002624  C0B5  F007         	movff	atoa@l+2,___fleq@ff2+2
 15367   002628  C0B6  F008         	movff	atoa@l+3,___fleq@ff2+3
 15368   00262C  ECC3  F037         	call	___fleq	;wreg free
 15369   002630  A0D8               	btfss	status,0,c
 15370   002632  EF1D  F013         	goto	u10551
 15371   002636  EF1F  F013         	goto	u10550
 15372   00263A                     u10551:
 15373   00263A  EF2F  F013         	goto	l8998
 15374   00263E                     u10550:
 15375   00263E  0100               	movlb	0	; () banked
 15376   002640  B1BE               	btfsc	atoa@d& (0+255),0,b
 15377   002642  EF25  F013         	goto	u10561
 15378   002646  EF27  F013         	goto	u10560
 15379   00264A                     u10561:
 15380   00264A  EF2F  F013         	goto	l8998
 15381   00264E                     u10560:
 15382   00264E                     
 15383                           ; BSR set to: 0
 15384                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 346:             
      +                          l = 0.0;
 15385   00264E  0E00               	movlw	0
 15386   002650  6FB3               	movwf	atoa@l& (0+255),b
 15387   002652  0E00               	movlw	0
 15388   002654  6FB4               	movwf	(atoa@l+1)& (0+255),b
 15389   002656  0E00               	movlw	0
 15390   002658  6FB5               	movwf	(atoa@l+2)& (0+255),b
 15391   00265A  0E00               	movlw	0
 15392   00265C  6FB6               	movwf	(atoa@l+3)& (0+255),b
 15393   00265E                     l8998:
 15394                           
 15395                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 351:     h = g + 
      +                          l;
 15396   00265E  C0B9  F056         	movff	atoa@g,___fladd@b
 15397   002662  C0BA  F057         	movff	atoa@g+1,___fladd@b+1
 15398   002666  C0BB  F058         	movff	atoa@g+2,___fladd@b+2
 15399   00266A  C0BC  F059         	movff	atoa@g+3,___fladd@b+3
 15400   00266E  C0B3  F05A         	movff	atoa@l,___fladd@a
 15401   002672  C0B4  F05B         	movff	atoa@l+1,___fladd@a+1
 15402   002676  C0B5  F05C         	movff	atoa@l+2,___fladd@a+2
 15403   00267A  C0B6  F05D         	movff	atoa@l+3,___fladd@a+3
 15404   00267E  ECB3  F016         	call	___fladd	;wreg free
 15405   002682  C056  F0AF         	movff	?___fladd,atoa@h
 15406   002686  C057  F0B0         	movff	?___fladd+1,atoa@h+1
 15407   00268A  C058  F0B1         	movff	?___fladd+2,atoa@h+2
 15408   00268E  C059  F0B2         	movff	?___fladd+3,atoa@h+3
 15409   002692                     
 15410                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 354:     u = ou;
 15411   002692  C097  F0C0         	movff	atoa@ou,atoa@u
 15412   002696  C098  F0C1         	movff	atoa@ou+1,atoa@u+1
 15413   00269A  C099  F0C2         	movff	atoa@ou+2,atoa@u+2
 15414   00269E  C09A  F0C3         	movff	atoa@ou+3,atoa@u+3
 15415   0026A2                     
 15416                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 355:     ne = 0;
 15417   0026A2  0E00               	movlw	0
 15418   0026A4  0100               	movlb	0	; () banked
 15419   0026A6  6FA7               	movwf	(atoa@ne+1)& (0+255),b
 15420   0026A8  0E00               	movlw	0
 15421   0026AA  6FA6               	movwf	atoa@ne& (0+255),b
 15422   0026AC                     
 15423                           ; BSR set to: 0
 15424                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 356:     pp = 0;
 15425   0026AC  0E00               	movlw	0
 15426   0026AE  6FAA               	movwf	atoa@pp& (0+255),b
 15427   0026B0                     
 15428                           ; BSR set to: 0
 15429                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 357:     t = 0;
 15430   0026B0  0E00               	movlw	0
 15431   0026B2  6FAC               	movwf	(atoa@t+1)& (0+255),b
 15432   0026B4  0E00               	movlw	0
 15433   0026B6  6FAB               	movwf	atoa@t& (0+255),b
 15434   0026B8                     
 15435                           ; BSR set to: 0
 15436                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 358:     i = 0;
 15437   0026B8  0E00               	movlw	0
 15438   0026BA  6FC5               	movwf	(atoa@i+1)& (0+255),b
 15439   0026BC  0E00               	movlw	0
 15440   0026BE  6FC4               	movwf	atoa@i& (0+255),b
 15441                           
 15442                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 359:     while ((
      +                          i < m) && (n < (80 - 5))) {
 15443   0026C0  EFAC  F014         	goto	l9078
 15444   0026C4                     l9010:
 15445                           
 15446                           ; BSR set to: 0
 15447                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 360:         l = 
      +                          floorf(h/u);
 15448   0026C4  C0AF  F024         	movff	atoa@h,___fldiv@b
 15449   0026C8  C0B0  F025         	movff	atoa@h+1,___fldiv@b+1
 15450   0026CC  C0B1  F026         	movff	atoa@h+2,___fldiv@b+2
 15451   0026D0  C0B2  F027         	movff	atoa@h+3,___fldiv@b+3
 15452   0026D4  C0C0  F028         	movff	atoa@u,___fldiv@a
 15453   0026D8  C0C1  F029         	movff	atoa@u+1,___fldiv@a+1
 15454   0026DC  C0C2  F02A         	movff	atoa@u+2,___fldiv@a+2
 15455   0026E0  C0C3  F02B         	movff	atoa@u+3,___fldiv@a+3
 15456   0026E4  EC6E  F01F         	call	___fldiv	;wreg free
 15457   0026E8  C024  F03D         	movff	?___fldiv,floorf@x
 15458   0026EC  C025  F03E         	movff	?___fldiv+1,floorf@x+1
 15459   0026F0  C026  F03F         	movff	?___fldiv+2,floorf@x+2
 15460   0026F4  C027  F040         	movff	?___fldiv+3,floorf@x+3
 15461   0026F8  EC41  F027         	call	_floorf	;wreg free
 15462   0026FC  C03D  F0B3         	movff	?_floorf,atoa@l
 15463   002700  C03E  F0B4         	movff	?_floorf+1,atoa@l+1
 15464   002704  C03F  F0B5         	movff	?_floorf+2,atoa@l+2
 15465   002708  C040  F0B6         	movff	?_floorf+3,atoa@l+3
 15466                           
 15467                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 361:         d = 
      +                          (int)l;
 15468   00270C  C0B3  F066         	movff	atoa@l,___fltol@f1
 15469   002710  C0B4  F067         	movff	atoa@l+1,___fltol@f1+1
 15470   002714  C0B5  F068         	movff	atoa@l+2,___fltol@f1+2
 15471   002718  C0B6  F069         	movff	atoa@l+3,___fltol@f1+3
 15472   00271C  EC99  F032         	call	___fltol	;wreg free
 15473   002720  C066  F0BE         	movff	?___fltol,atoa@d
 15474   002724  C067  F0BF         	movff	?___fltol+1,atoa@d+1
 15475   002728                     
 15476                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 362:         if (
      +                          !d && (ne < 0)
 15477   002728  0100               	movlb	0	; () banked
 15478   00272A  51BE               	movf	atoa@d& (0+255),w,b
 15479   00272C  11BF               	iorwf	(atoa@d+1)& (0+255),w,b
 15480   00272E  A4D8               	btfss	status,2,c
 15481   002730  EF9C  F013         	goto	u10571
 15482   002734  EF9E  F013         	goto	u10570
 15483   002738                     u10571:
 15484   002738  EFB2  F013         	goto	l9020
 15485   00273C                     u10570:
 15486   00273C                     
 15487                           ; BSR set to: 0
 15488   00273C  BFA7               	btfsc	(atoa@ne+1)& (0+255),7,b
 15489   00273E  EFA5  F013         	goto	u10580
 15490   002742  EFA3  F013         	goto	u10581
 15491   002746                     u10581:
 15492   002746  EFB2  F013         	goto	l9020
 15493   00274A                     u10580:
 15494   00274A                     
 15495                           ; BSR set to: 0
 15496   00274A  0101               	movlb	1	; () banked
 15497   00274C  B9B0               	btfsc	_flags& (0+255),4,b
 15498   00274E  EFAB  F013         	goto	u10591
 15499   002752  EFAD  F013         	goto	u10590
 15500   002756                     u10591:
 15501   002756  EFB2  F013         	goto	l9020
 15502   00275A                     u10590:
 15503   00275A                     
 15504                           ; BSR set to: 1
 15505                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 366:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 367:             ++t;
 15506   00275A  0100               	movlb	0	; () banked
 15507   00275C  4BAB               	infsnz	atoa@t& (0+255),f,b
 15508   00275E  2BAC               	incf	(atoa@t+1)& (0+255),f,b
 15509                           
 15510                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
 15511   002760  EF3D  F014         	goto	l9064
 15512   002764                     l9020:
 15513                           
 15514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 369:             
      +                          if (!pp && (ne < 0)) {
 15515   002764  0100               	movlb	0	; () banked
 15516   002766  51AA               	movf	atoa@pp& (0+255),w,b
 15517   002768  A4D8               	btfss	status,2,c
 15518   00276A  EFB9  F013         	goto	u10601
 15519   00276E  EFBB  F013         	goto	u10600
 15520   002772                     u10601:
 15521   002772  EFE3  F013         	goto	l9040
 15522   002776                     u10600:
 15523   002776                     
 15524                           ; BSR set to: 0
 15525   002776  BFA7               	btfsc	(atoa@ne+1)& (0+255),7,b
 15526   002778  EFC2  F013         	goto	u10610
 15527   00277C  EFC0  F013         	goto	u10611
 15528   002780                     u10611:
 15529   002780  EFE3  F013         	goto	l9040
 15530   002784                     u10610:
 15531   002784                     
 15532                           ; BSR set to: 0
 15533                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 370:             
      +                              dbuf[n++] = '.';
 15534   002784  0E20               	movlw	low _dbuf
 15535   002786  25C6               	addwf	atoa@n& (0+255),w,b
 15536   002788  6ED9               	movwf	fsr2l,c
 15537   00278A  0E03               	movlw	high _dbuf
 15538   00278C  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 15539   00278E  6EDA               	movwf	fsr2h,c
 15540   002790  0E2E               	movlw	46
 15541   002792  6EDF               	movwf	indf2,c
 15542   002794                     
 15543                           ; BSR set to: 0
 15544   002794  4BC6               	infsnz	atoa@n& (0+255),f,b
 15545   002796  2BC7               	incf	(atoa@n+1)& (0+255),f,b
 15546   002798                     
 15547                           ; BSR set to: 0
 15548                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 371:             
      +                              --w;
 15549   002798  07B7               	decf	atoa@w& (0+255),f,b
 15550   00279A  A0D8               	btfss	status,0,c
 15551   00279C  07B8               	decf	(atoa@w+1)& (0+255),f,b
 15552   00279E                     
 15553                           ; BSR set to: 0
 15554                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 372:             
      +                              pp = 1;
 15555   00279E  0E01               	movlw	1
 15556   0027A0  6FAA               	movwf	atoa@pp& (0+255),b
 15557   0027A2  EFE3  F013         	goto	l9040
 15558   0027A6                     l9032:
 15559                           
 15560                           ; BSR set to: 0
 15561                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 375:             
      +                              dbuf[n++] = '0';
 15562   0027A6  0E20               	movlw	low _dbuf
 15563   0027A8  25C6               	addwf	atoa@n& (0+255),w,b
 15564   0027AA  6ED9               	movwf	fsr2l,c
 15565   0027AC  0E03               	movlw	high _dbuf
 15566   0027AE  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 15567   0027B0  6EDA               	movwf	fsr2h,c
 15568   0027B2  0E30               	movlw	48
 15569   0027B4  6EDF               	movwf	indf2,c
 15570   0027B6                     
 15571                           ; BSR set to: 0
 15572   0027B6  4BC6               	infsnz	atoa@n& (0+255),f,b
 15573   0027B8  2BC7               	incf	(atoa@n+1)& (0+255),f,b
 15574   0027BA                     
 15575                           ; BSR set to: 0
 15576                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 376:             
      +                              --w;
 15577   0027BA  07B7               	decf	atoa@w& (0+255),f,b
 15578   0027BC  A0D8               	btfss	status,0,c
 15579   0027BE  07B8               	decf	(atoa@w+1)& (0+255),f,b
 15580   0027C0                     
 15581                           ; BSR set to: 0
 15582                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 377:             
      +                              --t;
 15583   0027C0  07AB               	decf	atoa@t& (0+255),f,b
 15584   0027C2  A0D8               	btfss	status,0,c
 15585   0027C4  07AC               	decf	(atoa@t+1)& (0+255),f,b
 15586   0027C6                     l9040:
 15587                           
 15588                           ; BSR set to: 0
 15589                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 374:             
      +                          while (t) {
 15590   0027C6  51AB               	movf	atoa@t& (0+255),w,b
 15591   0027C8  11AC               	iorwf	(atoa@t+1)& (0+255),w,b
 15592   0027CA  A4D8               	btfss	status,2,c
 15593   0027CC  EFEA  F013         	goto	u10621
 15594   0027D0  EFEC  F013         	goto	u10620
 15595   0027D4                     u10621:
 15596   0027D4  EFD3  F013         	goto	l9032
 15597   0027D8                     u10620:
 15598   0027D8                     
 15599                           ; BSR set to: 0
 15600                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 379:             
      +                          d = (d < 10) ? (int)'0' + d : (int)'a' + (d - 10);
 15601   0027D8  BFBF               	btfsc	(atoa@d+1)& (0+255),7,b
 15602   0027DA  EFF8  F013         	goto	u10631
 15603   0027DE  51BF               	movf	(atoa@d+1)& (0+255),w,b
 15604   0027E0  E109               	bnz	u10630
 15605   0027E2  0E0A               	movlw	10
 15606   0027E4  5DBE               	subwf	atoa@d& (0+255),w,b
 15607   0027E6  A0D8               	btfss	status,0,c
 15608   0027E8  EFF8  F013         	goto	u10631
 15609   0027EC  EFFA  F013         	goto	u10630
 15610   0027F0                     u10631:
 15611   0027F0  EF02  F014         	goto	l9046
 15612   0027F4                     u10630:
 15613   0027F4                     
 15614                           ; BSR set to: 0
 15615   0027F4  0E57               	movlw	87
 15616   0027F6  25BE               	addwf	atoa@d& (0+255),w,b
 15617   0027F8  6FBE               	movwf	atoa@d& (0+255),b
 15618   0027FA  0E00               	movlw	0
 15619   0027FC  21BF               	addwfc	(atoa@d+1)& (0+255),w,b
 15620   0027FE  6FBF               	movwf	(atoa@d+1)& (0+255),b
 15621   002800  EF08  F014         	goto	l9048
 15622   002804                     l9046:
 15623                           
 15624                           ; BSR set to: 0
 15625   002804  0E30               	movlw	48
 15626   002806  25BE               	addwf	atoa@d& (0+255),w,b
 15627   002808  6FBE               	movwf	atoa@d& (0+255),b
 15628   00280A  0E00               	movlw	0
 15629   00280C  21BF               	addwfc	(atoa@d+1)& (0+255),w,b
 15630   00280E  6FBF               	movwf	(atoa@d+1)& (0+255),b
 15631   002810                     l9048:
 15632                           
 15633                           ; BSR set to: 0
 15634                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 381:             
      +                          if (c && ((((unsigned char)(((d)|32)-'a'))) < 26)) {
 15635   002810  5196               	movf	atoa@c& (0+255),w,b
 15636   002812  B4D8               	btfsc	status,2,c
 15637   002814  EF0E  F014         	goto	u10641
 15638   002818  EF10  F014         	goto	u10640
 15639   00281C                     u10641:
 15640   00281C  EF30  F014         	goto	l9058
 15641   002820                     u10640:
 15642   002820                     
 15643                           ; BSR set to: 0
 15644   002820  C0BE  F07C         	movff	atoa@d,??_atoa
 15645   002824  0E20               	movlw	32
 15646   002826  127C               	iorwf	??_atoa^0,f,c
 15647   002828  0E9F               	movlw	159
 15648   00282A  267C               	addwf	??_atoa^0,f,c
 15649   00282C  0E1A               	movlw	26
 15650   00282E  607C               	cpfslt	??_atoa^0,c
 15651   002830  EF1C  F014         	goto	u10651
 15652   002834  EF1E  F014         	goto	u10650
 15653   002838                     u10651:
 15654   002838  EF30  F014         	goto	l9058
 15655   00283C                     u10650:
 15656   00283C                     
 15657                           ; BSR set to: 0
 15658                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 382:             
      +                              d = ((((unsigned char)((d)-'a')) < 26) ? (d)&0x5f : (d));
 15659   00283C  C0BE  F07C         	movff	atoa@d,??_atoa
 15660   002840  0E9F               	movlw	159
 15661   002842  267C               	addwf	??_atoa^0,f,c
 15662   002844  0E19               	movlw	25
 15663   002846  647C               	cpfsgt	??_atoa^0,c
 15664   002848  EF28  F014         	goto	u10661
 15665   00284C  EF2A  F014         	goto	u10660
 15666   002850                     u10661:
 15667   002850  EF2C  F014         	goto	l9056
 15668   002854                     u10660:
 15669   002854  EF30  F014         	goto	l9058
 15670   002858                     l9056:
 15671                           
 15672                           ; BSR set to: 0
 15673   002858  0E5F               	movlw	95
 15674   00285A  15BE               	andwf	atoa@d& (0+255),w,b
 15675   00285C  6FBE               	movwf	atoa@d& (0+255),b
 15676   00285E  6BBF               	clrf	(atoa@d+1)& (0+255),b
 15677   002860                     l9058:
 15678                           
 15679                           ; BSR set to: 0
 15680                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 385:             
      +                          dbuf[n++] = (char)d;
 15681   002860  0E20               	movlw	low _dbuf
 15682   002862  25C6               	addwf	atoa@n& (0+255),w,b
 15683   002864  6ED9               	movwf	fsr2l,c
 15684   002866  0E03               	movlw	high _dbuf
 15685   002868  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 15686   00286A  6EDA               	movwf	fsr2h,c
 15687   00286C  C0BE  FFDF         	movff	atoa@d,indf2
 15688   002870                     
 15689                           ; BSR set to: 0
 15690   002870  4BC6               	infsnz	atoa@n& (0+255),f,b
 15691   002872  2BC7               	incf	(atoa@n+1)& (0+255),f,b
 15692   002874                     
 15693                           ; BSR set to: 0
 15694                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 386:             
      +                          --w;
 15695   002874  07B7               	decf	atoa@w& (0+255),f,b
 15696   002876  A0D8               	btfss	status,0,c
 15697   002878  07B8               	decf	(atoa@w+1)& (0+255),f,b
 15698   00287A                     l9064:
 15699                           
 15700                           ; BSR set to: 0
 15701                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 388:         h -=
      +                           l*u;
 15702   00287A  C0AF  F074         	movff	atoa@h,___flsub@b
 15703   00287E  C0B0  F075         	movff	atoa@h+1,___flsub@b+1
 15704   002882  C0B1  F076         	movff	atoa@h+2,___flsub@b+2
 15705   002886  C0B2  F077         	movff	atoa@h+3,___flsub@b+3
 15706   00288A  C0C0  F041         	movff	atoa@u,___flmul@a
 15707   00288E  C0C1  F042         	movff	atoa@u+1,___flmul@a+1
 15708   002892  C0C2  F043         	movff	atoa@u+2,___flmul@a+2
 15709   002896  C0C3  F044         	movff	atoa@u+3,___flmul@a+3
 15710   00289A  C0B3  F03D         	movff	atoa@l,___flmul@b
 15711   00289E  C0B4  F03E         	movff	atoa@l+1,___flmul@b+1
 15712   0028A2  C0B5  F03F         	movff	atoa@l+2,___flmul@b+2
 15713   0028A6  C0B6  F040         	movff	atoa@l+3,___flmul@b+3
 15714   0028AA  EC59  F01D         	call	___flmul	;wreg free
 15715   0028AE  C03D  F078         	movff	?___flmul,___flsub@a
 15716   0028B2  C03E  F079         	movff	?___flmul+1,___flsub@a+1
 15717   0028B6  C03F  F07A         	movff	?___flmul+2,___flsub@a+2
 15718   0028BA  C040  F07B         	movff	?___flmul+3,___flsub@a+3
 15719   0028BE  EC54  F03B         	call	___flsub	;wreg free
 15720   0028C2  C074  F0AF         	movff	?___flsub,atoa@h
 15721   0028C6  C075  F0B0         	movff	?___flsub+1,atoa@h+1
 15722   0028CA  C076  F0B1         	movff	?___flsub+2,atoa@h+2
 15723   0028CE  C077  F0B2         	movff	?___flsub+3,atoa@h+3
 15724   0028D2                     
 15725                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 389:         u = 
      +                          u/16.0;
 15726   0028D2  C0C0  F024         	movff	atoa@u,___fldiv@b
 15727   0028D6  C0C1  F025         	movff	atoa@u+1,___fldiv@b+1
 15728   0028DA  C0C2  F026         	movff	atoa@u+2,___fldiv@b+2
 15729   0028DE  C0C3  F027         	movff	atoa@u+3,___fldiv@b+3
 15730   0028E2  0E00               	movlw	0
 15731   0028E4  6E28               	movwf	___fldiv@a^0,c
 15732   0028E6  0E00               	movlw	0
 15733   0028E8  6E29               	movwf	(___fldiv@a+1)^0,c
 15734   0028EA  0E80               	movlw	128
 15735   0028EC  6E2A               	movwf	(___fldiv@a+2)^0,c
 15736   0028EE  0E41               	movlw	65
 15737   0028F0  6E2B               	movwf	(___fldiv@a+3)^0,c
 15738   0028F2  EC6E  F01F         	call	___fldiv	;wreg free
 15739   0028F6  C024  F0C0         	movff	?___fldiv,atoa@u
 15740   0028FA  C025  F0C1         	movff	?___fldiv+1,atoa@u+1
 15741   0028FE  C026  F0C2         	movff	?___fldiv+2,atoa@u+2
 15742   002902  C027  F0C3         	movff	?___fldiv+3,atoa@u+3
 15743   002906                     
 15744                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 390:         --ne
      +                          ;
 15745   002906  0100               	movlb	0	; () banked
 15746   002908  07A6               	decf	atoa@ne& (0+255),f,b
 15747   00290A  A0D8               	btfss	status,0,c
 15748   00290C  07A7               	decf	(atoa@ne+1)& (0+255),f,b
 15749   00290E                     
 15750                           ; BSR set to: 0
 15751                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 391:         ++i;
 15752   00290E  4BC4               	infsnz	atoa@i& (0+255),f,b
 15753   002910  2BC5               	incf	(atoa@i+1)& (0+255),f,b
 15754   002912                     
 15755                           ; BSR set to: 0
 15756                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 392:   if (prec <
      +                           0 && h == 0) {
 15757   002912  0101               	movlb	1	; () banked
 15758   002914  BFAD               	btfsc	(_prec+1)& (0+255),7,b
 15759   002916  EF91  F014         	goto	u10670
 15760   00291A  EF8F  F014         	goto	u10671
 15761   00291E                     u10671:
 15762   00291E  EFAC  F014         	goto	l9078
 15763   002922                     u10670:
 15764   002922                     
 15765                           ; BSR set to: 1
 15766   002922  C0AF  F001         	movff	atoa@h,___fleq@ff1
 15767   002926  C0B0  F002         	movff	atoa@h+1,___fleq@ff1+1
 15768   00292A  C0B1  F003         	movff	atoa@h+2,___fleq@ff1+2
 15769   00292E  C0B2  F004         	movff	atoa@h+3,___fleq@ff1+3
 15770   002932  0E00               	movlw	0
 15771   002934  6E05               	movwf	___fleq@ff2^0,c
 15772   002936  0E00               	movlw	0
 15773   002938  6E06               	movwf	(___fleq@ff2+1)^0,c
 15774   00293A  0E00               	movlw	0
 15775   00293C  6E07               	movwf	(___fleq@ff2+2)^0,c
 15776   00293E  0E00               	movlw	0
 15777   002940  6E08               	movwf	(___fleq@ff2+3)^0,c
 15778   002942  ECC3  F037         	call	___fleq	;wreg free
 15779   002946  A0D8               	btfss	status,0,c
 15780   002948  EFA8  F014         	goto	u10681
 15781   00294C  EFAA  F014         	goto	u10680
 15782   002950                     u10681:
 15783   002950  EFAC  F014         	goto	l9078
 15784   002954                     u10680:
 15785   002954  EFCA  F014         	goto	l9082
 15786   002958                     l9078:
 15787                           
 15788                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 359:     while ((
      +                          i < m) && (n < (80 - 5))) {
 15789   002958  0100               	movlb	0	; () banked
 15790   00295A  51A4               	movf	atoa@m& (0+255),w,b
 15791   00295C  5DC4               	subwf	atoa@i& (0+255),w,b
 15792   00295E  51C5               	movf	(atoa@i+1)& (0+255),w,b
 15793   002960  0A80               	xorlw	128
 15794   002962  6E7C               	movwf	??_atoa^0,c
 15795   002964  51A5               	movf	(atoa@m+1)& (0+255),w,b
 15796   002966  0A80               	xorlw	128
 15797   002968  587C               	subwfb	??_atoa^0,w,c
 15798   00296A  B0D8               	btfsc	status,0,c
 15799   00296C  EFBA  F014         	goto	u10691
 15800   002970  EFBC  F014         	goto	u10690
 15801   002974                     u10691:
 15802   002974  EFCA  F014         	goto	l9082
 15803   002978                     u10690:
 15804   002978                     
 15805                           ; BSR set to: 0
 15806   002978  BFC7               	btfsc	(atoa@n+1)& (0+255),7,b
 15807   00297A  EFC8  F014         	goto	u10701
 15808   00297E  51C7               	movf	(atoa@n+1)& (0+255),w,b
 15809   002980  E109               	bnz	u10700
 15810   002982  0E4B               	movlw	75
 15811   002984  5DC6               	subwf	atoa@n& (0+255),w,b
 15812   002986  A0D8               	btfss	status,0,c
 15813   002988  EFC8  F014         	goto	u10701
 15814   00298C  EFCA  F014         	goto	u10700
 15815   002990                     u10701:
 15816   002990  EF62  F013         	goto	l9010
 15817   002994                     u10700:
 15818   002994                     l9082:
 15819                           
 15820                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 399:  if (!pp && 
      +                          t != 0 && prec > 0 && (n < (80 - 5))) {
 15821   002994  0100               	movlb	0	; () banked
 15822   002996  51AA               	movf	atoa@pp& (0+255),w,b
 15823   002998  A4D8               	btfss	status,2,c
 15824   00299A  EFD1  F014         	goto	u10711
 15825   00299E  EFD3  F014         	goto	u10710
 15826   0029A2                     u10711:
 15827   0029A2  EF1A  F015         	goto	l9106
 15828   0029A6                     u10710:
 15829   0029A6                     
 15830                           ; BSR set to: 0
 15831   0029A6  51AB               	movf	atoa@t& (0+255),w,b
 15832   0029A8  11AC               	iorwf	(atoa@t+1)& (0+255),w,b
 15833   0029AA  B4D8               	btfsc	status,2,c
 15834   0029AC  EFDA  F014         	goto	u10721
 15835   0029B0  EFDC  F014         	goto	u10720
 15836   0029B4                     u10721:
 15837   0029B4  EF1A  F015         	goto	l9106
 15838   0029B8                     u10720:
 15839   0029B8                     
 15840                           ; BSR set to: 0
 15841   0029B8  0101               	movlb	1	; () banked
 15842   0029BA  BFAD               	btfsc	(_prec+1)& (0+255),7,b
 15843   0029BC  EFE8  F014         	goto	u10731
 15844   0029C0  51AD               	movf	(_prec+1)& (0+255),w,b
 15845   0029C2  E108               	bnz	u10730
 15846   0029C4  05AC               	decf	_prec& (0+255),w,b
 15847   0029C6  A0D8               	btfss	status,0,c
 15848   0029C8  EFE8  F014         	goto	u10731
 15849   0029CC  EFEA  F014         	goto	u10730
 15850   0029D0                     u10731:
 15851   0029D0  EF1A  F015         	goto	l9106
 15852   0029D4                     u10730:
 15853   0029D4                     
 15854                           ; BSR set to: 1
 15855   0029D4  0100               	movlb	0	; () banked
 15856   0029D6  BFC7               	btfsc	(atoa@n+1)& (0+255),7,b
 15857   0029D8  EFF9  F014         	goto	u10740
 15858   0029DC  51C7               	movf	(atoa@n+1)& (0+255),w,b
 15859   0029DE  E107               	bnz	u10741
 15860   0029E0  0E4B               	movlw	75
 15861   0029E2  5DC6               	subwf	atoa@n& (0+255),w,b
 15862   0029E4  B0D8               	btfsc	status,0,c
 15863   0029E6  EFF7  F014         	goto	u10741
 15864   0029EA  EFF9  F014         	goto	u10740
 15865   0029EE                     u10741:
 15866   0029EE  EF1A  F015         	goto	l9106
 15867   0029F2                     u10740:
 15868   0029F2                     
 15869                           ; BSR set to: 0
 15870                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 400:   pp = 1;
 15871   0029F2  0E01               	movlw	1
 15872   0029F4  6FAA               	movwf	atoa@pp& (0+255),b
 15873   0029F6                     
 15874                           ; BSR set to: 0
 15875                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 401:   dbuf[n++] 
      +                          = '.';
 15876   0029F6  0E20               	movlw	low _dbuf
 15877   0029F8  25C6               	addwf	atoa@n& (0+255),w,b
 15878   0029FA  6ED9               	movwf	fsr2l,c
 15879   0029FC  0E03               	movlw	high _dbuf
 15880   0029FE  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 15881   002A00  6EDA               	movwf	fsr2h,c
 15882   002A02  0E2E               	movlw	46
 15883   002A04  6EDF               	movwf	indf2,c
 15884   002A06                     
 15885                           ; BSR set to: 0
 15886   002A06  4BC6               	infsnz	atoa@n& (0+255),f,b
 15887   002A08  2BC7               	incf	(atoa@n+1)& (0+255),f,b
 15888   002A0A                     
 15889                           ; BSR set to: 0
 15890                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 402:   --w;
 15891   002A0A  07B7               	decf	atoa@w& (0+255),f,b
 15892   002A0C  A0D8               	btfss	status,0,c
 15893   002A0E  07B8               	decf	(atoa@w+1)& (0+255),f,b
 15894   002A10  EF1A  F015         	goto	l9106
 15895   002A14                     l9098:
 15896                           
 15897                           ; BSR set to: 0
 15898                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 406:   dbuf[n++] 
      +                          = '0';
 15899   002A14  0E20               	movlw	low _dbuf
 15900   002A16  25C6               	addwf	atoa@n& (0+255),w,b
 15901   002A18  6ED9               	movwf	fsr2l,c
 15902   002A1A  0E03               	movlw	high _dbuf
 15903   002A1C  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 15904   002A1E  6EDA               	movwf	fsr2h,c
 15905   002A20  0E30               	movlw	48
 15906   002A22  6EDF               	movwf	indf2,c
 15907   002A24                     
 15908                           ; BSR set to: 0
 15909   002A24  4BC6               	infsnz	atoa@n& (0+255),f,b
 15910   002A26  2BC7               	incf	(atoa@n+1)& (0+255),f,b
 15911   002A28                     
 15912                           ; BSR set to: 0
 15913                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 407:   --w;
 15914   002A28  07B7               	decf	atoa@w& (0+255),f,b
 15915   002A2A  A0D8               	btfss	status,0,c
 15916   002A2C  07B8               	decf	(atoa@w+1)& (0+255),f,b
 15917   002A2E                     
 15918                           ; BSR set to: 0
 15919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 408:   --t;
 15920   002A2E  07AB               	decf	atoa@t& (0+255),f,b
 15921   002A30  A0D8               	btfss	status,0,c
 15922   002A32  07AC               	decf	(atoa@t+1)& (0+255),f,b
 15923   002A34                     l9106:
 15924                           
 15925                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 405:  while ((t !
      +                          = 0) && (n < (80 - 5))) {
 15926   002A34  0100               	movlb	0	; () banked
 15927   002A36  51AB               	movf	atoa@t& (0+255),w,b
 15928   002A38  11AC               	iorwf	(atoa@t+1)& (0+255),w,b
 15929   002A3A  B4D8               	btfsc	status,2,c
 15930   002A3C  EF22  F015         	goto	u10751
 15931   002A40  EF24  F015         	goto	u10750
 15932   002A44                     u10751:
 15933   002A44  EF32  F015         	goto	l9110
 15934   002A48                     u10750:
 15935   002A48                     
 15936                           ; BSR set to: 0
 15937   002A48  BFC7               	btfsc	(atoa@n+1)& (0+255),7,b
 15938   002A4A  EF30  F015         	goto	u10761
 15939   002A4E  51C7               	movf	(atoa@n+1)& (0+255),w,b
 15940   002A50  E109               	bnz	u10760
 15941   002A52  0E4B               	movlw	75
 15942   002A54  5DC6               	subwf	atoa@n& (0+255),w,b
 15943   002A56  A0D8               	btfss	status,0,c
 15944   002A58  EF30  F015         	goto	u10761
 15945   002A5C  EF32  F015         	goto	u10760
 15946   002A60                     u10761:
 15947   002A60  EF0A  F015         	goto	l9098
 15948   002A64                     u10760:
 15949   002A64                     l9110:
 15950                           
 15951                           ; BSR set to: 0
 15952                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 411:     if (!pp 
      +                          && (flags & (1 << 4))) {
 15953   002A64  51AA               	movf	atoa@pp& (0+255),w,b
 15954   002A66  A4D8               	btfss	status,2,c
 15955   002A68  EF38  F015         	goto	u10771
 15956   002A6C  EF3A  F015         	goto	u10770
 15957   002A70                     u10771:
 15958   002A70  EF4D  F015         	goto	l9118
 15959   002A74                     u10770:
 15960   002A74                     
 15961                           ; BSR set to: 0
 15962   002A74  0101               	movlb	1	; () banked
 15963   002A76  A9B0               	btfss	_flags& (0+255),4,b
 15964   002A78  EF40  F015         	goto	u10781
 15965   002A7C  EF42  F015         	goto	u10780
 15966   002A80                     u10781:
 15967   002A80  EF4D  F015         	goto	l9118
 15968   002A84                     u10780:
 15969   002A84                     
 15970                           ; BSR set to: 1
 15971                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 412:         dbuf
      +                          [n++] = '.';
 15972   002A84  0E20               	movlw	low _dbuf
 15973   002A86  0100               	movlb	0	; () banked
 15974   002A88  25C6               	addwf	atoa@n& (0+255),w,b
 15975   002A8A  6ED9               	movwf	fsr2l,c
 15976   002A8C  0E03               	movlw	high _dbuf
 15977   002A8E  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 15978   002A90  6EDA               	movwf	fsr2h,c
 15979   002A92  0E2E               	movlw	46
 15980   002A94  6EDF               	movwf	indf2,c
 15981   002A96                     
 15982                           ; BSR set to: 0
 15983   002A96  4BC6               	infsnz	atoa@n& (0+255),f,b
 15984   002A98  2BC7               	incf	(atoa@n+1)& (0+255),f,b
 15985   002A9A                     l9118:
 15986                           
 15987                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 415:     dbuf[n] 
      +                          = '\0';
 15988   002A9A  0E20               	movlw	low _dbuf
 15989   002A9C  0100               	movlb	0	; () banked
 15990   002A9E  25C6               	addwf	atoa@n& (0+255),w,b
 15991   002AA0  6ED9               	movwf	fsr2l,c
 15992   002AA2  0E03               	movlw	high _dbuf
 15993   002AA4  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 15994   002AA6  6EDA               	movwf	fsr2h,c
 15995   002AA8  6ADF               	clrf	indf2,c
 15996   002AAA                     
 15997                           ; BSR set to: 0
 15998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 418:     i = size
      +                          of(dbuf) - 1;
 15999   002AAA  0E00               	movlw	0
 16000   002AAC  6FC5               	movwf	(atoa@i+1)& (0+255),b
 16001   002AAE  0E4F               	movlw	79
 16002   002AB0  6FC4               	movwf	atoa@i& (0+255),b
 16003   002AB2                     
 16004                           ; BSR set to: 0
 16005                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 419:     dbuf[i] 
      +                          = '\0';
 16006   002AB2  0E20               	movlw	low _dbuf
 16007   002AB4  25C4               	addwf	atoa@i& (0+255),w,b
 16008   002AB6  6ED9               	movwf	fsr2l,c
 16009   002AB8  0E03               	movlw	high _dbuf
 16010   002ABA  21C5               	addwfc	(atoa@i+1)& (0+255),w,b
 16011   002ABC  6EDA               	movwf	fsr2h,c
 16012   002ABE  6ADF               	clrf	indf2,c
 16013   002AC0                     
 16014                           ; BSR set to: 0
 16015                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 420:     esign = 
      +                          0;
 16016   002AC0  0E00               	movlw	0
 16017   002AC2  6FA3               	movwf	atoa@esign& (0+255),b
 16018   002AC4                     
 16019                           ; BSR set to: 0
 16020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 421:     if (e < 
      +                          0) {
 16021   002AC4  BFAE               	btfsc	(atoa@e+1)& (0+255),7,b
 16022   002AC6  EF69  F015         	goto	u10790
 16023   002ACA  EF67  F015         	goto	u10791
 16024   002ACE                     u10791:
 16025   002ACE  EF6F  F015         	goto	l9132
 16026   002AD2                     u10790:
 16027   002AD2                     
 16028                           ; BSR set to: 0
 16029                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 422:         esig
      +                          n = 1;
 16030   002AD2  0E01               	movlw	1
 16031   002AD4  6FA3               	movwf	atoa@esign& (0+255),b
 16032   002AD6                     
 16033                           ; BSR set to: 0
 16034                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 423:         e = 
      +                          -e;
 16035   002AD6  6DAD               	negf	atoa@e& (0+255),b
 16036   002AD8  1FAE               	comf	(atoa@e+1)& (0+255),f,b
 16037   002ADA  B0D8               	btfsc	status,0,c
 16038   002ADC  2BAE               	incf	(atoa@e+1)& (0+255),f,b
 16039   002ADE                     l9132:
 16040                           
 16041                           ; BSR set to: 0
 16042                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 425:     p = 1;
 16043   002ADE  0E00               	movlw	0
 16044   002AE0  6FA9               	movwf	(atoa@p+1)& (0+255),b
 16045   002AE2  0E01               	movlw	1
 16046   002AE4  6FA8               	movwf	atoa@p& (0+255),b
 16047                           
 16048                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 426:     while (e
      +                           || (0 < p)) {
 16049   002AE6  EFA0  F015         	goto	l9144
 16050   002AEA                     l9134:
 16051                           
 16052                           ; BSR set to: 0
 16053                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 427:         --i;
 16054   002AEA  07C4               	decf	atoa@i& (0+255),f,b
 16055   002AEC  A0D8               	btfss	status,0,c
 16056   002AEE  07C5               	decf	(atoa@i+1)& (0+255),f,b
 16057   002AF0                     
 16058                           ; BSR set to: 0
 16059                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 428:         dbuf
      +                          [i] = '0' + (e % 10);
 16060   002AF0  0E20               	movlw	low _dbuf
 16061   002AF2  25C4               	addwf	atoa@i& (0+255),w,b
 16062   002AF4  6ED9               	movwf	fsr2l,c
 16063   002AF6  0E03               	movlw	high _dbuf
 16064   002AF8  21C5               	addwfc	(atoa@i+1)& (0+255),w,b
 16065   002AFA  6EDA               	movwf	fsr2h,c
 16066   002AFC  C0AD  F001         	movff	atoa@e,___awmod@dividend
 16067   002B00  C0AE  F002         	movff	atoa@e+1,___awmod@dividend+1
 16068   002B04  0E00               	movlw	0
 16069   002B06  6E04               	movwf	(___awmod@divisor+1)^0,c
 16070   002B08  0E0A               	movlw	10
 16071   002B0A  6E03               	movwf	___awmod@divisor^0,c
 16072   002B0C  EC6B  F037         	call	___awmod	;wreg free
 16073   002B10  5001               	movf	?___awmod^0,w,c
 16074   002B12  0F30               	addlw	48
 16075   002B14  6EDF               	movwf	indf2,c
 16076   002B16                     
 16077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 429:         e = 
      +                          e / 10;
 16078   002B16  C0AD  F001         	movff	atoa@e,___awdiv@dividend
 16079   002B1A  C0AE  F002         	movff	atoa@e+1,___awdiv@dividend+1
 16080   002B1E  0E00               	movlw	0
 16081   002B20  6E04               	movwf	(___awdiv@divisor+1)^0,c
 16082   002B22  0E0A               	movlw	10
 16083   002B24  6E03               	movwf	___awdiv@divisor^0,c
 16084   002B26  EC4E  F036         	call	___awdiv	;wreg free
 16085   002B2A  C001  F0AD         	movff	?___awdiv,atoa@e
 16086   002B2E  C002  F0AE         	movff	?___awdiv+1,atoa@e+1
 16087   002B32                     
 16088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 430:         --p;
 16089   002B32  0100               	movlb	0	; () banked
 16090   002B34  07A8               	decf	atoa@p& (0+255),f,b
 16091   002B36  A0D8               	btfss	status,0,c
 16092   002B38  07A9               	decf	(atoa@p+1)& (0+255),f,b
 16093   002B3A                     
 16094                           ; BSR set to: 0
 16095                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 431:         --w;
 16096   002B3A  07B7               	decf	atoa@w& (0+255),f,b
 16097   002B3C  A0D8               	btfss	status,0,c
 16098   002B3E  07B8               	decf	(atoa@w+1)& (0+255),f,b
 16099   002B40                     l9144:
 16100                           
 16101                           ; BSR set to: 0
 16102                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 426:     while (e
      +                           || (0 < p)) {
 16103   002B40  51AD               	movf	atoa@e& (0+255),w,b
 16104   002B42  11AE               	iorwf	(atoa@e+1)& (0+255),w,b
 16105   002B44  A4D8               	btfss	status,2,c
 16106   002B46  EFA7  F015         	goto	u10801
 16107   002B4A  EFA9  F015         	goto	u10800
 16108   002B4E                     u10801:
 16109   002B4E  EF75  F015         	goto	l9134
 16110   002B52                     u10800:
 16111   002B52                     
 16112                           ; BSR set to: 0
 16113   002B52  BFA9               	btfsc	(atoa@p+1)& (0+255),7,b
 16114   002B54  EFB6  F015         	goto	u10810
 16115   002B58  51A9               	movf	(atoa@p+1)& (0+255),w,b
 16116   002B5A  E106               	bnz	u10811
 16117   002B5C  05A8               	decf	atoa@p& (0+255),w,b
 16118   002B5E  B0D8               	btfsc	status,0,c
 16119   002B60  EFB4  F015         	goto	u10811
 16120   002B64  EFB6  F015         	goto	u10810
 16121   002B68                     u10811:
 16122   002B68  EF75  F015         	goto	l9134
 16123   002B6C                     u10810:
 16124   002B6C                     
 16125                           ; BSR set to: 0
 16126                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 433:     --i;
 16127   002B6C  07C4               	decf	atoa@i& (0+255),f,b
 16128   002B6E  A0D8               	btfss	status,0,c
 16129   002B70  07C5               	decf	(atoa@i+1)& (0+255),f,b
 16130   002B72                     
 16131                           ; BSR set to: 0
 16132                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 434:     dbuf[i] 
      +                          = esign ? '-' : '+';
 16133   002B72  51A3               	movf	atoa@esign& (0+255),w,b
 16134   002B74  A4D8               	btfss	status,2,c
 16135   002B76  EFBF  F015         	goto	u10821
 16136   002B7A  EFC1  F015         	goto	u10820
 16137   002B7E                     u10821:
 16138   002B7E  EFC7  F015         	goto	l9154
 16139   002B82                     u10820:
 16140   002B82                     
 16141                           ; BSR set to: 0
 16142   002B82  0E00               	movlw	0
 16143   002B84  6F9E               	movwf	(_atoa$1288+1)& (0+255),b
 16144   002B86  0E2B               	movlw	43
 16145   002B88  6F9D               	movwf	_atoa$1288& (0+255),b
 16146   002B8A  EFCB  F015         	goto	l9156
 16147   002B8E                     l9154:
 16148                           
 16149                           ; BSR set to: 0
 16150   002B8E  0E00               	movlw	0
 16151   002B90  6F9E               	movwf	(_atoa$1288+1)& (0+255),b
 16152   002B92  0E2D               	movlw	45
 16153   002B94  6F9D               	movwf	_atoa$1288& (0+255),b
 16154   002B96                     l9156:
 16155                           
 16156                           ; BSR set to: 0
 16157   002B96  0E20               	movlw	low _dbuf
 16158   002B98  25C4               	addwf	atoa@i& (0+255),w,b
 16159   002B9A  6ED9               	movwf	fsr2l,c
 16160   002B9C  0E03               	movlw	high _dbuf
 16161   002B9E  21C5               	addwfc	(atoa@i+1)& (0+255),w,b
 16162   002BA0  6EDA               	movwf	fsr2h,c
 16163   002BA2  C09D  FFDF         	movff	_atoa$1288,indf2
 16164   002BA6                     
 16165                           ; BSR set to: 0
 16166                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 435:     --w;
 16167   002BA6  07B7               	decf	atoa@w& (0+255),f,b
 16168   002BA8  A0D8               	btfss	status,0,c
 16169   002BAA  07B8               	decf	(atoa@w+1)& (0+255),f,b
 16170   002BAC                     
 16171                           ; BSR set to: 0
 16172                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 436:     --i;
 16173   002BAC  07C4               	decf	atoa@i& (0+255),f,b
 16174   002BAE  A0D8               	btfss	status,0,c
 16175   002BB0  07C5               	decf	(atoa@i+1)& (0+255),f,b
 16176   002BB2                     
 16177                           ; BSR set to: 0
 16178                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 438:     dbuf[i] 
      +                          = c ? 'P' : 'p';
 16179   002BB2  5196               	movf	atoa@c& (0+255),w,b
 16180   002BB4  A4D8               	btfss	status,2,c
 16181   002BB6  EFDF  F015         	goto	u10831
 16182   002BBA  EFE1  F015         	goto	u10830
 16183   002BBE                     u10831:
 16184   002BBE  EFE7  F015         	goto	l9166
 16185   002BC2                     u10830:
 16186   002BC2                     
 16187                           ; BSR set to: 0
 16188   002BC2  0E00               	movlw	0
 16189   002BC4  6FA0               	movwf	(_atoa$1289+1)& (0+255),b
 16190   002BC6  0E70               	movlw	112
 16191   002BC8  6F9F               	movwf	_atoa$1289& (0+255),b
 16192   002BCA  EFEB  F015         	goto	l9168
 16193   002BCE                     l9166:
 16194                           
 16195                           ; BSR set to: 0
 16196   002BCE  0E00               	movlw	0
 16197   002BD0  6FA0               	movwf	(_atoa$1289+1)& (0+255),b
 16198   002BD2  0E50               	movlw	80
 16199   002BD4  6F9F               	movwf	_atoa$1289& (0+255),b
 16200   002BD6                     l9168:
 16201                           
 16202                           ; BSR set to: 0
 16203   002BD6  0E20               	movlw	low _dbuf
 16204   002BD8  25C4               	addwf	atoa@i& (0+255),w,b
 16205   002BDA  6ED9               	movwf	fsr2l,c
 16206   002BDC  0E03               	movlw	high _dbuf
 16207   002BDE  21C5               	addwfc	(atoa@i+1)& (0+255),w,b
 16208   002BE0  6EDA               	movwf	fsr2h,c
 16209   002BE2  C09F  FFDF         	movff	_atoa$1289,indf2
 16210   002BE6                     
 16211                           ; BSR set to: 0
 16212                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 442:     --w;
 16213   002BE6  07B7               	decf	atoa@w& (0+255),f,b
 16214   002BE8  A0D8               	btfss	status,0,c
 16215   002BEA  07B8               	decf	(atoa@w+1)& (0+255),f,b
 16216   002BEC                     
 16217                           ; BSR set to: 0
 16218                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 445:     memcpy(&
      +                          dbuf[i-n], &dbuf[0], (size_t)n);
 16219   002BEC  0E20               	movlw	low _dbuf
 16220   002BEE  6E7C               	movwf	??_atoa^0,c
 16221   002BF0  0E03               	movlw	high _dbuf
 16222   002BF2  6E7D               	movwf	(??_atoa+1)^0,c
 16223   002BF4  51C6               	movf	atoa@n& (0+255),w,b
 16224   002BF6  5E7C               	subwf	??_atoa^0,f,c
 16225   002BF8  51C7               	movf	(atoa@n+1)& (0+255),w,b
 16226   002BFA  5A7D               	subwfb	(??_atoa+1)^0,f,c
 16227   002BFC  51C4               	movf	atoa@i& (0+255),w,b
 16228   002BFE  247C               	addwf	??_atoa^0,w,c
 16229   002C00  6E01               	movwf	memcpy@d1^0,c
 16230   002C02  51C5               	movf	(atoa@i+1)& (0+255),w,b
 16231   002C04  207D               	addwfc	(??_atoa+1)^0,w,c
 16232   002C06  6E02               	movwf	(memcpy@d1+1)^0,c
 16233   002C08  0E20               	movlw	low _dbuf
 16234   002C0A  6E03               	movwf	memcpy@s1^0,c
 16235   002C0C  0E03               	movlw	high _dbuf
 16236   002C0E  6E04               	movwf	(memcpy@s1+1)^0,c
 16237   002C10  C0C6  F005         	movff	atoa@n,memcpy@n
 16238   002C14  C0C7  F006         	movff	atoa@n+1,memcpy@n+1
 16239   002C18  EC07  F03B         	call	_memcpy	;wreg free
 16240   002C1C                     
 16241                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 446:  n = i-n;
 16242   002C1C  0100               	movlb	0	; () banked
 16243   002C1E  51C6               	movf	atoa@n& (0+255),w,b
 16244   002C20  5DC4               	subwf	atoa@i& (0+255),w,b
 16245   002C22  6FC6               	movwf	atoa@n& (0+255),b
 16246   002C24  51C7               	movf	(atoa@n+1)& (0+255),w,b
 16247   002C26  59C5               	subwfb	(atoa@i+1)& (0+255),w,b
 16248   002C28  6FC7               	movwf	(atoa@n+1)& (0+255),b
 16249   002C2A                     
 16250                           ; BSR set to: 0
 16251                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 447:  i = sign ? 
      +                          3 : 2 ;
 16252   002C2A  51BD               	movf	atoa@sign& (0+255),w,b
 16253   002C2C  A4D8               	btfss	status,2,c
 16254   002C2E  EF1B  F016         	goto	u10841
 16255   002C32  EF1D  F016         	goto	u10840
 16256   002C36                     u10841:
 16257   002C36  EF23  F016         	goto	l9180
 16258   002C3A                     u10840:
 16259   002C3A                     
 16260                           ; BSR set to: 0
 16261   002C3A  0E00               	movlw	0
 16262   002C3C  6FC5               	movwf	(atoa@i+1)& (0+255),b
 16263   002C3E  0E02               	movlw	2
 16264   002C40  6FC4               	movwf	atoa@i& (0+255),b
 16265   002C42  EF27  F016         	goto	l9182
 16266   002C46                     l9180:
 16267                           
 16268                           ; BSR set to: 0
 16269   002C46  0E00               	movlw	0
 16270   002C48  6FC5               	movwf	(atoa@i+1)& (0+255),b
 16271   002C4A  0E03               	movlw	3
 16272   002C4C  6FC4               	movwf	atoa@i& (0+255),b
 16273   002C4E                     l9182:
 16274                           
 16275                           ; BSR set to: 0
 16276                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 450:  if (flags &
      +                           (1 << 1)) {
 16277   002C4E  0101               	movlb	1	; () banked
 16278   002C50  A3B0               	btfss	_flags& (0+255),1,b
 16279   002C52  EF2D  F016         	goto	u10851
 16280   002C56  EF2F  F016         	goto	u10850
 16281   002C5A                     u10851:
 16282   002C5A  EF5E  F016         	goto	l9194
 16283   002C5E                     u10850:
 16284   002C5E  EF3F  F016         	goto	l9190
 16285   002C62                     l9186:
 16286                           
 16287                           ; BSR set to: 0
 16288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 452:    dbuf[--n]
      +                           = '0';
 16289   002C62  07C6               	decf	atoa@n& (0+255),f,b
 16290   002C64  A0D8               	btfss	status,0,c
 16291   002C66  07C7               	decf	(atoa@n+1)& (0+255),f,b
 16292   002C68  0E20               	movlw	low _dbuf
 16293   002C6A  25C6               	addwf	atoa@n& (0+255),w,b
 16294   002C6C  6ED9               	movwf	fsr2l,c
 16295   002C6E  0E03               	movlw	high _dbuf
 16296   002C70  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 16297   002C72  6EDA               	movwf	fsr2h,c
 16298   002C74  0E30               	movlw	48
 16299   002C76  6EDF               	movwf	indf2,c
 16300   002C78                     
 16301                           ; BSR set to: 0
 16302                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 453:    w--;
 16303   002C78  07B7               	decf	atoa@w& (0+255),f,b
 16304   002C7A  A0D8               	btfss	status,0,c
 16305   002C7C  07B8               	decf	(atoa@w+1)& (0+255),f,b
 16306   002C7E                     l9190:
 16307                           
 16308                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 451:   while (w >
      +                           i && n > i) {
 16309   002C7E  0100               	movlb	0	; () banked
 16310   002C80  51B7               	movf	atoa@w& (0+255),w,b
 16311   002C82  5DC4               	subwf	atoa@i& (0+255),w,b
 16312   002C84  51C5               	movf	(atoa@i+1)& (0+255),w,b
 16313   002C86  0A80               	xorlw	128
 16314   002C88  6E7C               	movwf	??_atoa^0,c
 16315   002C8A  51B8               	movf	(atoa@w+1)& (0+255),w,b
 16316   002C8C  0A80               	xorlw	128
 16317   002C8E  587C               	subwfb	??_atoa^0,w,c
 16318   002C90  B0D8               	btfsc	status,0,c
 16319   002C92  EF4D  F016         	goto	u10861
 16320   002C96  EF4F  F016         	goto	u10860
 16321   002C9A                     u10861:
 16322   002C9A  EF5E  F016         	goto	l9194
 16323   002C9E                     u10860:
 16324   002C9E                     
 16325                           ; BSR set to: 0
 16326   002C9E  51C6               	movf	atoa@n& (0+255),w,b
 16327   002CA0  5DC4               	subwf	atoa@i& (0+255),w,b
 16328   002CA2  51C5               	movf	(atoa@i+1)& (0+255),w,b
 16329   002CA4  0A80               	xorlw	128
 16330   002CA6  6E7C               	movwf	??_atoa^0,c
 16331   002CA8  51C7               	movf	(atoa@n+1)& (0+255),w,b
 16332   002CAA  0A80               	xorlw	128
 16333   002CAC  587C               	subwfb	??_atoa^0,w,c
 16334   002CAE  A0D8               	btfss	status,0,c
 16335   002CB0  EF5C  F016         	goto	u10871
 16336   002CB4  EF5E  F016         	goto	u10870
 16337   002CB8                     u10871:
 16338   002CB8  EF31  F016         	goto	l9186
 16339   002CBC                     u10870:
 16340   002CBC                     l9194:
 16341                           
 16342                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 459:     dbuf[--n
      +                          ] = c ? 'X' : 'x';
 16343   002CBC  0100               	movlb	0	; () banked
 16344   002CBE  5196               	movf	atoa@c& (0+255),w,b
 16345   002CC0  A4D8               	btfss	status,2,c
 16346   002CC2  EF65  F016         	goto	u10881
 16347   002CC6  EF67  F016         	goto	u10880
 16348   002CCA                     u10881:
 16349   002CCA  EF6D  F016         	goto	l9198
 16350   002CCE                     u10880:
 16351   002CCE                     
 16352                           ; BSR set to: 0
 16353   002CCE  0E00               	movlw	0
 16354   002CD0  6FA2               	movwf	(_atoa$1290+1)& (0+255),b
 16355   002CD2  0E78               	movlw	120
 16356   002CD4  6FA1               	movwf	_atoa$1290& (0+255),b
 16357   002CD6  EF71  F016         	goto	l9200
 16358   002CDA                     l9198:
 16359                           
 16360                           ; BSR set to: 0
 16361   002CDA  0E00               	movlw	0
 16362   002CDC  6FA2               	movwf	(_atoa$1290+1)& (0+255),b
 16363   002CDE  0E58               	movlw	88
 16364   002CE0  6FA1               	movwf	_atoa$1290& (0+255),b
 16365   002CE2                     l9200:
 16366                           
 16367                           ; BSR set to: 0
 16368   002CE2  07C6               	decf	atoa@n& (0+255),f,b
 16369   002CE4  A0D8               	btfss	status,0,c
 16370   002CE6  07C7               	decf	(atoa@n+1)& (0+255),f,b
 16371   002CE8  0E20               	movlw	low _dbuf
 16372   002CEA  25C6               	addwf	atoa@n& (0+255),w,b
 16373   002CEC  6ED9               	movwf	fsr2l,c
 16374   002CEE  0E03               	movlw	high _dbuf
 16375   002CF0  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 16376   002CF2  6EDA               	movwf	fsr2h,c
 16377   002CF4  C0A1  FFDF         	movff	_atoa$1290,indf2
 16378   002CF8                     
 16379                           ; BSR set to: 0
 16380                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 463:     dbuf[--n
      +                          ] = '0';
 16381   002CF8  07C6               	decf	atoa@n& (0+255),f,b
 16382   002CFA  A0D8               	btfss	status,0,c
 16383   002CFC  07C7               	decf	(atoa@n+1)& (0+255),f,b
 16384   002CFE  0E20               	movlw	low _dbuf
 16385   002D00  25C6               	addwf	atoa@n& (0+255),w,b
 16386   002D02  6ED9               	movwf	fsr2l,c
 16387   002D04  0E03               	movlw	high _dbuf
 16388   002D06  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 16389   002D08  6EDA               	movwf	fsr2h,c
 16390   002D0A  0E30               	movlw	48
 16391   002D0C  6EDF               	movwf	indf2,c
 16392                           
 16393                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 465:  if (sign) {
 16394   002D0E  51BD               	movf	atoa@sign& (0+255),w,b
 16395   002D10  B4D8               	btfsc	status,2,c
 16396   002D12  EF8D  F016         	goto	u10891
 16397   002D16  EF8F  F016         	goto	u10890
 16398   002D1A                     u10891:
 16399   002D1A  EF9A  F016         	goto	l9206
 16400   002D1E                     u10890:
 16401   002D1E                     
 16402                           ; BSR set to: 0
 16403                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 466:   dbuf[--n] 
      +                          = sign;
 16404   002D1E  07C6               	decf	atoa@n& (0+255),f,b
 16405   002D20  A0D8               	btfss	status,0,c
 16406   002D22  07C7               	decf	(atoa@n+1)& (0+255),f,b
 16407   002D24  0E20               	movlw	low _dbuf
 16408   002D26  25C6               	addwf	atoa@n& (0+255),w,b
 16409   002D28  6ED9               	movwf	fsr2l,c
 16410   002D2A  0E03               	movlw	high _dbuf
 16411   002D2C  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 16412   002D2E  6EDA               	movwf	fsr2h,c
 16413   002D30  C0BD  FFDF         	movff	atoa@sign,indf2
 16414   002D34                     l9206:
 16415                           
 16416                           ; BSR set to: 0
 16417                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 468:  w -= i;
 16418   002D34  51C4               	movf	atoa@i& (0+255),w,b
 16419   002D36  5FB7               	subwf	atoa@w& (0+255),f,b
 16420   002D38  51C5               	movf	(atoa@i+1)& (0+255),w,b
 16421   002D3A  5BB8               	subwfb	(atoa@w+1)& (0+255),f,b
 16422   002D3C                     
 16423                           ; BSR set to: 0
 16424                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 471:     return (
      +                          int) pad(fp, &dbuf[n], w);
 16425   002D3C  C090  F011         	movff	atoa@fp,pad@fp
 16426   002D40  C091  F012         	movff	atoa@fp+1,pad@fp+1
 16427   002D44  0E20               	movlw	low _dbuf
 16428   002D46  25C6               	addwf	atoa@n& (0+255),w,b
 16429   002D48  6E13               	movwf	pad@buf^0,c
 16430   002D4A  0E03               	movlw	high _dbuf
 16431   002D4C  21C7               	addwfc	(atoa@n+1)& (0+255),w,b
 16432   002D4E  6E14               	movwf	(pad@buf+1)^0,c
 16433   002D50  C0B7  F015         	movff	atoa@w,pad@p
 16434   002D54  C0B8  F016         	movff	atoa@w+1,pad@p+1
 16435   002D58  EC0E  F037         	call	_pad	;wreg free
 16436   002D5C  C011  F090         	movff	?_pad,?_atoa
 16437   002D60  C012  F091         	movff	?_pad+1,?_atoa+1
 16438   002D64                     l1198:
 16439   002D64  0012               	return		;funcret
 16440   002D66                     __end_of_atoa:
 16441                           	callstack 0
 16442                           
 16443 ;; *************** function _strcpy *****************
 16444 ;; Defined at:
 16445 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
 16446 ;; Parameters:    Size  Location     Type
 16447 ;;  dest            2    0[COMRAM] PTR unsigned char 
 16448 ;;		 -> dbuf(80), 
 16449 ;;  src             2    2[COMRAM] PTR const unsigned char 
 16450 ;;		 -> STR_52(4), STR_51(4), STR_48(4), STR_47(4), 
 16451 ;;		 -> STR_44(4), STR_43(4), STR_40(4), STR_39(4), 
 16452 ;; Auto vars:     Size  Location     Type
 16453 ;;  d               2    4[COMRAM] PTR unsigned char 
 16454 ;;		 -> dbuf(80), 
 16455 ;; Return value:  Size  Location     Type
 16456 ;;                  2    0[COMRAM] PTR unsigned char 
 16457 ;; Registers used:
 16458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16459 ;; Tracked objects:
 16460 ;;		On entry : 0/0
 16461 ;;		On exit  : 0/0
 16462 ;;		Unchanged: 0/0
 16463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16464 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16465 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16467 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16468 ;;Total ram usage:        6 bytes
 16469 ;; Hardware stack levels used: 1
 16470 ;; Hardware stack levels required when called: 1
 16471 ;; This function calls:
 16472 ;;		Nothing
 16473 ;; This function is called by:
 16474 ;;		_atoa
 16475 ;;		_efgtoa
 16476 ;; This function uses a non-reentrant model
 16477 ;;
 16478                           
 16479                           	psect	text50
 16480   0077A6                     __ptext50:
 16481                           	callstack 0
 16482   0077A6                     _strcpy:
 16483                           	callstack 22
 16484   0077A6  C001  F005         	movff	strcpy@dest,strcpy@d
 16485   0077AA  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
 16486   0077AE                     l8856:
 16487   0077AE  C003  FFF6         	movff	strcpy@src,tblptrl
 16488   0077B2  C004  FFF7         	movff	strcpy@src+1,tblptrh
 16489   0077B6  4A03               	infsnz	strcpy@src^0,f,c
 16490   0077B8  2A04               	incf	(strcpy@src+1)^0,f,c
 16491   0077BA                     	if	0	;tblptru may be non-zero
 16492   0077BA                     	endif
 16493   0077BA                     	if	0	;tblptru may be non-zero
 16494   0077BA                     	endif
 16495   0077BA  C005  FFD9         	movff	strcpy@d,fsr2l
 16496   0077BE  C006  FFDA         	movff	strcpy@d+1,fsr2h
 16497   0077C2  4A05               	infsnz	strcpy@d^0,f,c
 16498   0077C4  2A06               	incf	(strcpy@d+1)^0,f,c
 16499   0077C6  0008               	tblrd		*
 16500   0077C8  CFF5 FFDF          	movff	tablat,indf2
 16501   0077CC  50DF               	movf	indf2,w,c
 16502   0077CE  A4D8               	btfss	status,2,c
 16503   0077D0  EFEC  F03B         	goto	u10341
 16504   0077D4  EFEE  F03B         	goto	u10340
 16505   0077D8                     u10341:
 16506   0077D8  EFD7  F03B         	goto	l8856
 16507   0077DC                     u10340:
 16508   0077DC  0012               	return		;funcret
 16509   0077DE                     __end_of_strcpy:
 16510                           	callstack 0
 16511                           
 16512 ;; *************** function _pad *****************
 16513 ;; Defined at:
 16514 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
 16515 ;; Parameters:    Size  Location     Type
 16516 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 16517 ;;		 -> vsnprintf@f(12), 
 16518 ;;  buf             2   18[COMRAM] PTR unsigned char 
 16519 ;;		 -> dbuf(80), 
 16520 ;;  p               2   20[COMRAM] int 
 16521 ;; Auto vars:     Size  Location     Type
 16522 ;;  i               2   23[COMRAM] int 
 16523 ;; Return value:  Size  Location     Type
 16524 ;;                  2   16[COMRAM] int 
 16525 ;; Registers used:
 16526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16527 ;; Tracked objects:
 16528 ;;		On entry : 0/0
 16529 ;;		On exit  : 0/0
 16530 ;;		Unchanged: 0/0
 16531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16532 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16535 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16536 ;;Total ram usage:        9 bytes
 16537 ;; Hardware stack levels used: 1
 16538 ;; Hardware stack levels required when called: 4
 16539 ;; This function calls:
 16540 ;;		_fputc
 16541 ;;		_fputs
 16542 ;;		_strlen
 16543 ;; This function is called by:
 16544 ;;		_atoa
 16545 ;;		_dtoa
 16546 ;;		_efgtoa
 16547 ;;		_otoa
 16548 ;;		_utoa
 16549 ;;		_xtoa
 16550 ;; This function uses a non-reentrant model
 16551 ;;
 16552                           
 16553                           	psect	text51
 16554   006E1C                     __ptext51:
 16555                           	callstack 0
 16556   006E1C                     _pad:
 16557                           	callstack 19
 16558   006E1C                     
 16559                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static int p
      +                          ad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c
      +                          : 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 
      +                          199:     if (flags & (1 << 0)) {
 16560   006E1C  0101               	movlb	1	; () banked
 16561   006E1E  A1B0               	btfss	_flags& (0+255),0,b
 16562   006E20  EF14  F037         	goto	u10301
 16563   006E24  EF16  F037         	goto	u10300
 16564   006E28                     u10301:
 16565   006E28  EF20  F037         	goto	l8838
 16566   006E2C                     u10300:
 16567   006E2C                     
 16568                           ; BSR set to: 1
 16569                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
 16570   006E2C  C013  F00A         	movff	pad@buf,fputs@s
 16571   006E30  C014  F00B         	movff	pad@buf+1,fputs@s+1
 16572   006E34  C011  F00C         	movff	pad@fp,fputs@fp
 16573   006E38  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 16574   006E3C  EC77  F03B         	call	_fputs	;wreg free
 16575   006E40                     l8838:
 16576                           
 16577                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
 16578   006E40  BE16               	btfsc	(pad@p+1)^0,7,c
 16579   006E42  EF27  F037         	goto	u10310
 16580   006E46  EF25  F037         	goto	u10311
 16581   006E4A                     u10311:
 16582   006E4A  EF2B  F037         	goto	l1176
 16583   006E4E                     u10310:
 16584   006E4E                     
 16585                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
 16586   006E4E  0E00               	movlw	0
 16587   006E50  6E16               	movwf	(pad@p+1)^0,c
 16588   006E52  0E00               	movlw	0
 16589   006E54  6E15               	movwf	pad@p^0,c
 16590   006E56                     l1176:
 16591                           
 16592                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
 16593   006E56  0E00               	movlw	0
 16594   006E58  6E19               	movwf	(pad@i+1)^0,c
 16595   006E5A  0E00               	movlw	0
 16596   006E5C  6E18               	movwf	pad@i^0,c
 16597                           
 16598                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 16599   006E5E  EF3D  F037         	goto	l8846
 16600   006E62                     l8842:
 16601                           
 16602                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
 16603   006E62  0E00               	movlw	0
 16604   006E64  6E02               	movwf	(fputc@c+1)^0,c
 16605   006E66  0E20               	movlw	32
 16606   006E68  6E01               	movwf	fputc@c^0,c
 16607   006E6A  C011  F003         	movff	pad@fp,fputc@fp
 16608   006E6E  C012  F004         	movff	pad@fp+1,fputc@fp+1
 16609   006E72  ECE9  F035         	call	_fputc	;wreg free
 16610   006E76                     
 16611                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
 16612   006E76  4A18               	infsnz	pad@i^0,f,c
 16613   006E78  2A19               	incf	(pad@i+1)^0,f,c
 16614   006E7A                     l8846:
 16615                           
 16616                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
 16617   006E7A  5015               	movf	pad@p^0,w,c
 16618   006E7C  5C18               	subwf	pad@i^0,w,c
 16619   006E7E  5019               	movf	(pad@i+1)^0,w,c
 16620   006E80  0A80               	xorlw	128
 16621   006E82  6E17               	movwf	??_pad^0,c
 16622   006E84  5016               	movf	(pad@p+1)^0,w,c
 16623   006E86  0A80               	xorlw	128
 16624   006E88  5817               	subwfb	??_pad^0,w,c
 16625   006E8A  A0D8               	btfss	status,0,c
 16626   006E8C  EF4A  F037         	goto	u10321
 16627   006E90  EF4C  F037         	goto	u10320
 16628   006E94                     u10321:
 16629   006E94  EF31  F037         	goto	l8842
 16630   006E98                     u10320:
 16631   006E98                     
 16632                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
 16633   006E98  0101               	movlb	1	; () banked
 16634   006E9A  B1B0               	btfsc	_flags& (0+255),0,b
 16635   006E9C  EF52  F037         	goto	u10331
 16636   006EA0  EF54  F037         	goto	u10330
 16637   006EA4                     u10331:
 16638   006EA4  EF5E  F037         	goto	l8850
 16639   006EA8                     u10330:
 16640   006EA8                     
 16641                           ; BSR set to: 1
 16642                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
 16643   006EA8  C013  F00A         	movff	pad@buf,fputs@s
 16644   006EAC  C014  F00B         	movff	pad@buf+1,fputs@s+1
 16645   006EB0  C011  F00C         	movff	pad@fp,fputs@fp
 16646   006EB4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 16647   006EB8  EC77  F03B         	call	_fputs	;wreg free
 16648   006EBC                     l8850:
 16649                           
 16650                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 224:     return (
      +                          int)(strlen(buf) + (size_t)p);
 16651   006EBC  C013  F001         	movff	pad@buf,strlen@s
 16652   006EC0  C014  F002         	movff	pad@buf+1,strlen@s+1
 16653   006EC4  EC0B  F03C         	call	_strlen	;wreg free
 16654   006EC8  5015               	movf	pad@p^0,w,c
 16655   006ECA  2401               	addwf	?_strlen^0,w,c
 16656   006ECC  6E11               	movwf	?_pad^0,c
 16657   006ECE  5016               	movf	(pad@p+1)^0,w,c
 16658   006ED0  2002               	addwfc	(?_strlen+1)^0,w,c
 16659   006ED2  6E12               	movwf	(?_pad+1)^0,c
 16660   006ED4  0012               	return		;funcret
 16661   006ED6                     __end_of_pad:
 16662                           	callstack 0
 16663                           
 16664 ;; *************** function _strlen *****************
 16665 ;; Defined at:
 16666 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
 16667 ;; Parameters:    Size  Location     Type
 16668 ;;  s               2    0[COMRAM] PTR const unsigned char 
 16669 ;;		 -> dbuf(80), 
 16670 ;; Auto vars:     Size  Location     Type
 16671 ;;  a               2    2[COMRAM] PTR const unsigned char 
 16672 ;;		 -> dbuf(80), 
 16673 ;; Return value:  Size  Location     Type
 16674 ;;                  2    0[COMRAM] unsigned int 
 16675 ;; Registers used:
 16676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16677 ;; Tracked objects:
 16678 ;;		On entry : 0/0
 16679 ;;		On exit  : 0/0
 16680 ;;		Unchanged: 0/0
 16681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16685 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16686 ;;Total ram usage:        4 bytes
 16687 ;; Hardware stack levels used: 1
 16688 ;; Hardware stack levels required when called: 1
 16689 ;; This function calls:
 16690 ;;		Nothing
 16691 ;; This function is called by:
 16692 ;;		_pad
 16693 ;; This function uses a non-reentrant model
 16694 ;;
 16695                           
 16696                           	psect	text52
 16697   007816                     __ptext52:
 16698                           	callstack 0
 16699   007816                     _strlen:
 16700                           	callstack 21
 16701   007816  C001  F003         	movff	strlen@s,strlen@a
 16702   00781A  C002  F004         	movff	strlen@s+1,strlen@a+1
 16703   00781E  EF13  F03C         	goto	l8610
 16704   007822                     l8608:
 16705   007822  4A01               	infsnz	strlen@s^0,f,c
 16706   007824  2A02               	incf	(strlen@s+1)^0,f,c
 16707   007826                     l8610:
 16708   007826  C001  FFD9         	movff	strlen@s,fsr2l
 16709   00782A  C002  FFDA         	movff	strlen@s+1,fsr2h
 16710   00782E  50DF               	movf	indf2,w,c
 16711   007830  A4D8               	btfss	status,2,c
 16712   007832  EF1D  F03C         	goto	u9931
 16713   007836  EF1F  F03C         	goto	u9930
 16714   00783A                     u9931:
 16715   00783A  EF11  F03C         	goto	l8608
 16716   00783E                     u9930:
 16717   00783E  5003               	movf	strlen@a^0,w,c
 16718   007840  5C01               	subwf	strlen@s^0,w,c
 16719   007842  6E01               	movwf	?_strlen^0,c
 16720   007844  5004               	movf	(strlen@a+1)^0,w,c
 16721   007846  5802               	subwfb	(strlen@s+1)^0,w,c
 16722   007848  6E02               	movwf	(?_strlen+1)^0,c
 16723   00784A  0012               	return		;funcret
 16724   00784C                     __end_of_strlen:
 16725                           	callstack 0
 16726                           
 16727 ;; *************** function _fputs *****************
 16728 ;; Defined at:
 16729 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
 16730 ;; Parameters:    Size  Location     Type
 16731 ;;  s               2    9[COMRAM] PTR const unsigned char 
 16732 ;;		 -> dbuf(80), 
 16733 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 16734 ;;		 -> vsnprintf@f(12), 
 16735 ;; Auto vars:     Size  Location     Type
 16736 ;;  i               2   14[COMRAM] int 
 16737 ;;  c               1   13[COMRAM] unsigned char 
 16738 ;; Return value:  Size  Location     Type
 16739 ;;                  2    9[COMRAM] int 
 16740 ;; Registers used:
 16741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16742 ;; Tracked objects:
 16743 ;;		On entry : 0/0
 16744 ;;		On exit  : 0/0
 16745 ;;		Unchanged: 0/0
 16746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16747 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16748 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16750 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16751 ;;Total ram usage:        7 bytes
 16752 ;; Hardware stack levels used: 1
 16753 ;; Hardware stack levels required when called: 3
 16754 ;; This function calls:
 16755 ;;		_fputc
 16756 ;; This function is called by:
 16757 ;;		_pad
 16758 ;; This function uses a non-reentrant model
 16759 ;;
 16760                           
 16761                           	psect	text53
 16762   0076EE                     __ptext53:
 16763                           	callstack 0
 16764   0076EE                     _fputs:
 16765                           	callstack 19
 16766   0076EE  0E00               	movlw	0
 16767   0076F0  6E10               	movwf	(fputs@i+1)^0,c
 16768   0076F2  0E00               	movlw	0
 16769   0076F4  6E0F               	movwf	fputs@i^0,c
 16770   0076F6  EF88  F03B         	goto	l8604
 16771   0076FA                     l8600:
 16772   0076FA  C00E  F001         	movff	fputs@c,fputc@c
 16773   0076FE  6A02               	clrf	(fputc@c+1)^0,c
 16774   007700  C00C  F003         	movff	fputs@fp,fputc@fp
 16775   007704  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 16776   007708  ECE9  F035         	call	_fputc	;wreg free
 16777   00770C  4A0F               	infsnz	fputs@i^0,f,c
 16778   00770E  2A10               	incf	(fputs@i+1)^0,f,c
 16779   007710                     l8604:
 16780   007710  500F               	movf	fputs@i^0,w,c
 16781   007712  240A               	addwf	fputs@s^0,w,c
 16782   007714  6ED9               	movwf	fsr2l,c
 16783   007716  5010               	movf	(fputs@i+1)^0,w,c
 16784   007718  200B               	addwfc	(fputs@s+1)^0,w,c
 16785   00771A  6EDA               	movwf	fsr2h,c
 16786   00771C  50DF               	movf	indf2,w,c
 16787   00771E  6E0E               	movwf	fputs@c^0,c
 16788   007720  500E               	movf	fputs@c^0,w,c
 16789   007722  A4D8               	btfss	status,2,c
 16790   007724  EF96  F03B         	goto	u9921
 16791   007728  EF98  F03B         	goto	u9920
 16792   00772C                     u9921:
 16793   00772C  EF7D  F03B         	goto	l8600
 16794   007730                     u9920:
 16795   007730  0012               	return		;funcret
 16796   007732                     __end_of_fputs:
 16797                           	callstack 0
 16798                           
 16799 ;; *************** function _fputc *****************
 16800 ;; Defined at:
 16801 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
 16802 ;; Parameters:    Size  Location     Type
 16803 ;;  c               2    0[COMRAM] int 
 16804 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 16805 ;;		 -> vsnprintf@f(12), 
 16806 ;; Auto vars:     Size  Location     Type
 16807 ;;		None
 16808 ;; Return value:  Size  Location     Type
 16809 ;;                  2    0[COMRAM] int 
 16810 ;; Registers used:
 16811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16812 ;; Tracked objects:
 16813 ;;		On entry : 0/0
 16814 ;;		On exit  : 0/0
 16815 ;;		Unchanged: 0/0
 16816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16819 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16820 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16821 ;;Total ram usage:        9 bytes
 16822 ;; Hardware stack levels used: 1
 16823 ;; Hardware stack levels required when called: 2
 16824 ;; This function calls:
 16825 ;;		_putch
 16826 ;; This function is called by:
 16827 ;;		_pad
 16828 ;;		_ctoa
 16829 ;;		_stoa
 16830 ;;		_vfpfcnvrt
 16831 ;;		_fputs
 16832 ;; This function uses a non-reentrant model
 16833 ;;
 16834                           
 16835                           	psect	text54
 16836   006BD2                     __ptext54:
 16837                           	callstack 0
 16838   006BD2                     _fputc:
 16839                           	callstack 19
 16840   006BD2  5003               	movf	fputc@fp^0,w,c
 16841   006BD4  1004               	iorwf	(fputc@fp+1)^0,w,c
 16842   006BD6  B4D8               	btfsc	status,2,c
 16843   006BD8  EFF0  F035         	goto	u9491
 16844   006BDC  EFF2  F035         	goto	u9490
 16845   006BE0                     u9491:
 16846   006BE0  EFFB  F035         	goto	l8386
 16847   006BE4                     u9490:
 16848   006BE4  5003               	movf	fputc@fp^0,w,c
 16849   006BE6  1004               	iorwf	(fputc@fp+1)^0,w,c
 16850   006BE8  A4D8               	btfss	status,2,c
 16851   006BEA  EFF9  F035         	goto	u9501
 16852   006BEE  EFFB  F035         	goto	u9500
 16853   006BF2                     u9501:
 16854   006BF2  EF00  F036         	goto	l8388
 16855   006BF6                     u9500:
 16856   006BF6                     l8386:
 16857   006BF6  5001               	movf	fputc@c^0,w,c
 16858   006BF8  ECE5  F03C         	call	_putch
 16859   006BFC  EF4D  F036         	goto	l1681
 16860   006C00                     l8388:
 16861   006C00  EE20 F00A          	lfsr	2,10
 16862   006C04  5003               	movf	fputc@fp^0,w,c
 16863   006C06  26D9               	addwf	fsr2l,f,c
 16864   006C08  5004               	movf	(fputc@fp+1)^0,w,c
 16865   006C0A  22DA               	addwfc	fsr2h,f,c
 16866   006C0C  50DE               	movf	postinc2,w,c
 16867   006C0E  10DE               	iorwf	postinc2,w,c
 16868   006C10  B4D8               	btfsc	status,2,c
 16869   006C12  EF0D  F036         	goto	u9511
 16870   006C16  EF0F  F036         	goto	u9510
 16871   006C1A                     u9511:
 16872   006C1A  EF2A  F036         	goto	l8392
 16873   006C1E                     u9510:
 16874   006C1E  EE20 F00A          	lfsr	2,10
 16875   006C22  5003               	movf	fputc@fp^0,w,c
 16876   006C24  26D9               	addwf	fsr2l,f,c
 16877   006C26  5004               	movf	(fputc@fp+1)^0,w,c
 16878   006C28  22DA               	addwfc	fsr2h,f,c
 16879   006C2A  EE10 F003          	lfsr	1,3
 16880   006C2E  5003               	movf	fputc@fp^0,w,c
 16881   006C30  26E1               	addwf	fsr1l,f,c
 16882   006C32  5004               	movf	(fputc@fp+1)^0,w,c
 16883   006C34  22E2               	addwfc	fsr1h,f,c
 16884   006C36  50DE               	movf	postinc2,w,c
 16885   006C38  5CE6               	subwf	postinc1,w,c
 16886   006C3A  50E6               	movf	postinc1,w,c
 16887   006C3C  0A80               	xorlw	128
 16888   006C3E  6E09               	movwf	(??_fputc+4)^0,c
 16889   006C40  50DE               	movf	postinc2,w,c
 16890   006C42  0A80               	xorlw	128
 16891   006C44  5809               	subwfb	(??_fputc+4)^0,w,c
 16892   006C46  B0D8               	btfsc	status,0,c
 16893   006C48  EF28  F036         	goto	u9521
 16894   006C4C  EF2A  F036         	goto	u9520
 16895   006C50                     u9521:
 16896   006C50  EF4D  F036         	goto	l1681
 16897   006C54                     u9520:
 16898   006C54                     l8392:
 16899   006C54  EE20 F003          	lfsr	2,3
 16900   006C58  5003               	movf	fputc@fp^0,w,c
 16901   006C5A  26D9               	addwf	fsr2l,f,c
 16902   006C5C  5004               	movf	(fputc@fp+1)^0,w,c
 16903   006C5E  22DA               	addwfc	fsr2h,f,c
 16904   006C60  CFDE F005          	movff	postinc2,??_fputc
 16905   006C64  CFDD F006          	movff	postdec2,??_fputc+1
 16906   006C68  C003  FFD9         	movff	fputc@fp,fsr2l
 16907   006C6C  C004  FFDA         	movff	fputc@fp+1,fsr2h
 16908   006C70  CFDE F007          	movff	postinc2,??_fputc+2
 16909   006C74  CFDD F008          	movff	postdec2,??_fputc+3
 16910   006C78  5005               	movf	??_fputc^0,w,c
 16911   006C7A  2407               	addwf	(??_fputc+2)^0,w,c
 16912   006C7C  6ED9               	movwf	fsr2l,c
 16913   006C7E  5006               	movf	(??_fputc+1)^0,w,c
 16914   006C80  2008               	addwfc	(??_fputc+3)^0,w,c
 16915   006C82  6EDA               	movwf	fsr2h,c
 16916   006C84  C001  FFDF         	movff	fputc@c,indf2
 16917   006C88  EE20 F003          	lfsr	2,3
 16918   006C8C  5003               	movf	fputc@fp^0,w,c
 16919   006C8E  26D9               	addwf	fsr2l,f,c
 16920   006C90  5004               	movf	(fputc@fp+1)^0,w,c
 16921   006C92  22DA               	addwfc	fsr2h,f,c
 16922   006C94  2ADE               	incf	postinc2,f,c
 16923   006C96  0E00               	movlw	0
 16924   006C98  22DD               	addwfc	postdec2,f,c
 16925   006C9A                     l1681:
 16926   006C9A  0012               	return		;funcret
 16927   006C9C                     __end_of_fputc:
 16928                           	callstack 0
 16929                           
 16930 ;; *************** function _putch *****************
 16931 ;; Defined at:
 16932 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
 16933 ;; Parameters:    Size  Location     Type
 16934 ;;  c               1    wreg     unsigned char 
 16935 ;; Auto vars:     Size  Location     Type
 16936 ;;  c               1    0[COMRAM] unsigned char 
 16937 ;; Return value:  Size  Location     Type
 16938 ;;                  1    wreg      void 
 16939 ;; Registers used:
 16940 ;;		wreg
 16941 ;; Tracked objects:
 16942 ;;		On entry : 0/0
 16943 ;;		On exit  : 0/0
 16944 ;;		Unchanged: 0/0
 16945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16950 ;;Total ram usage:        0 bytes
 16951 ;; Hardware stack levels used: 1
 16952 ;; Hardware stack levels required when called: 1
 16953 ;; This function calls:
 16954 ;;		Nothing
 16955 ;; This function is called by:
 16956 ;;		_fputc
 16957 ;; This function uses a non-reentrant model
 16958 ;;
 16959                           
 16960                           	psect	text55
 16961   0079CA                     __ptext55:
 16962                           	callstack 0
 16963   0079CA                     _putch:
 16964                           	callstack 19
 16965   0079CA  0012               	return		;funcret
 16966   0079CC                     __end_of_putch:
 16967                           	callstack 0
 16968                           
 16969 ;; *************** function _memcpy *****************
 16970 ;; Defined at:
 16971 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
 16972 ;; Parameters:    Size  Location     Type
 16973 ;;  d1              2    0[COMRAM] PTR void 
 16974 ;;		 -> dbuf(80), 
 16975 ;;  s1              2    2[COMRAM] PTR const void 
 16976 ;;		 -> dbuf(80), 
 16977 ;;  n               2    4[COMRAM] unsigned int 
 16978 ;; Auto vars:     Size  Location     Type
 16979 ;;  s               2    9[COMRAM] PTR const unsigned char 
 16980 ;;		 -> dbuf(80), 
 16981 ;;  d               2    7[COMRAM] PTR unsigned char 
 16982 ;;		 -> dbuf(80), 
 16983 ;;  tmp             1    6[COMRAM] unsigned char 
 16984 ;; Return value:  Size  Location     Type
 16985 ;;                  2    0[COMRAM] PTR void 
 16986 ;; Registers used:
 16987 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16988 ;; Tracked objects:
 16989 ;;		On entry : 0/0
 16990 ;;		On exit  : 0/0
 16991 ;;		Unchanged: 0/0
 16992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16993 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16994 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16996 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16997 ;;Total ram usage:       11 bytes
 16998 ;; Hardware stack levels used: 1
 16999 ;; Hardware stack levels required when called: 1
 17000 ;; This function calls:
 17001 ;;		Nothing
 17002 ;; This function is called by:
 17003 ;;		_atoa
 17004 ;;		_efgtoa
 17005 ;; This function uses a non-reentrant model
 17006 ;;
 17007                           
 17008                           	psect	text56
 17009   00760E                     __ptext56:
 17010                           	callstack 0
 17011   00760E                     _memcpy:
 17012                           	callstack 22
 17013   00760E  C003  F00A         	movff	memcpy@s1,memcpy@s
 17014   007612  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
 17015   007616  C001  F008         	movff	memcpy@d1,memcpy@d
 17016   00761A  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
 17017   00761E  EF21  F03B         	goto	l8868
 17018   007622                     l8860:
 17019   007622  C00A  FFD9         	movff	memcpy@s,fsr2l
 17020   007626  C00B  FFDA         	movff	memcpy@s+1,fsr2h
 17021   00762A  50DF               	movf	indf2,w,c
 17022   00762C  6E07               	movwf	memcpy@tmp^0,c
 17023   00762E  4A0A               	infsnz	memcpy@s^0,f,c
 17024   007630  2A0B               	incf	(memcpy@s+1)^0,f,c
 17025   007632  C008  FFD9         	movff	memcpy@d,fsr2l
 17026   007636  C009  FFDA         	movff	memcpy@d+1,fsr2h
 17027   00763A  C007  FFDF         	movff	memcpy@tmp,indf2
 17028   00763E  4A08               	infsnz	memcpy@d^0,f,c
 17029   007640  2A09               	incf	(memcpy@d+1)^0,f,c
 17030   007642                     l8868:
 17031   007642  0605               	decf	memcpy@n^0,f,c
 17032   007644  A0D8               	btfss	status,0,c
 17033   007646  0606               	decf	(memcpy@n+1)^0,f,c
 17034   007648  2805               	incf	memcpy@n^0,w,c
 17035   00764A  E106               	bnz	u10351
 17036   00764C  2806               	incf	(memcpy@n+1)^0,w,c
 17037   00764E  A4D8               	btfss	status,2,c
 17038   007650  EF2C  F03B         	goto	u10351
 17039   007654  EF2E  F03B         	goto	u10350
 17040   007658                     u10351:
 17041   007658  EF11  F03B         	goto	l8860
 17042   00765C                     u10350:
 17043   00765C  0012               	return		;funcret
 17044   00765E                     __end_of_memcpy:
 17045                           	callstack 0
 17046                           
 17047 ;; *************** function _floorf *****************
 17048 ;; Defined at:
 17049 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
 17050 ;; Parameters:    Size  Location     Type
 17051 ;;  x               4   60[COMRAM] float 
 17052 ;; Auto vars:     Size  Location     Type
 17053 ;;  u               4   76[COMRAM] struct .
 17054 ;;  m               4   70[COMRAM] unsigned long 
 17055 ;;  e               2   74[COMRAM] int 
 17056 ;; Return value:  Size  Location     Type
 17057 ;;                  4   60[COMRAM] float 
 17058 ;; Registers used:
 17059 ;;		wreg, status,2, status,0
 17060 ;; Tracked objects:
 17061 ;;		On entry : 0/0
 17062 ;;		On exit  : 0/0
 17063 ;;		Unchanged: 0/0
 17064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17066 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17067 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17068 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17069 ;;Total ram usage:       20 bytes
 17070 ;; Hardware stack levels used: 1
 17071 ;; Hardware stack levels required when called: 1
 17072 ;; This function calls:
 17073 ;;		Nothing
 17074 ;; This function is called by:
 17075 ;;		_atoa
 17076 ;;		_efgtoa
 17077 ;; This function uses a non-reentrant model
 17078 ;;
 17079                           
 17080                           	psect	text57
 17081   004E82                     __ptext57:
 17082                           	callstack 0
 17083   004E82                     _floorf:
 17084                           	callstack 22
 17085   004E82  C170  F04D         	movff	floorf@F521,floorf@u
 17086   004E86  C171  F04E         	movff	floorf@F521+1,floorf@u+1
 17087   004E8A  C172  F04F         	movff	floorf@F521+2,floorf@u+2
 17088   004E8E  C173  F050         	movff	floorf@F521+3,floorf@u+3
 17089   004E92  C03D  F04D         	movff	floorf@x,floorf@u
 17090   004E96  C03E  F04E         	movff	floorf@x+1,floorf@u+1
 17091   004E9A  C03F  F04F         	movff	floorf@x+2,floorf@u+2
 17092   004E9E  C040  F050         	movff	floorf@x+3,floorf@u+3
 17093   004EA2  0E81               	movlw	129
 17094   004EA4  6E41               	movwf	??_floorf^0,c
 17095   004EA6  0EFF               	movlw	255
 17096   004EA8  6E42               	movwf	(??_floorf+1)^0,c
 17097   004EAA  C04D  F043         	movff	floorf@u,??_floorf+2
 17098   004EAE  C04E  F044         	movff	floorf@u+1,??_floorf+3
 17099   004EB2  C04F  F045         	movff	floorf@u+2,??_floorf+4
 17100   004EB6  C050  F046         	movff	floorf@u+3,??_floorf+5
 17101   004EBA  0E18               	movlw	24
 17102   004EBC  EF65  F027         	goto	u6220
 17103   004EC0                     u6225:
 17104   004EC0  90D8               	bcf	status,0,c
 17105   004EC2  3246               	rrcf	(??_floorf+5)^0,f,c
 17106   004EC4  3245               	rrcf	(??_floorf+4)^0,f,c
 17107   004EC6  3244               	rrcf	(??_floorf+3)^0,f,c
 17108   004EC8  3243               	rrcf	(??_floorf+2)^0,f,c
 17109   004ECA                     u6220:
 17110   004ECA  2EE8               	decfsz	wreg,f,c
 17111   004ECC  EF60  F027         	goto	u6225
 17112   004ED0  5043               	movf	(??_floorf+2)^0,w,c
 17113   004ED2  2441               	addwf	??_floorf^0,w,c
 17114   004ED4  6E4B               	movwf	floorf@e^0,c
 17115   004ED6  0E00               	movlw	0
 17116   004ED8  2042               	addwfc	(??_floorf+1)^0,w,c
 17117   004EDA  6E4C               	movwf	(floorf@e+1)^0,c
 17118   004EDC  BE4C               	btfsc	(floorf@e+1)^0,7,c
 17119   004EDE  EF7A  F027         	goto	u6231
 17120   004EE2  504C               	movf	(floorf@e+1)^0,w,c
 17121   004EE4  E109               	bnz	u6230
 17122   004EE6  0E17               	movlw	23
 17123   004EE8  5C4B               	subwf	floorf@e^0,w,c
 17124   004EEA  A0D8               	btfss	status,0,c
 17125   004EEC  EF7A  F027         	goto	u6231
 17126   004EF0  EF7C  F027         	goto	u6230
 17127   004EF4                     u6231:
 17128   004EF4  EF86  F027         	goto	l6004
 17129   004EF8                     u6230:
 17130   004EF8                     l6002:
 17131   004EF8  C03D  F03D         	movff	floorf@x,?_floorf
 17132   004EFC  C03E  F03E         	movff	floorf@x+1,?_floorf+1
 17133   004F00  C03F  F03F         	movff	floorf@x+2,?_floorf+2
 17134   004F04  C040  F040         	movff	floorf@x+3,?_floorf+3
 17135   004F08  EF49  F028         	goto	l1649
 17136   004F0C                     l6004:
 17137   004F0C  BE4C               	btfsc	(floorf@e+1)^0,7,c
 17138   004F0E  EF8B  F027         	goto	u6241
 17139   004F12  EF8D  F027         	goto	u6240
 17140   004F16                     u6241:
 17141   004F16  EFFD  F027         	goto	l6014
 17142   004F1A                     u6240:
 17143   004F1A  C04B  F041         	movff	floorf@e,??_floorf
 17144   004F1E  0EFF               	movlw	255
 17145   004F20  6E42               	movwf	(??_floorf+1)^0,c
 17146   004F22  0EFF               	movlw	255
 17147   004F24  6E43               	movwf	(??_floorf+2)^0,c
 17148   004F26  0E7F               	movlw	127
 17149   004F28  6E44               	movwf	(??_floorf+3)^0,c
 17150   004F2A  0E00               	movlw	0
 17151   004F2C  6E45               	movwf	(??_floorf+4)^0,c
 17152   004F2E                     u6255:
 17153   004F2E  6641               	tstfsz	??_floorf^0,c
 17154   004F30  EF9C  F027         	goto	u6256
 17155   004F34  EFA4  F027         	goto	u6257
 17156   004F38                     u6256:
 17157   004F38  3445               	rlcf	(??_floorf+4)^0,w,c
 17158   004F3A  3245               	rrcf	(??_floorf+4)^0,f,c
 17159   004F3C  3244               	rrcf	(??_floorf+3)^0,f,c
 17160   004F3E  3243               	rrcf	(??_floorf+2)^0,f,c
 17161   004F40  3242               	rrcf	(??_floorf+1)^0,f,c
 17162   004F42  2E41               	decfsz	??_floorf^0,f,c
 17163   004F44  EF97  F027         	goto	u6255
 17164   004F48                     u6257:
 17165   004F48  C042  F047         	movff	??_floorf+1,floorf@m
 17166   004F4C  C043  F048         	movff	??_floorf+2,floorf@m+1
 17167   004F50  C044  F049         	movff	??_floorf+3,floorf@m+2
 17168   004F54  C045  F04A         	movff	??_floorf+4,floorf@m+3
 17169   004F58  5047               	movf	floorf@m^0,w,c
 17170   004F5A  144D               	andwf	floorf@u^0,w,c
 17171   004F5C  6E41               	movwf	??_floorf^0,c
 17172   004F5E  5048               	movf	(floorf@m+1)^0,w,c
 17173   004F60  144E               	andwf	(floorf@u+1)^0,w,c
 17174   004F62  6E42               	movwf	(??_floorf+1)^0,c
 17175   004F64  5049               	movf	(floorf@m+2)^0,w,c
 17176   004F66  144F               	andwf	(floorf@u+2)^0,w,c
 17177   004F68  6E43               	movwf	(??_floorf+2)^0,c
 17178   004F6A  504A               	movf	(floorf@m+3)^0,w,c
 17179   004F6C  1450               	andwf	(floorf@u+3)^0,w,c
 17180   004F6E  6E44               	movwf	(??_floorf+3)^0,c
 17181   004F70  5041               	movf	??_floorf^0,w,c
 17182   004F72  1042               	iorwf	(??_floorf+1)^0,w,c
 17183   004F74  1043               	iorwf	(??_floorf+2)^0,w,c
 17184   004F76  1044               	iorwf	(??_floorf+3)^0,w,c
 17185   004F78  A4D8               	btfss	status,2,c
 17186   004F7A  EFC1  F027         	goto	u6261
 17187   004F7E  EFC3  F027         	goto	u6260
 17188   004F82                     u6261:
 17189   004F82  EFC5  F027         	goto	l6010
 17190   004F86                     u6260:
 17191   004F86  EF7C  F027         	goto	l6002
 17192   004F8A                     l6010:
 17193   004F8A  C04D  F041         	movff	floorf@u,??_floorf
 17194   004F8E  C04E  F042         	movff	floorf@u+1,??_floorf+1
 17195   004F92  C04F  F043         	movff	floorf@u+2,??_floorf+2
 17196   004F96  C050  F044         	movff	floorf@u+3,??_floorf+3
 17197   004F9A  0E20               	movlw	32
 17198   004F9C  EFD5  F027         	goto	u6270
 17199   004FA0                     u6275:
 17200   004FA0  90D8               	bcf	status,0,c
 17201   004FA2  3244               	rrcf	(??_floorf+3)^0,f,c
 17202   004FA4  3243               	rrcf	(??_floorf+2)^0,f,c
 17203   004FA6  3242               	rrcf	(??_floorf+1)^0,f,c
 17204   004FA8  3241               	rrcf	??_floorf^0,f,c
 17205   004FAA                     u6270:
 17206   004FAA  2EE8               	decfsz	wreg,f,c
 17207   004FAC  EFD0  F027         	goto	u6275
 17208   004FB0  5041               	movf	??_floorf^0,w,c
 17209   004FB2  1042               	iorwf	(??_floorf+1)^0,w,c
 17210   004FB4  1043               	iorwf	(??_floorf+2)^0,w,c
 17211   004FB6  1044               	iorwf	(??_floorf+3)^0,w,c
 17212   004FB8  B4D8               	btfsc	status,2,c
 17213   004FBA  EFE1  F027         	goto	u6281
 17214   004FBE  EFE3  F027         	goto	u6280
 17215   004FC2                     u6281:
 17216   004FC2  EFEB  F027         	goto	l1652
 17217   004FC6                     u6280:
 17218   004FC6  5047               	movf	floorf@m^0,w,c
 17219   004FC8  264D               	addwf	floorf@u^0,f,c
 17220   004FCA  5048               	movf	(floorf@m+1)^0,w,c
 17221   004FCC  224E               	addwfc	(floorf@u+1)^0,f,c
 17222   004FCE  5049               	movf	(floorf@m+2)^0,w,c
 17223   004FD0  224F               	addwfc	(floorf@u+2)^0,f,c
 17224   004FD2  504A               	movf	(floorf@m+3)^0,w,c
 17225   004FD4  2250               	addwfc	(floorf@u+3)^0,f,c
 17226   004FD6                     l1652:
 17227   004FD6  1C47               	comf	floorf@m^0,w,c
 17228   004FD8  6E41               	movwf	??_floorf^0,c
 17229   004FDA  1C48               	comf	(floorf@m+1)^0,w,c
 17230   004FDC  6E42               	movwf	(??_floorf+1)^0,c
 17231   004FDE  1C49               	comf	(floorf@m+2)^0,w,c
 17232   004FE0  6E43               	movwf	(??_floorf+2)^0,c
 17233   004FE2  1C4A               	comf	(floorf@m+3)^0,w,c
 17234   004FE4  6E44               	movwf	(??_floorf+3)^0,c
 17235   004FE6  5041               	movf	??_floorf^0,w,c
 17236   004FE8  164D               	andwf	floorf@u^0,f,c
 17237   004FEA  5042               	movf	(??_floorf+1)^0,w,c
 17238   004FEC  164E               	andwf	(floorf@u+1)^0,f,c
 17239   004FEE  5043               	movf	(??_floorf+2)^0,w,c
 17240   004FF0  164F               	andwf	(floorf@u+2)^0,f,c
 17241   004FF2  5044               	movf	(??_floorf+3)^0,w,c
 17242   004FF4  1650               	andwf	(floorf@u+3)^0,f,c
 17243   004FF6  EF41  F028         	goto	l6022
 17244   004FFA                     l6014:
 17245   004FFA  C04D  F041         	movff	floorf@u,??_floorf
 17246   004FFE  C04E  F042         	movff	floorf@u+1,??_floorf+1
 17247   005002  C04F  F043         	movff	floorf@u+2,??_floorf+2
 17248   005006  C050  F044         	movff	floorf@u+3,??_floorf+3
 17249   00500A  0E20               	movlw	32
 17250   00500C  EF0D  F028         	goto	u6290
 17251   005010                     u6295:
 17252   005010  90D8               	bcf	status,0,c
 17253   005012  3244               	rrcf	(??_floorf+3)^0,f,c
 17254   005014  3243               	rrcf	(??_floorf+2)^0,f,c
 17255   005016  3242               	rrcf	(??_floorf+1)^0,f,c
 17256   005018  3241               	rrcf	??_floorf^0,f,c
 17257   00501A                     u6290:
 17258   00501A  2EE8               	decfsz	wreg,f,c
 17259   00501C  EF08  F028         	goto	u6295
 17260   005020  5041               	movf	??_floorf^0,w,c
 17261   005022  1042               	iorwf	(??_floorf+1)^0,w,c
 17262   005024  1043               	iorwf	(??_floorf+2)^0,w,c
 17263   005026  1044               	iorwf	(??_floorf+3)^0,w,c
 17264   005028  A4D8               	btfss	status,2,c
 17265   00502A  EF19  F028         	goto	u6301
 17266   00502E  EF1B  F028         	goto	u6300
 17267   005032                     u6301:
 17268   005032  EF25  F028         	goto	l6018
 17269   005036                     u6300:
 17270   005036  0E00               	movlw	0
 17271   005038  6E4D               	movwf	floorf@u^0,c
 17272   00503A  0E00               	movlw	0
 17273   00503C  6E4E               	movwf	(floorf@u+1)^0,c
 17274   00503E  0E00               	movlw	0
 17275   005040  6E4F               	movwf	(floorf@u+2)^0,c
 17276   005042  0E00               	movlw	0
 17277   005044  6E50               	movwf	(floorf@u+3)^0,c
 17278   005046  EF41  F028         	goto	l6022
 17279   00504A                     l6018:
 17280   00504A  90D8               	bcf	status,0,c
 17281   00504C  344D               	rlcf	floorf@u^0,w,c
 17282   00504E  6E41               	movwf	??_floorf^0,c
 17283   005050  344E               	rlcf	(floorf@u+1)^0,w,c
 17284   005052  6E42               	movwf	(??_floorf+1)^0,c
 17285   005054  344F               	rlcf	(floorf@u+2)^0,w,c
 17286   005056  6E43               	movwf	(??_floorf+2)^0,c
 17287   005058  3450               	rlcf	(floorf@u+3)^0,w,c
 17288   00505A  6E44               	movwf	(??_floorf+3)^0,c
 17289   00505C  5041               	movf	??_floorf^0,w,c
 17290   00505E  1042               	iorwf	(??_floorf+1)^0,w,c
 17291   005060  1043               	iorwf	(??_floorf+2)^0,w,c
 17292   005062  1044               	iorwf	(??_floorf+3)^0,w,c
 17293   005064  B4D8               	btfsc	status,2,c
 17294   005066  EF37  F028         	goto	u6311
 17295   00506A  EF39  F028         	goto	u6310
 17296   00506E                     u6311:
 17297   00506E  EF41  F028         	goto	l6022
 17298   005072                     u6310:
 17299   005072  0E00               	movlw	0
 17300   005074  6E4D               	movwf	floorf@u^0,c
 17301   005076  0E00               	movlw	0
 17302   005078  6E4E               	movwf	(floorf@u+1)^0,c
 17303   00507A  0E80               	movlw	128
 17304   00507C  6E4F               	movwf	(floorf@u+2)^0,c
 17305   00507E  0EBF               	movlw	191
 17306   005080  6E50               	movwf	(floorf@u+3)^0,c
 17307   005082                     l6022:
 17308   005082  C04D  F03D         	movff	floorf@u,?_floorf
 17309   005086  C04E  F03E         	movff	floorf@u+1,?_floorf+1
 17310   00508A  C04F  F03F         	movff	floorf@u+2,?_floorf+2
 17311   00508E  C050  F040         	movff	floorf@u+3,?_floorf+3
 17312   005092                     l1649:
 17313   005092  0012               	return		;funcret
 17314   005094                     __end_of_floorf:
 17315                           	callstack 0
 17316                           
 17317 ;; *************** function ___fpclassifyf *****************
 17318 ;; Defined at:
 17319 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
 17320 ;; Parameters:    Size  Location     Type
 17321 ;;  x               4    0[COMRAM] float 
 17322 ;; Auto vars:     Size  Location     Type
 17323 ;;  u               4   10[COMRAM] struct .
 17324 ;;  e               2    8[COMRAM] int 
 17325 ;; Return value:  Size  Location     Type
 17326 ;;                  2    0[COMRAM] int 
 17327 ;; Registers used:
 17328 ;;		wreg, status,2, status,0
 17329 ;; Tracked objects:
 17330 ;;		On entry : 0/0
 17331 ;;		On exit  : 0/0
 17332 ;;		Unchanged: 0/0
 17333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17335 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17336 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17337 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17338 ;;Total ram usage:       14 bytes
 17339 ;; Hardware stack levels used: 1
 17340 ;; Hardware stack levels required when called: 1
 17341 ;; This function calls:
 17342 ;;		Nothing
 17343 ;; This function is called by:
 17344 ;;		_atoa
 17345 ;;		_efgtoa
 17346 ;; This function uses a non-reentrant model
 17347 ;;
 17348                           
 17349                           	psect	text58
 17350   00673E                     __ptext58:
 17351                           	callstack 0
 17352   00673E                     ___fpclassifyf:
 17353                           	callstack 22
 17354   00673E  C174  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
 17355   006742  C175  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
 17356   006746  C176  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
 17357   00674A  C177  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
 17358   00674E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 17359   006752  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 17360   006756  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 17361   00675A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 17362   00675E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 17363   006762  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 17364   006766  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 17365   00676A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 17366   00676E  0E18               	movlw	24
 17367   006770  EFBF  F033         	goto	u6140
 17368   006774                     u6145:
 17369   006774  90D8               	bcf	status,0,c
 17370   006776  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 17371   006778  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 17372   00677A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 17373   00677C  3205               	rrcf	??___fpclassifyf^0,f,c
 17374   00677E                     u6140:
 17375   00677E  2EE8               	decfsz	wreg,f,c
 17376   006780  EFBA  F033         	goto	u6145
 17377   006784  5005               	movf	??___fpclassifyf^0,w,c
 17378   006786  6E09               	movwf	___fpclassifyf@e^0,c
 17379   006788  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 17380   00678A  5009               	movf	___fpclassifyf@e^0,w,c
 17381   00678C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 17382   00678E  A4D8               	btfss	status,2,c
 17383   006790  EFCC  F033         	goto	u6151
 17384   006794  EFCE  F033         	goto	u6150
 17385   006798                     u6151:
 17386   006798  EFEE  F033         	goto	l5984
 17387   00679C                     u6150:
 17388   00679C  90D8               	bcf	status,0,c
 17389   00679E  340B               	rlcf	___fpclassifyf@u^0,w,c
 17390   0067A0  6E05               	movwf	??___fpclassifyf^0,c
 17391   0067A2  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 17392   0067A4  6E06               	movwf	(??___fpclassifyf+1)^0,c
 17393   0067A6  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 17394   0067A8  6E07               	movwf	(??___fpclassifyf+2)^0,c
 17395   0067AA  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 17396   0067AC  6E08               	movwf	(??___fpclassifyf+3)^0,c
 17397   0067AE  5005               	movf	??___fpclassifyf^0,w,c
 17398   0067B0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 17399   0067B2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 17400   0067B4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 17401   0067B6  A4D8               	btfss	status,2,c
 17402   0067B8  EFE0  F033         	goto	u6161
 17403   0067BC  EFE2  F033         	goto	u6160
 17404   0067C0                     u6161:
 17405   0067C0  EFE8  F033         	goto	l5980
 17406   0067C4                     u6160:
 17407   0067C4  0E00               	movlw	0
 17408   0067C6  6E02               	movwf	(?___fpclassifyf+1)^0,c
 17409   0067C8  0E02               	movlw	2
 17410   0067CA  6E01               	movwf	?___fpclassifyf^0,c
 17411   0067CC  EF1D  F034         	goto	l1633
 17412   0067D0                     l5980:
 17413   0067D0  0E00               	movlw	0
 17414   0067D2  6E02               	movwf	(?___fpclassifyf+1)^0,c
 17415   0067D4  0E03               	movlw	3
 17416   0067D6  6E01               	movwf	?___fpclassifyf^0,c
 17417   0067D8  EF1D  F034         	goto	l1633
 17418   0067DC                     l5984:
 17419   0067DC  2809               	incf	___fpclassifyf@e^0,w,c
 17420   0067DE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 17421   0067E0  A4D8               	btfss	status,2,c
 17422   0067E2  EFF5  F033         	goto	u6171
 17423   0067E6  EFF7  F033         	goto	u6170
 17424   0067EA                     u6171:
 17425   0067EA  EF19  F034         	goto	l5990
 17426   0067EE                     u6170:
 17427   0067EE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 17428   0067F2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 17429   0067F6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 17430   0067FA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 17431   0067FE  0E09               	movlw	9
 17432   006800                     u6185:
 17433   006800  90D8               	bcf	status,0,c
 17434   006802  3605               	rlcf	??___fpclassifyf^0,f,c
 17435   006804  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 17436   006806  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 17437   006808  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 17438   00680A  2EE8               	decfsz	wreg,f,c
 17439   00680C  EF00  F034         	goto	u6185
 17440   006810  5005               	movf	??___fpclassifyf^0,w,c
 17441   006812  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 17442   006814  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 17443   006816  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 17444   006818  B4D8               	btfsc	status,2,c
 17445   00681A  EF11  F034         	goto	u6191
 17446   00681E  EF14  F034         	goto	u6190
 17447   006822                     u6191:
 17448   006822  0E01               	movlw	1
 17449   006824  EF15  F034         	goto	u6200
 17450   006828                     u6190:
 17451   006828  0E00               	movlw	0
 17452   00682A                     u6200:
 17453   00682A  6E01               	movwf	?___fpclassifyf^0,c
 17454   00682C  6A02               	clrf	(?___fpclassifyf+1)^0,c
 17455   00682E  EF1D  F034         	goto	l1633
 17456   006832                     l5990:
 17457   006832  0E00               	movlw	0
 17458   006834  6E02               	movwf	(?___fpclassifyf+1)^0,c
 17459   006836  0E04               	movlw	4
 17460   006838  6E01               	movwf	?___fpclassifyf^0,c
 17461   00683A                     l1633:
 17462   00683A  0012               	return		;funcret
 17463   00683C                     __end_of___fpclassifyf:
 17464                           	callstack 0
 17465                           
 17466 ;; *************** function ___fltol *****************
 17467 ;; Defined at:
 17468 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
 17469 ;; Parameters:    Size  Location     Type
 17470 ;;  f1              4  101[COMRAM] int 
 17471 ;; Auto vars:     Size  Location     Type
 17472 ;;  exp1            1  110[COMRAM] unsigned char 
 17473 ;;  sign1           1  109[COMRAM] unsigned char 
 17474 ;; Return value:  Size  Location     Type
 17475 ;;                  4  101[COMRAM] long 
 17476 ;; Registers used:
 17477 ;;		wreg, status,2, status,0
 17478 ;; Tracked objects:
 17479 ;;		On entry : 0/0
 17480 ;;		On exit  : 0/0
 17481 ;;		Unchanged: 0/0
 17482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17485 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17486 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17487 ;;Total ram usage:       10 bytes
 17488 ;; Hardware stack levels used: 1
 17489 ;; Hardware stack levels required when called: 1
 17490 ;; This function calls:
 17491 ;;		Nothing
 17492 ;; This function is called by:
 17493 ;;		_OxygenSPO2Calc
 17494 ;;		_HeartRateCalc
 17495 ;;		_atoa
 17496 ;;		_efgtoa
 17497 ;; This function uses a non-reentrant model
 17498 ;;
 17499                           
 17500                           	psect	text59
 17501   006532                     __ptext59:
 17502                           	callstack 0
 17503   006532                     ___fltol:
 17504                           	callstack 22
 17505   006532  3468               	rlcf	(___fltol@f1+2)^0,w,c
 17506   006534  3469               	rlcf	(___fltol@f1+3)^0,w,c
 17507   006536  6E6F               	movwf	___fltol@exp1^0,c
 17508   006538  506F               	movf	___fltol@exp1^0,w,c
 17509   00653A  A4D8               	btfss	status,2,c
 17510   00653C  EFA2  F032         	goto	u10231
 17511   006540  EFA4  F032         	goto	u10230
 17512   006544                     u10231:
 17513   006544  EFAE  F032         	goto	l8796
 17514   006548                     u10230:
 17515   006548                     l8792:
 17516   006548  0E00               	movlw	0
 17517   00654A  6E66               	movwf	?___fltol^0,c
 17518   00654C  0E00               	movlw	0
 17519   00654E  6E67               	movwf	(?___fltol+1)^0,c
 17520   006550  0E00               	movlw	0
 17521   006552  6E68               	movwf	(?___fltol+2)^0,c
 17522   006554  0E00               	movlw	0
 17523   006556  6E69               	movwf	(?___fltol+3)^0,c
 17524   006558  EF1B  F033         	goto	l753
 17525   00655C                     l8796:
 17526   00655C  C066  F06A         	movff	___fltol@f1,??___fltol
 17527   006560  C067  F06B         	movff	___fltol@f1+1,??___fltol+1
 17528   006564  C068  F06C         	movff	___fltol@f1+2,??___fltol+2
 17529   006568  C069  F06D         	movff	___fltol@f1+3,??___fltol+3
 17530   00656C  0E20               	movlw	32
 17531   00656E  EFBE  F032         	goto	u10240
 17532   006572                     u10245:
 17533   006572  90D8               	bcf	status,0,c
 17534   006574  326D               	rrcf	(??___fltol+3)^0,f,c
 17535   006576  326C               	rrcf	(??___fltol+2)^0,f,c
 17536   006578  326B               	rrcf	(??___fltol+1)^0,f,c
 17537   00657A  326A               	rrcf	??___fltol^0,f,c
 17538   00657C                     u10240:
 17539   00657C  2EE8               	decfsz	wreg,f,c
 17540   00657E  EFB9  F032         	goto	u10245
 17541   006582  506A               	movf	??___fltol^0,w,c
 17542   006584  6E6E               	movwf	___fltol@sign1^0,c
 17543   006586  8E68               	bsf	(___fltol@f1+2)^0,7,c
 17544   006588  0EFF               	movlw	255
 17545   00658A  1666               	andwf	___fltol@f1^0,f,c
 17546   00658C  0EFF               	movlw	255
 17547   00658E  1667               	andwf	(___fltol@f1+1)^0,f,c
 17548   006590  0EFF               	movlw	255
 17549   006592  1668               	andwf	(___fltol@f1+2)^0,f,c
 17550   006594  0E00               	movlw	0
 17551   006596  1669               	andwf	(___fltol@f1+3)^0,f,c
 17552   006598  0E96               	movlw	150
 17553   00659A  5E6F               	subwf	___fltol@exp1^0,f,c
 17554   00659C  BE6F               	btfsc	___fltol@exp1^0,7,c
 17555   00659E  EFD5  F032         	goto	u10250
 17556   0065A2  EFD3  F032         	goto	u10251
 17557   0065A6                     u10251:
 17558   0065A6  EFEB  F032         	goto	l8816
 17559   0065AA                     u10250:
 17560   0065AA  506F               	movf	___fltol@exp1^0,w,c
 17561   0065AC  0A80               	xorlw	128
 17562   0065AE  0F97               	addlw	151
 17563   0065B0  B0D8               	btfsc	status,0,c
 17564   0065B2  EFDD  F032         	goto	u10261
 17565   0065B6  EFDF  F032         	goto	u10260
 17566   0065BA                     u10261:
 17567   0065BA  EFE1  F032         	goto	l8812
 17568   0065BE                     u10260:
 17569   0065BE  EFA4  F032         	goto	l8792
 17570   0065C2                     l8812:
 17571   0065C2  90D8               	bcf	status,0,c
 17572   0065C4  3269               	rrcf	(___fltol@f1+3)^0,f,c
 17573   0065C6  3268               	rrcf	(___fltol@f1+2)^0,f,c
 17574   0065C8  3267               	rrcf	(___fltol@f1+1)^0,f,c
 17575   0065CA  3266               	rrcf	___fltol@f1^0,f,c
 17576   0065CC  3E6F               	incfsz	___fltol@exp1^0,f,c
 17577   0065CE  EFE1  F032         	goto	l8812
 17578   0065D2  EF03  F033         	goto	l8826
 17579   0065D6                     l8816:
 17580   0065D6  0E1F               	movlw	31
 17581   0065D8  646F               	cpfsgt	___fltol@exp1^0,c
 17582   0065DA  EFF1  F032         	goto	u10271
 17583   0065DE  EFF3  F032         	goto	u10270
 17584   0065E2                     u10271:
 17585   0065E2  EFFB  F032         	goto	l8824
 17586   0065E6                     u10270:
 17587   0065E6  EFA4  F032         	goto	l8792
 17588   0065EA                     l8822:
 17589   0065EA  90D8               	bcf	status,0,c
 17590   0065EC  3666               	rlcf	___fltol@f1^0,f,c
 17591   0065EE  3667               	rlcf	(___fltol@f1+1)^0,f,c
 17592   0065F0  3668               	rlcf	(___fltol@f1+2)^0,f,c
 17593   0065F2  3669               	rlcf	(___fltol@f1+3)^0,f,c
 17594   0065F4  066F               	decf	___fltol@exp1^0,f,c
 17595   0065F6                     l8824:
 17596   0065F6  506F               	movf	___fltol@exp1^0,w,c
 17597   0065F8  A4D8               	btfss	status,2,c
 17598   0065FA  EF01  F033         	goto	u10281
 17599   0065FE  EF03  F033         	goto	u10280
 17600   006602                     u10281:
 17601   006602  EFF5  F032         	goto	l8822
 17602   006606                     u10280:
 17603   006606                     l8826:
 17604   006606  506E               	movf	___fltol@sign1^0,w,c
 17605   006608  B4D8               	btfsc	status,2,c
 17606   00660A  EF09  F033         	goto	u10291
 17607   00660E  EF0B  F033         	goto	u10290
 17608   006612                     u10291:
 17609   006612  EF13  F033         	goto	l8830
 17610   006616                     u10290:
 17611   006616  1E69               	comf	(___fltol@f1+3)^0,f,c
 17612   006618  1E68               	comf	(___fltol@f1+2)^0,f,c
 17613   00661A  1E67               	comf	(___fltol@f1+1)^0,f,c
 17614   00661C  6C66               	negf	___fltol@f1^0,c
 17615   00661E  0E00               	movlw	0
 17616   006620  2267               	addwfc	(___fltol@f1+1)^0,f,c
 17617   006622  2268               	addwfc	(___fltol@f1+2)^0,f,c
 17618   006624  2269               	addwfc	(___fltol@f1+3)^0,f,c
 17619   006626                     l8830:
 17620   006626  C066  F066         	movff	___fltol@f1,?___fltol
 17621   00662A  C067  F067         	movff	___fltol@f1+1,?___fltol+1
 17622   00662E  C068  F068         	movff	___fltol@f1+2,?___fltol+2
 17623   006632  C069  F069         	movff	___fltol@f1+3,?___fltol+3
 17624   006636                     l753:
 17625   006636  0012               	return		;funcret
 17626   006638                     __end_of___fltol:
 17627                           	callstack 0
 17628                           
 17629 ;; *************** function ___fleq *****************
 17630 ;; Defined at:
 17631 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
 17632 ;; Parameters:    Size  Location     Type
 17633 ;;  ff1             4    0[COMRAM] long 
 17634 ;;  ff2             4    4[COMRAM] long 
 17635 ;; Auto vars:     Size  Location     Type
 17636 ;;		None
 17637 ;; Return value:  Size  Location     Type
 17638 ;;		None               void
 17639 ;; Registers used:
 17640 ;;		wreg, status,2, status,0
 17641 ;; Tracked objects:
 17642 ;;		On entry : 0/0
 17643 ;;		On exit  : 0/0
 17644 ;;		Unchanged: 0/0
 17645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17646 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17648 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17649 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17650 ;;Total ram usage:       12 bytes
 17651 ;; Hardware stack levels used: 1
 17652 ;; Hardware stack levels required when called: 1
 17653 ;; This function calls:
 17654 ;;		Nothing
 17655 ;; This function is called by:
 17656 ;;		_atoa
 17657 ;;		_efgtoa
 17658 ;; This function uses a non-reentrant model
 17659 ;;
 17660                           
 17661                           	psect	text60
 17662   006F86                     __ptext60:
 17663                           	callstack 0
 17664   006F86                     ___fleq:
 17665                           	callstack 22
 17666   006F86  0E00               	movlw	0
 17667   006F88  1401               	andwf	___fleq@ff1^0,w,c
 17668   006F8A  6E09               	movwf	??___fleq^0,c
 17669   006F8C  0E00               	movlw	0
 17670   006F8E  1402               	andwf	(___fleq@ff1+1)^0,w,c
 17671   006F90  6E0A               	movwf	(??___fleq+1)^0,c
 17672   006F92  0E80               	movlw	128
 17673   006F94  1403               	andwf	(___fleq@ff1+2)^0,w,c
 17674   006F96  6E0B               	movwf	(??___fleq+2)^0,c
 17675   006F98  0E7F               	movlw	127
 17676   006F9A  1404               	andwf	(___fleq@ff1+3)^0,w,c
 17677   006F9C  6E0C               	movwf	(??___fleq+3)^0,c
 17678   006F9E  5009               	movf	??___fleq^0,w,c
 17679   006FA0  100A               	iorwf	(??___fleq+1)^0,w,c
 17680   006FA2  100B               	iorwf	(??___fleq+2)^0,w,c
 17681   006FA4  100C               	iorwf	(??___fleq+3)^0,w,c
 17682   006FA6  A4D8               	btfss	status,2,c
 17683   006FA8  EFD8  F037         	goto	u5871
 17684   006FAC  EFDA  F037         	goto	u5870
 17685   006FB0                     u5871:
 17686   006FB0  EFE2  F037         	goto	l5828
 17687   006FB4                     u5870:
 17688   006FB4  0E00               	movlw	0
 17689   006FB6  6E01               	movwf	___fleq@ff1^0,c
 17690   006FB8  0E00               	movlw	0
 17691   006FBA  6E02               	movwf	(___fleq@ff1+1)^0,c
 17692   006FBC  0E00               	movlw	0
 17693   006FBE  6E03               	movwf	(___fleq@ff1+2)^0,c
 17694   006FC0  0E00               	movlw	0
 17695   006FC2  6E04               	movwf	(___fleq@ff1+3)^0,c
 17696   006FC4                     l5828:
 17697   006FC4  0E00               	movlw	0
 17698   006FC6  1405               	andwf	___fleq@ff2^0,w,c
 17699   006FC8  6E09               	movwf	??___fleq^0,c
 17700   006FCA  0E00               	movlw	0
 17701   006FCC  1406               	andwf	(___fleq@ff2+1)^0,w,c
 17702   006FCE  6E0A               	movwf	(??___fleq+1)^0,c
 17703   006FD0  0E80               	movlw	128
 17704   006FD2  1407               	andwf	(___fleq@ff2+2)^0,w,c
 17705   006FD4  6E0B               	movwf	(??___fleq+2)^0,c
 17706   006FD6  0E7F               	movlw	127
 17707   006FD8  1408               	andwf	(___fleq@ff2+3)^0,w,c
 17708   006FDA  6E0C               	movwf	(??___fleq+3)^0,c
 17709   006FDC  5009               	movf	??___fleq^0,w,c
 17710   006FDE  100A               	iorwf	(??___fleq+1)^0,w,c
 17711   006FE0  100B               	iorwf	(??___fleq+2)^0,w,c
 17712   006FE2  100C               	iorwf	(??___fleq+3)^0,w,c
 17713   006FE4  A4D8               	btfss	status,2,c
 17714   006FE6  EFF7  F037         	goto	u5881
 17715   006FEA  EFF9  F037         	goto	u5880
 17716   006FEE                     u5881:
 17717   006FEE  EF01  F038         	goto	l5832
 17718   006FF2                     u5880:
 17719   006FF2  0E00               	movlw	0
 17720   006FF4  6E05               	movwf	___fleq@ff2^0,c
 17721   006FF6  0E00               	movlw	0
 17722   006FF8  6E06               	movwf	(___fleq@ff2+1)^0,c
 17723   006FFA  0E00               	movlw	0
 17724   006FFC  6E07               	movwf	(___fleq@ff2+2)^0,c
 17725   006FFE  0E00               	movlw	0
 17726   007000  6E08               	movwf	(___fleq@ff2+3)^0,c
 17727   007002                     l5832:
 17728   007002  5005               	movf	___fleq@ff2^0,w,c
 17729   007004  1801               	xorwf	___fleq@ff1^0,w,c
 17730   007006  E10F               	bnz	u5890
 17731   007008  5006               	movf	(___fleq@ff2+1)^0,w,c
 17732   00700A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 17733   00700C  E10C               	bnz	u5890
 17734   00700E  5007               	movf	(___fleq@ff2+2)^0,w,c
 17735   007010  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 17736   007012  E109               	bnz	u5890
 17737   007014  5008               	movf	(___fleq@ff2+3)^0,w,c
 17738   007016  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 17739   007018  B4D8               	btfsc	status,2,c
 17740   00701A  EF11  F038         	goto	u5891
 17741   00701E  EF13  F038         	goto	u5890
 17742   007022                     u5891:
 17743   007022  EF16  F038         	goto	l5836
 17744   007026                     u5890:
 17745   007026  90D8               	bcf	status,0,c
 17746   007028  EF17  F038         	goto	l715
 17747   00702C                     l5836:
 17748   00702C  80D8               	bsf	status,0,c
 17749   00702E                     l715:
 17750   00702E  0012               	return		;funcret
 17751   007030                     __end_of___fleq:
 17752                           	callstack 0
 17753                           
 17754 ;; *************** function ___awmod *****************
 17755 ;; Defined at:
 17756 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
 17757 ;; Parameters:    Size  Location     Type
 17758 ;;  dividend        2    0[COMRAM] int 
 17759 ;;  divisor         2    2[COMRAM] int 
 17760 ;; Auto vars:     Size  Location     Type
 17761 ;;  sign            1    5[COMRAM] unsigned char 
 17762 ;;  counter         1    4[COMRAM] unsigned char 
 17763 ;; Return value:  Size  Location     Type
 17764 ;;                  2    0[COMRAM] int 
 17765 ;; Registers used:
 17766 ;;		wreg, status,2, status,0
 17767 ;; Tracked objects:
 17768 ;;		On entry : 0/0
 17769 ;;		On exit  : 0/0
 17770 ;;		Unchanged: 0/0
 17771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17772 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17773 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17775 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17776 ;;Total ram usage:        6 bytes
 17777 ;; Hardware stack levels used: 1
 17778 ;; Hardware stack levels required when called: 1
 17779 ;; This function calls:
 17780 ;;		Nothing
 17781 ;; This function is called by:
 17782 ;;		_atoa
 17783 ;;		_efgtoa
 17784 ;; This function uses a non-reentrant model
 17785 ;;
 17786                           
 17787                           	psect	text61
 17788   006ED6                     __ptext61:
 17789                           	callstack 0
 17790   006ED6                     ___awmod:
 17791                           	callstack 22
 17792   006ED6  0E00               	movlw	0
 17793   006ED8  6E06               	movwf	___awmod@sign^0,c
 17794   006EDA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 17795   006EDC  EF74  F037         	goto	u5810
 17796   006EE0  EF72  F037         	goto	u5811
 17797   006EE4                     u5811:
 17798   006EE4  EF7A  F037         	goto	l5796
 17799   006EE8                     u5810:
 17800   006EE8  6C01               	negf	___awmod@dividend^0,c
 17801   006EEA  1E02               	comf	(___awmod@dividend+1)^0,f,c
 17802   006EEC  B0D8               	btfsc	status,0,c
 17803   006EEE  2A02               	incf	(___awmod@dividend+1)^0,f,c
 17804   006EF0  0E01               	movlw	1
 17805   006EF2  6E06               	movwf	___awmod@sign^0,c
 17806   006EF4                     l5796:
 17807   006EF4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 17808   006EF6  EF81  F037         	goto	u5820
 17809   006EFA  EF7F  F037         	goto	u5821
 17810   006EFE                     u5821:
 17811   006EFE  EF85  F037         	goto	l5800
 17812   006F02                     u5820:
 17813   006F02  6C03               	negf	___awmod@divisor^0,c
 17814   006F04  1E04               	comf	(___awmod@divisor+1)^0,f,c
 17815   006F06  B0D8               	btfsc	status,0,c
 17816   006F08  2A04               	incf	(___awmod@divisor+1)^0,f,c
 17817   006F0A                     l5800:
 17818   006F0A  5003               	movf	___awmod@divisor^0,w,c
 17819   006F0C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 17820   006F0E  B4D8               	btfsc	status,2,c
 17821   006F10  EF8C  F037         	goto	u5831
 17822   006F14  EF8E  F037         	goto	u5830
 17823   006F18                     u5831:
 17824   006F18  EFB2  F037         	goto	l5816
 17825   006F1C                     u5830:
 17826   006F1C  0E01               	movlw	1
 17827   006F1E  6E05               	movwf	___awmod@counter^0,c
 17828   006F20  EF96  F037         	goto	l5806
 17829   006F24                     l5804:
 17830   006F24  90D8               	bcf	status,0,c
 17831   006F26  3603               	rlcf	___awmod@divisor^0,f,c
 17832   006F28  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 17833   006F2A  2A05               	incf	___awmod@counter^0,f,c
 17834   006F2C                     l5806:
 17835   006F2C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 17836   006F2E  EF9B  F037         	goto	u5841
 17837   006F32  EF9D  F037         	goto	u5840
 17838   006F36                     u5841:
 17839   006F36  EF92  F037         	goto	l5804
 17840   006F3A                     u5840:
 17841   006F3A                     l5808:
 17842   006F3A  5003               	movf	___awmod@divisor^0,w,c
 17843   006F3C  5C01               	subwf	___awmod@dividend^0,w,c
 17844   006F3E  5004               	movf	(___awmod@divisor+1)^0,w,c
 17845   006F40  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 17846   006F42  A0D8               	btfss	status,0,c
 17847   006F44  EFA6  F037         	goto	u5851
 17848   006F48  EFA8  F037         	goto	u5850
 17849   006F4C                     u5851:
 17850   006F4C  EFAC  F037         	goto	l5812
 17851   006F50                     u5850:
 17852   006F50  5003               	movf	___awmod@divisor^0,w,c
 17853   006F52  5E01               	subwf	___awmod@dividend^0,f,c
 17854   006F54  5004               	movf	(___awmod@divisor+1)^0,w,c
 17855   006F56  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 17856   006F58                     l5812:
 17857   006F58  90D8               	bcf	status,0,c
 17858   006F5A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 17859   006F5C  3203               	rrcf	___awmod@divisor^0,f,c
 17860   006F5E  2E05               	decfsz	___awmod@counter^0,f,c
 17861   006F60  EF9D  F037         	goto	l5808
 17862   006F64                     l5816:
 17863   006F64  5006               	movf	___awmod@sign^0,w,c
 17864   006F66  B4D8               	btfsc	status,2,c
 17865   006F68  EFB8  F037         	goto	u5861
 17866   006F6C  EFBA  F037         	goto	u5860
 17867   006F70                     u5861:
 17868   006F70  EFBE  F037         	goto	l5820
 17869   006F74                     u5860:
 17870   006F74  6C01               	negf	___awmod@dividend^0,c
 17871   006F76  1E02               	comf	(___awmod@dividend+1)^0,f,c
 17872   006F78  B0D8               	btfsc	status,0,c
 17873   006F7A  2A02               	incf	(___awmod@dividend+1)^0,f,c
 17874   006F7C                     l5820:
 17875   006F7C  C001  F001         	movff	___awmod@dividend,?___awmod
 17876   006F80  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 17877   006F84  0012               	return		;funcret
 17878   006F86                     __end_of___awmod:
 17879                           	callstack 0
 17880                           
 17881 ;; *************** function ___awdiv *****************
 17882 ;; Defined at:
 17883 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
 17884 ;; Parameters:    Size  Location     Type
 17885 ;;  dividend        2    0[COMRAM] int 
 17886 ;;  divisor         2    2[COMRAM] int 
 17887 ;; Auto vars:     Size  Location     Type
 17888 ;;  quotient        2    6[COMRAM] int 
 17889 ;;  sign            1    5[COMRAM] unsigned char 
 17890 ;;  counter         1    4[COMRAM] unsigned char 
 17891 ;; Return value:  Size  Location     Type
 17892 ;;                  2    0[COMRAM] int 
 17893 ;; Registers used:
 17894 ;;		wreg, status,2, status,0
 17895 ;; Tracked objects:
 17896 ;;		On entry : 0/0
 17897 ;;		On exit  : 0/0
 17898 ;;		Unchanged: 0/0
 17899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17901 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17903 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17904 ;;Total ram usage:        8 bytes
 17905 ;; Hardware stack levels used: 1
 17906 ;; Hardware stack levels required when called: 1
 17907 ;; This function calls:
 17908 ;;		Nothing
 17909 ;; This function is called by:
 17910 ;;		_atoa
 17911 ;;		_efgtoa
 17912 ;; This function uses a non-reentrant model
 17913 ;;
 17914                           
 17915                           	psect	text62
 17916   006C9C                     __ptext62:
 17917                           	callstack 0
 17918   006C9C                     ___awdiv:
 17919                           	callstack 22
 17920   006C9C  0E00               	movlw	0
 17921   006C9E  6E06               	movwf	___awdiv@sign^0,c
 17922   006CA0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 17923   006CA2  EF57  F036         	goto	u5750
 17924   006CA6  EF55  F036         	goto	u5751
 17925   006CAA                     u5751:
 17926   006CAA  EF5D  F036         	goto	l5752
 17927   006CAE                     u5750:
 17928   006CAE  6C03               	negf	___awdiv@divisor^0,c
 17929   006CB0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 17930   006CB2  B0D8               	btfsc	status,0,c
 17931   006CB4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 17932   006CB6  0E01               	movlw	1
 17933   006CB8  6E06               	movwf	___awdiv@sign^0,c
 17934   006CBA                     l5752:
 17935   006CBA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 17936   006CBC  EF64  F036         	goto	u5760
 17937   006CC0  EF62  F036         	goto	u5761
 17938   006CC4                     u5761:
 17939   006CC4  EF6A  F036         	goto	l5758
 17940   006CC8                     u5760:
 17941   006CC8  6C01               	negf	___awdiv@dividend^0,c
 17942   006CCA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 17943   006CCC  B0D8               	btfsc	status,0,c
 17944   006CCE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 17945   006CD0  0E01               	movlw	1
 17946   006CD2  1A06               	xorwf	___awdiv@sign^0,f,c
 17947   006CD4                     l5758:
 17948   006CD4  0E00               	movlw	0
 17949   006CD6  6E08               	movwf	(___awdiv@quotient+1)^0,c
 17950   006CD8  0E00               	movlw	0
 17951   006CDA  6E07               	movwf	___awdiv@quotient^0,c
 17952   006CDC  5003               	movf	___awdiv@divisor^0,w,c
 17953   006CDE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 17954   006CE0  B4D8               	btfsc	status,2,c
 17955   006CE2  EF75  F036         	goto	u5771
 17956   006CE6  EF77  F036         	goto	u5770
 17957   006CEA                     u5771:
 17958   006CEA  EF9F  F036         	goto	l5780
 17959   006CEE                     u5770:
 17960   006CEE  0E01               	movlw	1
 17961   006CF0  6E05               	movwf	___awdiv@counter^0,c
 17962   006CF2  EF7F  F036         	goto	l5766
 17963   006CF6                     l5764:
 17964   006CF6  90D8               	bcf	status,0,c
 17965   006CF8  3603               	rlcf	___awdiv@divisor^0,f,c
 17966   006CFA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 17967   006CFC  2A05               	incf	___awdiv@counter^0,f,c
 17968   006CFE                     l5766:
 17969   006CFE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 17970   006D00  EF84  F036         	goto	u5781
 17971   006D04  EF86  F036         	goto	u5780
 17972   006D08                     u5781:
 17973   006D08  EF7B  F036         	goto	l5764
 17974   006D0C                     u5780:
 17975   006D0C                     l5768:
 17976   006D0C  90D8               	bcf	status,0,c
 17977   006D0E  3607               	rlcf	___awdiv@quotient^0,f,c
 17978   006D10  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 17979   006D12  5003               	movf	___awdiv@divisor^0,w,c
 17980   006D14  5C01               	subwf	___awdiv@dividend^0,w,c
 17981   006D16  5004               	movf	(___awdiv@divisor+1)^0,w,c
 17982   006D18  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 17983   006D1A  A0D8               	btfss	status,0,c
 17984   006D1C  EF92  F036         	goto	u5791
 17985   006D20  EF94  F036         	goto	u5790
 17986   006D24                     u5791:
 17987   006D24  EF99  F036         	goto	l5776
 17988   006D28                     u5790:
 17989   006D28  5003               	movf	___awdiv@divisor^0,w,c
 17990   006D2A  5E01               	subwf	___awdiv@dividend^0,f,c
 17991   006D2C  5004               	movf	(___awdiv@divisor+1)^0,w,c
 17992   006D2E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 17993   006D30  8007               	bsf	___awdiv@quotient^0,0,c
 17994   006D32                     l5776:
 17995   006D32  90D8               	bcf	status,0,c
 17996   006D34  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 17997   006D36  3203               	rrcf	___awdiv@divisor^0,f,c
 17998   006D38  2E05               	decfsz	___awdiv@counter^0,f,c
 17999   006D3A  EF86  F036         	goto	l5768
 18000   006D3E                     l5780:
 18001   006D3E  5006               	movf	___awdiv@sign^0,w,c
 18002   006D40  B4D8               	btfsc	status,2,c
 18003   006D42  EFA5  F036         	goto	u5801
 18004   006D46  EFA7  F036         	goto	u5800
 18005   006D4A                     u5801:
 18006   006D4A  EFAB  F036         	goto	l5784
 18007   006D4E                     u5800:
 18008   006D4E  6C07               	negf	___awdiv@quotient^0,c
 18009   006D50  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 18010   006D52  B0D8               	btfsc	status,0,c
 18011   006D54  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 18012   006D56                     l5784:
 18013   006D56  C007  F001         	movff	___awdiv@quotient,?___awdiv
 18014   006D5A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 18015   006D5E  0012               	return		;funcret
 18016   006D60                     __end_of___awdiv:
 18017                           	callstack 0
 18018                           
 18019 ;; *************** function _UART1_Send *****************
 18020 ;; Defined at:
 18021 ;;		line 35 in file "functions.c"
 18022 ;; Parameters:    Size  Location     Type
 18023 ;;  data            2    0[COMRAM] PTR const unsigned char 
 18024 ;;		 -> UART1_SendFormatted@buffer(256), 
 18025 ;; Auto vars:     Size  Location     Type
 18026 ;;		None
 18027 ;; Return value:  Size  Location     Type
 18028 ;;                  1    wreg      void 
 18029 ;; Registers used:
 18030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18031 ;; Tracked objects:
 18032 ;;		On entry : 0/0
 18033 ;;		On exit  : 0/0
 18034 ;;		Unchanged: 0/0
 18035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18039 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18040 ;;Total ram usage:        2 bytes
 18041 ;; Hardware stack levels used: 1
 18042 ;; Hardware stack levels required when called: 1
 18043 ;; This function calls:
 18044 ;;		Nothing
 18045 ;; This function is called by:
 18046 ;;		_UART1_SendFormatted
 18047 ;; This function uses a non-reentrant model
 18048 ;;
 18049                           
 18050                           	psect	text63
 18051   007732                     __ptext63:
 18052                           	callstack 0
 18053   007732                     _UART1_Send:
 18054                           	callstack 26
 18055   007732                     
 18056                           ;functions.c: 36:     while (*data != '\0') {
 18057   007732  EFAA  F03B         	goto	l7404
 18058   007736                     l254:
 18059   007736  A2AC               	btfss	172,1,c	;volatile
 18060   007738  EFA0  F03B         	goto	u8491
 18061   00773C  EFA2  F03B         	goto	u8490
 18062   007740                     u8491:
 18063   007740  EF9B  F03B         	goto	l254
 18064   007744                     u8490:
 18065   007744                     
 18066                           ;functions.c: 38:         TXREG1 = *data;
 18067   007744  C001  FFD9         	movff	UART1_Send@data,fsr2l
 18068   007748  C002  FFDA         	movff	UART1_Send@data+1,fsr2h
 18069   00774C  50DF               	movf	indf2,w,c
 18070   00774E  6EAD               	movwf	173,c	;volatile
 18071   007750                     
 18072                           ;functions.c: 39:         ++data;
 18073   007750  4A01               	infsnz	UART1_Send@data^0,f,c
 18074   007752  2A02               	incf	(UART1_Send@data+1)^0,f,c
 18075   007754                     l7404:
 18076                           
 18077                           ;functions.c: 36:     while (*data != '\0') {
 18078   007754  C001  FFD9         	movff	UART1_Send@data,fsr2l
 18079   007758  C002  FFDA         	movff	UART1_Send@data+1,fsr2h
 18080   00775C  50DF               	movf	indf2,w,c
 18081   00775E  A4D8               	btfss	status,2,c
 18082   007760  EFB4  F03B         	goto	u8501
 18083   007764  EFB6  F03B         	goto	u8500
 18084   007768                     u8501:
 18085   007768  EF9B  F03B         	goto	l254
 18086   00776C                     u8500:
 18087   00776C  0012               	return		;funcret
 18088   00776E                     __end_of_UART1_Send:
 18089                           	callstack 0
 18090                           
 18091 ;; *************** function _AbsorptionCoefficentCalc *****************
 18092 ;; Defined at:
 18093 ;;		line 313 in file "functions.c"
 18094 ;; Parameters:    Size  Location     Type
 18095 ;;		None
 18096 ;; Auto vars:     Size  Location     Type
 18097 ;;  i               2   32[BANK0 ] int 
 18098 ;;  j               2   34[BANK0 ] int 
 18099 ;; Return value:  Size  Location     Type
 18100 ;;                  1    wreg      void 
 18101 ;; Registers used:
 18102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18103 ;; Tracked objects:
 18104 ;;		On entry : 0/0
 18105 ;;		On exit  : 0/0
 18106 ;;		Unchanged: 0/0
 18107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18109 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18110 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18111 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18112 ;;Total ram usage:       20 bytes
 18113 ;; Hardware stack levels used: 1
 18114 ;; Hardware stack levels required when called: 3
 18115 ;; This function calls:
 18116 ;;		___fladd
 18117 ;;		___fldiv
 18118 ;;		___flge
 18119 ;;		___flneg
 18120 ;;		___flsub
 18121 ;;		_exp
 18122 ;; This function is called by:
 18123 ;;		_main
 18124 ;; This function uses a non-reentrant model
 18125 ;;
 18126                           
 18127                           	psect	text64
 18128   003226                     __ptext64:
 18129                           	callstack 0
 18130   003226                     _AbsorptionCoefficentCalc:
 18131                           	callstack 27
 18132   003226                     
 18133                           ;functions.c: 314:   for (LED_Color = 0; LED_Color < 2; ++LED_Color) {
 18134   003226  0E00               	movlw	0
 18135   003228  0101               	movlb	1	; () banked
 18136   00322A  6FB3               	movwf	_LED_Color& (0+255),b
 18137   00322C                     l10522:
 18138                           
 18139                           ; BSR set to: 1
 18140   00322C  0E01               	movlw	1
 18141   00322E  65B3               	cpfsgt	_LED_Color& (0+255),b
 18142   003230  EF1C  F019         	goto	u13001
 18143   003234  EF1E  F019         	goto	u13000
 18144   003238                     u13001:
 18145   003238  EF20  F019         	goto	l10526
 18146   00323C                     u13000:
 18147   00323C  EF1E  F01A         	goto	l397
 18148   003240                     l10526:
 18149                           
 18150                           ; BSR set to: 1
 18151                           ;functions.c: 315:     Absorption_Coefficents[LED_Color] = 1 / (1 - exp(-Timer[4][LED_Co
      +                          lor] / 100000));
 18152   003240  0E00               	movlw	0
 18153   003242  6E28               	movwf	___fldiv@a^0,c
 18154   003244  0E50               	movlw	80
 18155   003246  6E29               	movwf	(___fldiv@a+1)^0,c
 18156   003248  0EC3               	movlw	195
 18157   00324A  6E2A               	movwf	(___fldiv@a+2)^0,c
 18158   00324C  0E47               	movlw	71
 18159   00324E  6E2B               	movwf	(___fldiv@a+3)^0,c
 18160   003250  51B3               	movf	_LED_Color& (0+255),w,b
 18161   003252  0D04               	mullw	4
 18162   003254  0E20               	movlw	low (_Timer+32)
 18163   003256  24F3               	addwf	243,w,c
 18164   003258  6ED9               	movwf	fsr2l,c
 18165   00325A  0E01               	movlw	high (_Timer+32)
 18166   00325C  20F4               	addwfc	prodh,w,c
 18167   00325E  6EDA               	movwf	fsr2h,c
 18168   003260  CFDE F001          	movff	postinc2,___flneg@f1
 18169   003264  CFDE F002          	movff	postinc2,___flneg@f1+1
 18170   003268  CFDE F003          	movff	postinc2,___flneg@f1+2
 18171   00326C  CFDE F004          	movff	postinc2,___flneg@f1+3
 18172   003270  ECEF  F03B         	call	___flneg	;wreg free
 18173   003274  C001  F024         	movff	?___flneg,___fldiv@b
 18174   003278  C002  F025         	movff	?___flneg+1,___fldiv@b+1
 18175   00327C  C003  F026         	movff	?___flneg+2,___fldiv@b+2
 18176   003280  C004  F027         	movff	?___flneg+3,___fldiv@b+3
 18177   003284  EC6E  F01F         	call	___fldiv	;wreg free
 18178   003288  C024  F098         	movff	?___fldiv,_AbsorptionCoefficentCalc$1713
 18179   00328C  C025  F099         	movff	?___fldiv+1,_AbsorptionCoefficentCalc$1713+1
 18180   003290  C026  F09A         	movff	?___fldiv+2,_AbsorptionCoefficentCalc$1713+2
 18181   003294  C027  F09B         	movff	?___fldiv+3,_AbsorptionCoefficentCalc$1713+3
 18182   003298                     
 18183                           ;functions.c: 315:     Absorption_Coefficents[LED_Color] = 1 / (1 - exp(-Timer[4][LED_Co
      +                          lor] / 100000));
 18184   003298  C098  F066         	movff	_AbsorptionCoefficentCalc$1713,exp@x
 18185   00329C  C099  F067         	movff	_AbsorptionCoefficentCalc$1713+1,exp@x+1
 18186   0032A0  C09A  F068         	movff	_AbsorptionCoefficentCalc$1713+2,exp@x+2
 18187   0032A4  C09B  F069         	movff	_AbsorptionCoefficentCalc$1713+3,exp@x+3
 18188   0032A8  EC1E  F034         	call	_exp	;wreg free
 18189   0032AC  C066  F078         	movff	?_exp,___flsub@a
 18190   0032B0  C067  F079         	movff	?_exp+1,___flsub@a+1
 18191   0032B4  C068  F07A         	movff	?_exp+2,___flsub@a+2
 18192   0032B8  C069  F07B         	movff	?_exp+3,___flsub@a+3
 18193   0032BC  0E00               	movlw	0
 18194   0032BE  6E74               	movwf	___flsub@b^0,c
 18195   0032C0  0E00               	movlw	0
 18196   0032C2  6E75               	movwf	(___flsub@b+1)^0,c
 18197   0032C4  0E80               	movlw	128
 18198   0032C6  6E76               	movwf	(___flsub@b+2)^0,c
 18199   0032C8  0E3F               	movlw	63
 18200   0032CA  6E77               	movwf	(___flsub@b+3)^0,c
 18201   0032CC  EC54  F03B         	call	___flsub	;wreg free
 18202   0032D0  C074  F09C         	movff	?___flsub,_AbsorptionCoefficentCalc$1714
 18203   0032D4  C075  F09D         	movff	?___flsub+1,_AbsorptionCoefficentCalc$1714+1
 18204   0032D8  C076  F09E         	movff	?___flsub+2,_AbsorptionCoefficentCalc$1714+2
 18205   0032DC  C077  F09F         	movff	?___flsub+3,_AbsorptionCoefficentCalc$1714+3
 18206   0032E0                     
 18207                           ;functions.c: 315:     Absorption_Coefficents[LED_Color] = 1 / (1 - exp(-Timer[4][LED_Co
      +                          lor] / 100000));
 18208   0032E0  0E00               	movlw	0
 18209   0032E2  6E24               	movwf	___fldiv@b^0,c
 18210   0032E4  0E00               	movlw	0
 18211   0032E6  6E25               	movwf	(___fldiv@b+1)^0,c
 18212   0032E8  0E80               	movlw	128
 18213   0032EA  6E26               	movwf	(___fldiv@b+2)^0,c
 18214   0032EC  0E3F               	movlw	63
 18215   0032EE  6E27               	movwf	(___fldiv@b+3)^0,c
 18216   0032F0  C09C  F028         	movff	_AbsorptionCoefficentCalc$1714,___fldiv@a
 18217   0032F4  C09D  F029         	movff	_AbsorptionCoefficentCalc$1714+1,___fldiv@a+1
 18218   0032F8  C09E  F02A         	movff	_AbsorptionCoefficentCalc$1714+2,___fldiv@a+2
 18219   0032FC  C09F  F02B         	movff	_AbsorptionCoefficentCalc$1714+3,___fldiv@a+3
 18220   003300  EC6E  F01F         	call	___fldiv	;wreg free
 18221   003304  0101               	movlb	1	; () banked
 18222   003306  51B3               	movf	_LED_Color& (0+255),w,b
 18223   003308  0D04               	mullw	4
 18224   00330A  0E50               	movlw	low _Absorption_Coefficents
 18225   00330C  24F3               	addwf	243,w,c
 18226   00330E  6ED9               	movwf	fsr2l,c
 18227   003310  0E01               	movlw	high _Absorption_Coefficents
 18228   003312  20F4               	addwfc	prodh,w,c
 18229   003314  6EDA               	movwf	fsr2h,c
 18230   003316  C024  FFDE         	movff	?___fldiv,postinc2
 18231   00331A  C025  FFDE         	movff	?___fldiv+1,postinc2
 18232   00331E  C026  FFDE         	movff	?___fldiv+2,postinc2
 18233   003322  C027  FFDE         	movff	?___fldiv+3,postinc2
 18234   003326                     
 18235                           ; BSR set to: 1
 18236                           ;functions.c: 316:     if (Absorption_Coefficents[LED_Color] > beta_MinMax[1][LED_Color]
      +                          ) {
 18237   003326  51B3               	movf	_LED_Color& (0+255),w,b
 18238   003328  0D04               	mullw	4
 18239   00332A  0E30               	movlw	low (_beta_MinMax+8)
 18240   00332C  24F3               	addwf	243,w,c
 18241   00332E  6ED9               	movwf	fsr2l,c
 18242   003330  0E01               	movlw	high (_beta_MinMax+8)
 18243   003332  20F4               	addwfc	prodh,w,c
 18244   003334  6EDA               	movwf	fsr2h,c
 18245   003336  CFDE F084          	movff	postinc2,___flge@ff1
 18246   00333A  CFDE F085          	movff	postinc2,___flge@ff1+1
 18247   00333E  CFDE F086          	movff	postinc2,___flge@ff1+2
 18248   003342  CFDE F087          	movff	postinc2,___flge@ff1+3
 18249   003346  51B3               	movf	_LED_Color& (0+255),w,b
 18250   003348  0D04               	mullw	4
 18251   00334A  0E50               	movlw	low _Absorption_Coefficents
 18252   00334C  24F3               	addwf	243,w,c
 18253   00334E  6ED9               	movwf	fsr2l,c
 18254   003350  0E01               	movlw	high _Absorption_Coefficents
 18255   003352  20F4               	addwfc	prodh,w,c
 18256   003354  6EDA               	movwf	fsr2h,c
 18257   003356  CFDE F088          	movff	postinc2,___flge@ff2
 18258   00335A  CFDE F089          	movff	postinc2,___flge@ff2+1
 18259   00335E  CFDE F08A          	movff	postinc2,___flge@ff2+2
 18260   003362  CFDE F08B          	movff	postinc2,___flge@ff2+3
 18261   003366  EC1C  F033         	call	___flge	;wreg free
 18262   00336A  0100               	movlb	0	; () banked
 18263   00336C  B0D8               	btfsc	status,0,c
 18264   00336E  EFBB  F019         	goto	u13011
 18265   003372  EFBD  F019         	goto	u13010
 18266   003376                     u13011:
 18267   003376  EFD6  F019         	goto	l10536
 18268   00337A                     u13010:
 18269   00337A                     
 18270                           ; BSR set to: 0
 18271                           ;functions.c: 317:       beta_MinMax[1][LED_Color] = Absorption_Coefficents[LED_Color];
 18272   00337A  0101               	movlb	1	; () banked
 18273   00337C  51B3               	movf	_LED_Color& (0+255),w,b
 18274   00337E  0D04               	mullw	4
 18275   003380  0E50               	movlw	low _Absorption_Coefficents
 18276   003382  24F3               	addwf	243,w,c
 18277   003384  6ED9               	movwf	fsr2l,c
 18278   003386  0E01               	movlw	high _Absorption_Coefficents
 18279   003388  20F4               	addwfc	prodh,w,c
 18280   00338A  6EDA               	movwf	fsr2h,c
 18281   00338C  51B3               	movf	_LED_Color& (0+255),w,b
 18282   00338E  0D04               	mullw	4
 18283   003390  0E30               	movlw	low (_beta_MinMax+8)
 18284   003392  24F3               	addwf	243,w,c
 18285   003394  6EE1               	movwf	fsr1l,c
 18286   003396  0E01               	movlw	high (_beta_MinMax+8)
 18287   003398  20F4               	addwfc	prodh,w,c
 18288   00339A  6EE2               	movwf	fsr1h,c
 18289   00339C  CFDE FFE6          	movff	postinc2,postinc1
 18290   0033A0  CFDE FFE6          	movff	postinc2,postinc1
 18291   0033A4  CFDE FFE6          	movff	postinc2,postinc1
 18292   0033A8  CFDE FFE6          	movff	postinc2,postinc1
 18293   0033AC                     l10536:
 18294                           
 18295                           ;functions.c: 319:     if (Absorption_Coefficents[LED_Color] < beta_MinMax[0][LED_Color]
      +                          ) {
 18296   0033AC  0101               	movlb	1	; () banked
 18297   0033AE  51B3               	movf	_LED_Color& (0+255),w,b
 18298   0033B0  0D04               	mullw	4
 18299   0033B2  0E50               	movlw	low _Absorption_Coefficents
 18300   0033B4  24F3               	addwf	243,w,c
 18301   0033B6  6ED9               	movwf	fsr2l,c
 18302   0033B8  0E01               	movlw	high _Absorption_Coefficents
 18303   0033BA  20F4               	addwfc	prodh,w,c
 18304   0033BC  6EDA               	movwf	fsr2h,c
 18305   0033BE  CFDE F084          	movff	postinc2,___flge@ff1
 18306   0033C2  CFDE F085          	movff	postinc2,___flge@ff1+1
 18307   0033C6  CFDE F086          	movff	postinc2,___flge@ff1+2
 18308   0033CA  CFDE F087          	movff	postinc2,___flge@ff1+3
 18309   0033CE  51B3               	movf	_LED_Color& (0+255),w,b
 18310   0033D0  0D04               	mullw	4
 18311   0033D2  0E28               	movlw	low _beta_MinMax
 18312   0033D4  24F3               	addwf	243,w,c
 18313   0033D6  6ED9               	movwf	fsr2l,c
 18314   0033D8  0E01               	movlw	high _beta_MinMax
 18315   0033DA  20F4               	addwfc	prodh,w,c
 18316   0033DC  6EDA               	movwf	fsr2h,c
 18317   0033DE  CFDE F088          	movff	postinc2,___flge@ff2
 18318   0033E2  CFDE F089          	movff	postinc2,___flge@ff2+1
 18319   0033E6  CFDE F08A          	movff	postinc2,___flge@ff2+2
 18320   0033EA  CFDE F08B          	movff	postinc2,___flge@ff2+3
 18321   0033EE  EC1C  F033         	call	___flge	;wreg free
 18322   0033F2  0100               	movlb	0	; () banked
 18323   0033F4  B0D8               	btfsc	status,0,c
 18324   0033F6  EFFF  F019         	goto	u13021
 18325   0033FA  EF01  F01A         	goto	u13020
 18326   0033FE                     u13021:
 18327   0033FE  EF1A  F01A         	goto	l10540
 18328   003402                     u13020:
 18329   003402                     
 18330                           ; BSR set to: 0
 18331                           ;functions.c: 320:       beta_MinMax[0][LED_Color] = Absorption_Coefficents[LED_Color];
 18332   003402  0101               	movlb	1	; () banked
 18333   003404  51B3               	movf	_LED_Color& (0+255),w,b
 18334   003406  0D04               	mullw	4
 18335   003408  0E50               	movlw	low _Absorption_Coefficents
 18336   00340A  24F3               	addwf	243,w,c
 18337   00340C  6ED9               	movwf	fsr2l,c
 18338   00340E  0E01               	movlw	high _Absorption_Coefficents
 18339   003410  20F4               	addwfc	prodh,w,c
 18340   003412  6EDA               	movwf	fsr2h,c
 18341   003414  51B3               	movf	_LED_Color& (0+255),w,b
 18342   003416  0D04               	mullw	4
 18343   003418  0E28               	movlw	low _beta_MinMax
 18344   00341A  24F3               	addwf	243,w,c
 18345   00341C  6EE1               	movwf	fsr1l,c
 18346   00341E  0E01               	movlw	high _beta_MinMax
 18347   003420  20F4               	addwfc	prodh,w,c
 18348   003422  6EE2               	movwf	fsr1h,c
 18349   003424  CFDE FFE6          	movff	postinc2,postinc1
 18350   003428  CFDE FFE6          	movff	postinc2,postinc1
 18351   00342C  CFDE FFE6          	movff	postinc2,postinc1
 18352   003430  CFDE FFE6          	movff	postinc2,postinc1
 18353   003434                     l10540:
 18354                           
 18355                           ;functions.c: 322:   }
 18356   003434  0101               	movlb	1	; () banked
 18357   003436  2BB3               	incf	_LED_Color& (0+255),f,b
 18358   003438  EF16  F019         	goto	l10522
 18359   00343C                     l397:
 18360                           
 18361                           ; BSR set to: 1
 18362                           ;functions.c: 323:   if (count % 2 == 0) {
 18363   00343C  B1A0               	btfsc	_count& (0+255),0,b
 18364   00343E  EF23  F01A         	goto	u13031
 18365   003442  EF25  F01A         	goto	u13030
 18366   003446                     u13031:
 18367   003446  EF3F  F01B         	goto	l405
 18368   00344A                     u13030:
 18369   00344A                     
 18370                           ; BSR set to: 1
 18371                           ;functions.c: 324:     for (int j = 0; j < 2; ++j) {
 18372   00344A  0E00               	movlw	0
 18373   00344C  0100               	movlb	0	; () banked
 18374   00344E  6FA3               	movwf	(AbsorptionCoefficentCalc@j+1)& (0+255),b
 18375   003450  0E00               	movlw	0
 18376   003452  6FA2               	movwf	AbsorptionCoefficentCalc@j& (0+255),b
 18377   003454                     l10550:
 18378                           
 18379                           ; BSR set to: 0
 18380                           ;functions.c: 325:       Last_beta[count / 2 % 32][j] = Absorption_Coefficents[j];
 18381   003454  0E50               	movlw	low _Absorption_Coefficents
 18382   003456  6F90               	movwf	??_AbsorptionCoefficentCalc& (0+255),b
 18383   003458  0E01               	movlw	high _Absorption_Coefficents
 18384   00345A  6F91               	movwf	(??_AbsorptionCoefficentCalc+1)& (0+255),b
 18385   00345C  90D8               	bcf	status,0,c
 18386   00345E  35A2               	rlcf	AbsorptionCoefficentCalc@j& (0+255),w,b
 18387   003460  6ED9               	movwf	fsr2l,c
 18388   003462  35A3               	rlcf	(AbsorptionCoefficentCalc@j+1)& (0+255),w,b
 18389   003464  6EDA               	movwf	fsr2h,c
 18390   003466  90D8               	bcf	status,0,c
 18391   003468  36D9               	rlcf	fsr2l,f,c
 18392   00346A  36DA               	rlcf	fsr2h,f,c
 18393   00346C  5190               	movf	??_AbsorptionCoefficentCalc& (0+255),w,b
 18394   00346E  26D9               	addwf	fsr2l,f,c
 18395   003470  5191               	movf	(??_AbsorptionCoefficentCalc+1)& (0+255),w,b
 18396   003472  22DA               	addwfc	fsr2h,f,c
 18397   003474  C1A0  F092         	movff	_count,??_AbsorptionCoefficentCalc+2
 18398   003478  C1A1  F093         	movff	_count+1,??_AbsorptionCoefficentCalc+3
 18399   00347C  C1A2  F094         	movff	_count+2,??_AbsorptionCoefficentCalc+4
 18400   003480  C1A3  F095         	movff	_count+3,??_AbsorptionCoefficentCalc+5
 18401   003484  90D8               	bcf	status,0,c
 18402   003486  3395               	rrcf	(??_AbsorptionCoefficentCalc+5)& (0+255),f,b
 18403   003488  3394               	rrcf	(??_AbsorptionCoefficentCalc+4)& (0+255),f,b
 18404   00348A  3393               	rrcf	(??_AbsorptionCoefficentCalc+3)& (0+255),f,b
 18405   00348C  3392               	rrcf	(??_AbsorptionCoefficentCalc+2)& (0+255),f,b
 18406   00348E  0E1F               	movlw	31
 18407   003490  1792               	andwf	(??_AbsorptionCoefficentCalc+2)& (0+255),f,b
 18408   003492  0E00               	movlw	0
 18409   003494  1793               	andwf	(??_AbsorptionCoefficentCalc+3)& (0+255),f,b
 18410   003496  90D8               	bcf	status,0,c
 18411   003498  3792               	rlcf	(??_AbsorptionCoefficentCalc+2)& (0+255),f,b
 18412   00349A  3793               	rlcf	(??_AbsorptionCoefficentCalc+3)& (0+255),f,b
 18413   00349C  90D8               	bcf	status,0,c
 18414   00349E  3792               	rlcf	(??_AbsorptionCoefficentCalc+2)& (0+255),f,b
 18415   0034A0  3793               	rlcf	(??_AbsorptionCoefficentCalc+3)& (0+255),f,b
 18416   0034A2  90D8               	bcf	status,0,c
 18417   0034A4  3792               	rlcf	(??_AbsorptionCoefficentCalc+2)& (0+255),f,b
 18418   0034A6  3793               	rlcf	(??_AbsorptionCoefficentCalc+3)& (0+255),f,b
 18419   0034A8  0E00               	movlw	low _Last_beta
 18420   0034AA  2592               	addwf	(??_AbsorptionCoefficentCalc+2)& (0+255),w,b
 18421   0034AC  6F96               	movwf	(??_AbsorptionCoefficentCalc+6)& (0+255),b
 18422   0034AE  0E04               	movlw	high _Last_beta
 18423   0034B0  2193               	addwfc	(??_AbsorptionCoefficentCalc+3)& (0+255),w,b
 18424   0034B2  6F97               	movwf	(??_AbsorptionCoefficentCalc+7)& (0+255),b
 18425   0034B4  90D8               	bcf	status,0,c
 18426   0034B6  35A2               	rlcf	AbsorptionCoefficentCalc@j& (0+255),w,b
 18427   0034B8  6EE1               	movwf	fsr1l,c
 18428   0034BA  35A3               	rlcf	(AbsorptionCoefficentCalc@j+1)& (0+255),w,b
 18429   0034BC  6EE2               	movwf	fsr1h,c
 18430   0034BE  90D8               	bcf	status,0,c
 18431   0034C0  36E1               	rlcf	fsr1l,f,c
 18432   0034C2  36E2               	rlcf	fsr1h,f,c
 18433   0034C4  5196               	movf	(??_AbsorptionCoefficentCalc+6)& (0+255),w,b
 18434   0034C6  26E1               	addwf	fsr1l,f,c
 18435   0034C8  5197               	movf	(??_AbsorptionCoefficentCalc+7)& (0+255),w,b
 18436   0034CA  22E2               	addwfc	fsr1h,f,c
 18437   0034CC  CFDE FFE6          	movff	postinc2,postinc1
 18438   0034D0  CFDE FFE6          	movff	postinc2,postinc1
 18439   0034D4  CFDE FFE6          	movff	postinc2,postinc1
 18440   0034D8  CFDE FFE6          	movff	postinc2,postinc1
 18441   0034DC                     
 18442                           ; BSR set to: 0
 18443                           ;functions.c: 326:       beta_Average[j] = 0;
 18444   0034DC  0E48               	movlw	low _beta_Average
 18445   0034DE  6F90               	movwf	??_AbsorptionCoefficentCalc& (0+255),b
 18446   0034E0  0E01               	movlw	high _beta_Average
 18447   0034E2  6F91               	movwf	(??_AbsorptionCoefficentCalc+1)& (0+255),b
 18448   0034E4  90D8               	bcf	status,0,c
 18449   0034E6  35A2               	rlcf	AbsorptionCoefficentCalc@j& (0+255),w,b
 18450   0034E8  6ED9               	movwf	fsr2l,c
 18451   0034EA  35A3               	rlcf	(AbsorptionCoefficentCalc@j+1)& (0+255),w,b
 18452   0034EC  6EDA               	movwf	fsr2h,c
 18453   0034EE  90D8               	bcf	status,0,c
 18454   0034F0  36D9               	rlcf	fsr2l,f,c
 18455   0034F2  36DA               	rlcf	fsr2h,f,c
 18456   0034F4  5190               	movf	??_AbsorptionCoefficentCalc& (0+255),w,b
 18457   0034F6  26D9               	addwf	fsr2l,f,c
 18458   0034F8  5191               	movf	(??_AbsorptionCoefficentCalc+1)& (0+255),w,b
 18459   0034FA  22DA               	addwfc	fsr2h,f,c
 18460   0034FC  0E00               	movlw	0
 18461   0034FE  6EDE               	movwf	postinc2,c
 18462   003500  0E00               	movlw	0
 18463   003502  6EDE               	movwf	postinc2,c
 18464   003504  0E00               	movlw	0
 18465   003506  6EDE               	movwf	postinc2,c
 18466   003508  0E00               	movlw	0
 18467   00350A  6EDD               	movwf	postdec2,c
 18468   00350C                     
 18469                           ; BSR set to: 0
 18470                           ;functions.c: 327:       for (int i = 0; i < 32; ++i) {
 18471   00350C  0E00               	movlw	0
 18472   00350E  6FA1               	movwf	(AbsorptionCoefficentCalc@i+1)& (0+255),b
 18473   003510  0E00               	movlw	0
 18474   003512  6FA0               	movwf	AbsorptionCoefficentCalc@i& (0+255),b
 18475   003514                     l10560:
 18476                           
 18477                           ; BSR set to: 0
 18478                           ;functions.c: 328:         beta_Average[j] += Last_beta[i][j];
 18479   003514  0E48               	movlw	low _beta_Average
 18480   003516  6F90               	movwf	??_AbsorptionCoefficentCalc& (0+255),b
 18481   003518  0E01               	movlw	high _beta_Average
 18482   00351A  6F91               	movwf	(??_AbsorptionCoefficentCalc+1)& (0+255),b
 18483   00351C  90D8               	bcf	status,0,c
 18484   00351E  35A2               	rlcf	AbsorptionCoefficentCalc@j& (0+255),w,b
 18485   003520  6ED9               	movwf	fsr2l,c
 18486   003522  35A3               	rlcf	(AbsorptionCoefficentCalc@j+1)& (0+255),w,b
 18487   003524  6EDA               	movwf	fsr2h,c
 18488   003526  90D8               	bcf	status,0,c
 18489   003528  36D9               	rlcf	fsr2l,f,c
 18490   00352A  36DA               	rlcf	fsr2h,f,c
 18491   00352C  5190               	movf	??_AbsorptionCoefficentCalc& (0+255),w,b
 18492   00352E  26D9               	addwf	fsr2l,f,c
 18493   003530  5191               	movf	(??_AbsorptionCoefficentCalc+1)& (0+255),w,b
 18494   003532  22DA               	addwfc	fsr2h,f,c
 18495   003534  CFDE F056          	movff	postinc2,___fladd@b
 18496   003538  CFDE F057          	movff	postinc2,___fladd@b+1
 18497   00353C  CFDE F058          	movff	postinc2,___fladd@b+2
 18498   003540  CFDE F059          	movff	postinc2,___fladd@b+3
 18499   003544  C0A0  F092         	movff	AbsorptionCoefficentCalc@i,??_AbsorptionCoefficentCalc+2
 18500   003548  C0A1  F093         	movff	AbsorptionCoefficentCalc@i+1,??_AbsorptionCoefficentCalc+3
 18501   00354C  90D8               	bcf	status,0,c
 18502   00354E  3792               	rlcf	(??_AbsorptionCoefficentCalc+2)& (0+255),f,b
 18503   003550  3793               	rlcf	(??_AbsorptionCoefficentCalc+3)& (0+255),f,b
 18504   003552  90D8               	bcf	status,0,c
 18505   003554  3792               	rlcf	(??_AbsorptionCoefficentCalc+2)& (0+255),f,b
 18506   003556  3793               	rlcf	(??_AbsorptionCoefficentCalc+3)& (0+255),f,b
 18507   003558  90D8               	bcf	status,0,c
 18508   00355A  3792               	rlcf	(??_AbsorptionCoefficentCalc+2)& (0+255),f,b
 18509   00355C  3793               	rlcf	(??_AbsorptionCoefficentCalc+3)& (0+255),f,b
 18510   00355E  0E00               	movlw	low _Last_beta
 18511   003560  2592               	addwf	(??_AbsorptionCoefficentCalc+2)& (0+255),w,b
 18512   003562  6F94               	movwf	(??_AbsorptionCoefficentCalc+4)& (0+255),b
 18513   003564  0E04               	movlw	high _Last_beta
 18514   003566  2193               	addwfc	(??_AbsorptionCoefficentCalc+3)& (0+255),w,b
 18515   003568  6F95               	movwf	(??_AbsorptionCoefficentCalc+5)& (0+255),b
 18516   00356A  90D8               	bcf	status,0,c
 18517   00356C  35A2               	rlcf	AbsorptionCoefficentCalc@j& (0+255),w,b
 18518   00356E  6ED9               	movwf	fsr2l,c
 18519   003570  35A3               	rlcf	(AbsorptionCoefficentCalc@j+1)& (0+255),w,b
 18520   003572  6EDA               	movwf	fsr2h,c
 18521   003574  90D8               	bcf	status,0,c
 18522   003576  36D9               	rlcf	fsr2l,f,c
 18523   003578  36DA               	rlcf	fsr2h,f,c
 18524   00357A  5194               	movf	(??_AbsorptionCoefficentCalc+4)& (0+255),w,b
 18525   00357C  26D9               	addwf	fsr2l,f,c
 18526   00357E  5195               	movf	(??_AbsorptionCoefficentCalc+5)& (0+255),w,b
 18527   003580  22DA               	addwfc	fsr2h,f,c
 18528   003582  CFDE F05A          	movff	postinc2,___fladd@a
 18529   003586  CFDE F05B          	movff	postinc2,___fladd@a+1
 18530   00358A  CFDE F05C          	movff	postinc2,___fladd@a+2
 18531   00358E  CFDE F05D          	movff	postinc2,___fladd@a+3
 18532   003592  ECB3  F016         	call	___fladd	;wreg free
 18533   003596  0E48               	movlw	low _beta_Average
 18534   003598  0100               	movlb	0	; () banked
 18535   00359A  6F96               	movwf	(??_AbsorptionCoefficentCalc+6)& (0+255),b
 18536   00359C  0E01               	movlw	high _beta_Average
 18537   00359E  6F97               	movwf	(??_AbsorptionCoefficentCalc+7)& (0+255),b
 18538   0035A0  90D8               	bcf	status,0,c
 18539   0035A2  35A2               	rlcf	AbsorptionCoefficentCalc@j& (0+255),w,b
 18540   0035A4  6ED9               	movwf	fsr2l,c
 18541   0035A6  35A3               	rlcf	(AbsorptionCoefficentCalc@j+1)& (0+255),w,b
 18542   0035A8  6EDA               	movwf	fsr2h,c
 18543   0035AA  90D8               	bcf	status,0,c
 18544   0035AC  36D9               	rlcf	fsr2l,f,c
 18545   0035AE  36DA               	rlcf	fsr2h,f,c
 18546   0035B0  5196               	movf	(??_AbsorptionCoefficentCalc+6)& (0+255),w,b
 18547   0035B2  26D9               	addwf	fsr2l,f,c
 18548   0035B4  5197               	movf	(??_AbsorptionCoefficentCalc+7)& (0+255),w,b
 18549   0035B6  22DA               	addwfc	fsr2h,f,c
 18550   0035B8  C056  FFDE         	movff	?___fladd,postinc2
 18551   0035BC  C057  FFDE         	movff	?___fladd+1,postinc2
 18552   0035C0  C058  FFDE         	movff	?___fladd+2,postinc2
 18553   0035C4  C059  FFDE         	movff	?___fladd+3,postinc2
 18554   0035C8                     
 18555                           ; BSR set to: 0
 18556                           ;functions.c: 329:       }
 18557   0035C8  4BA0               	infsnz	AbsorptionCoefficentCalc@i& (0+255),f,b
 18558   0035CA  2BA1               	incf	(AbsorptionCoefficentCalc@i+1)& (0+255),f,b
 18559   0035CC                     
 18560                           ; BSR set to: 0
 18561   0035CC  BFA1               	btfsc	(AbsorptionCoefficentCalc@i+1)& (0+255),7,b
 18562   0035CE  EFF2  F01A         	goto	u13041
 18563   0035D2  51A1               	movf	(AbsorptionCoefficentCalc@i+1)& (0+255),w,b
 18564   0035D4  E109               	bnz	u13040
 18565   0035D6  0E20               	movlw	32
 18566   0035D8  5DA0               	subwf	AbsorptionCoefficentCalc@i& (0+255),w,b
 18567   0035DA  A0D8               	btfss	status,0,c
 18568   0035DC  EFF2  F01A         	goto	u13041
 18569   0035E0  EFF4  F01A         	goto	u13040
 18570   0035E4                     u13041:
 18571   0035E4  EF8A  F01A         	goto	l10560
 18572   0035E8                     u13040:
 18573   0035E8                     
 18574                           ; BSR set to: 0
 18575                           ;functions.c: 330:       beta_Average[j] /= 32;
 18576   0035E8  0E48               	movlw	low _beta_Average
 18577   0035EA  6F90               	movwf	??_AbsorptionCoefficentCalc& (0+255),b
 18578   0035EC  0E01               	movlw	high _beta_Average
 18579   0035EE  6F91               	movwf	(??_AbsorptionCoefficentCalc+1)& (0+255),b
 18580   0035F0  90D8               	bcf	status,0,c
 18581   0035F2  35A2               	rlcf	AbsorptionCoefficentCalc@j& (0+255),w,b
 18582   0035F4  6ED9               	movwf	fsr2l,c
 18583   0035F6  35A3               	rlcf	(AbsorptionCoefficentCalc@j+1)& (0+255),w,b
 18584   0035F8  6EDA               	movwf	fsr2h,c
 18585   0035FA  90D8               	bcf	status,0,c
 18586   0035FC  36D9               	rlcf	fsr2l,f,c
 18587   0035FE  36DA               	rlcf	fsr2h,f,c
 18588   003600  5190               	movf	??_AbsorptionCoefficentCalc& (0+255),w,b
 18589   003602  26D9               	addwf	fsr2l,f,c
 18590   003604  5191               	movf	(??_AbsorptionCoefficentCalc+1)& (0+255),w,b
 18591   003606  22DA               	addwfc	fsr2h,f,c
 18592   003608  CFDE F024          	movff	postinc2,___fldiv@b
 18593   00360C  CFDE F025          	movff	postinc2,___fldiv@b+1
 18594   003610  CFDE F026          	movff	postinc2,___fldiv@b+2
 18595   003614  CFDE F027          	movff	postinc2,___fldiv@b+3
 18596   003618  0E00               	movlw	0
 18597   00361A  6E28               	movwf	___fldiv@a^0,c
 18598   00361C  0E00               	movlw	0
 18599   00361E  6E29               	movwf	(___fldiv@a+1)^0,c
 18600   003620  0E00               	movlw	0
 18601   003622  6E2A               	movwf	(___fldiv@a+2)^0,c
 18602   003624  0E42               	movlw	66
 18603   003626  6E2B               	movwf	(___fldiv@a+3)^0,c
 18604   003628  EC6E  F01F         	call	___fldiv	;wreg free
 18605   00362C  0E48               	movlw	low _beta_Average
 18606   00362E  0100               	movlb	0	; () banked
 18607   003630  6F92               	movwf	(??_AbsorptionCoefficentCalc+2)& (0+255),b
 18608   003632  0E01               	movlw	high _beta_Average
 18609   003634  6F93               	movwf	(??_AbsorptionCoefficentCalc+3)& (0+255),b
 18610   003636  90D8               	bcf	status,0,c
 18611   003638  35A2               	rlcf	AbsorptionCoefficentCalc@j& (0+255),w,b
 18612   00363A  6ED9               	movwf	fsr2l,c
 18613   00363C  35A3               	rlcf	(AbsorptionCoefficentCalc@j+1)& (0+255),w,b
 18614   00363E  6EDA               	movwf	fsr2h,c
 18615   003640  90D8               	bcf	status,0,c
 18616   003642  36D9               	rlcf	fsr2l,f,c
 18617   003644  36DA               	rlcf	fsr2h,f,c
 18618   003646  5192               	movf	(??_AbsorptionCoefficentCalc+2)& (0+255),w,b
 18619   003648  26D9               	addwf	fsr2l,f,c
 18620   00364A  5193               	movf	(??_AbsorptionCoefficentCalc+3)& (0+255),w,b
 18621   00364C  22DA               	addwfc	fsr2h,f,c
 18622   00364E  C024  FFDE         	movff	?___fldiv,postinc2
 18623   003652  C025  FFDE         	movff	?___fldiv+1,postinc2
 18624   003656  C026  FFDE         	movff	?___fldiv+2,postinc2
 18625   00365A  C027  FFDE         	movff	?___fldiv+3,postinc2
 18626   00365E                     
 18627                           ; BSR set to: 0
 18628                           ;functions.c: 331:     }
 18629   00365E  4BA2               	infsnz	AbsorptionCoefficentCalc@j& (0+255),f,b
 18630   003660  2BA3               	incf	(AbsorptionCoefficentCalc@j+1)& (0+255),f,b
 18631   003662                     
 18632                           ; BSR set to: 0
 18633   003662  BFA3               	btfsc	(AbsorptionCoefficentCalc@j+1)& (0+255),7,b
 18634   003664  EF3D  F01B         	goto	u13051
 18635   003668  51A3               	movf	(AbsorptionCoefficentCalc@j+1)& (0+255),w,b
 18636   00366A  E109               	bnz	u13050
 18637   00366C  0E02               	movlw	2
 18638   00366E  5DA2               	subwf	AbsorptionCoefficentCalc@j& (0+255),w,b
 18639   003670  A0D8               	btfss	status,0,c
 18640   003672  EF3D  F01B         	goto	u13051
 18641   003676  EF3F  F01B         	goto	u13050
 18642   00367A                     u13051:
 18643   00367A  EF2A  F01A         	goto	l10550
 18644   00367E                     u13050:
 18645   00367E                     l405:
 18646   00367E  0012               	return		;funcret
 18647   003680                     __end_of_AbsorptionCoefficentCalc:
 18648                           	callstack 0
 18649                           
 18650 ;; *************** function _exp *****************
 18651 ;; Defined at:
 18652 ;;		line 7 in file "functions.c"
 18653 ;; Parameters:    Size  Location     Type
 18654 ;;  x               4  101[COMRAM] float 
 18655 ;; Auto vars:     Size  Location     Type
 18656 ;;  i               2  113[COMRAM] int 
 18657 ;;  term            4  109[COMRAM] float 
 18658 ;;  result          4  105[COMRAM] float 
 18659 ;; Return value:  Size  Location     Type
 18660 ;;                  4  101[COMRAM] float 
 18661 ;; Registers used:
 18662 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18663 ;; Tracked objects:
 18664 ;;		On entry : 0/0
 18665 ;;		On exit  : 0/0
 18666 ;;		Unchanged: 0/0
 18667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18669 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18671 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18672 ;;Total ram usage:       14 bytes
 18673 ;; Hardware stack levels used: 1
 18674 ;; Hardware stack levels required when called: 2
 18675 ;; This function calls:
 18676 ;;		___fladd
 18677 ;;		___fldiv
 18678 ;;		___flmul
 18679 ;;		___xxtofl
 18680 ;; This function is called by:
 18681 ;;		_AbsorptionCoefficentCalc
 18682 ;; This function uses a non-reentrant model
 18683 ;;
 18684                           
 18685                           	psect	text65
 18686   00683C                     __ptext65:
 18687                           	callstack 0
 18688   00683C                     _exp:
 18689                           	callstack 27
 18690   00683C                     
 18691                           ;functions.c: 8:     float result = 1.0f;
 18692   00683C  0E00               	movlw	0
 18693   00683E  6E6A               	movwf	exp@result^0,c
 18694   006840  0E00               	movlw	0
 18695   006842  6E6B               	movwf	(exp@result+1)^0,c
 18696   006844  0E80               	movlw	128
 18697   006846  6E6C               	movwf	(exp@result+2)^0,c
 18698   006848  0E3F               	movlw	63
 18699   00684A  6E6D               	movwf	(exp@result+3)^0,c
 18700                           
 18701                           ;functions.c: 9:     float term = 1.0f;
 18702   00684C  0E00               	movlw	0
 18703   00684E  6E6E               	movwf	exp@term^0,c
 18704   006850  0E00               	movlw	0
 18705   006852  6E6F               	movwf	(exp@term+1)^0,c
 18706   006854  0E80               	movlw	128
 18707   006856  6E70               	movwf	(exp@term+2)^0,c
 18708   006858  0E3F               	movlw	63
 18709   00685A  6E71               	movwf	(exp@term+3)^0,c
 18710                           
 18711                           ;functions.c: 11:     for (int i = 1; i < 10; ++i) {
 18712   00685C  0E00               	movlw	0
 18713   00685E  6E73               	movwf	(exp@i+1)^0,c
 18714   006860  0E01               	movlw	1
 18715   006862  6E72               	movwf	exp@i^0,c
 18716   006864                     l10452:
 18717                           
 18718                           ;functions.c: 12:         term *= x / i;
 18719   006864  C06E  F03D         	movff	exp@term,___flmul@b
 18720   006868  C06F  F03E         	movff	exp@term+1,___flmul@b+1
 18721   00686C  C070  F03F         	movff	exp@term+2,___flmul@b+2
 18722   006870  C071  F040         	movff	exp@term+3,___flmul@b+3
 18723   006874  C072  F016         	movff	exp@i,___xxtofl@val
 18724   006878  C073  F017         	movff	exp@i+1,___xxtofl@val+1
 18725   00687C  0E00               	movlw	0
 18726   00687E  BE17               	btfsc	(___xxtofl@val+1)^0,7,c
 18727   006880  0EFF               	movlw	-1
 18728   006882  6E18               	movwf	(___xxtofl@val+2)^0,c
 18729   006884  6E19               	movwf	(___xxtofl@val+3)^0,c
 18730   006886  0E01               	movlw	1
 18731   006888  EC06  F02B         	call	___xxtofl
 18732   00688C  C016  F028         	movff	?___xxtofl,___fldiv@a
 18733   006890  C017  F029         	movff	?___xxtofl+1,___fldiv@a+1
 18734   006894  C018  F02A         	movff	?___xxtofl+2,___fldiv@a+2
 18735   006898  C019  F02B         	movff	?___xxtofl+3,___fldiv@a+3
 18736   00689C  C066  F024         	movff	exp@x,___fldiv@b
 18737   0068A0  C067  F025         	movff	exp@x+1,___fldiv@b+1
 18738   0068A4  C068  F026         	movff	exp@x+2,___fldiv@b+2
 18739   0068A8  C069  F027         	movff	exp@x+3,___fldiv@b+3
 18740   0068AC  EC6E  F01F         	call	___fldiv	;wreg free
 18741   0068B0  C024  F041         	movff	?___fldiv,___flmul@a
 18742   0068B4  C025  F042         	movff	?___fldiv+1,___flmul@a+1
 18743   0068B8  C026  F043         	movff	?___fldiv+2,___flmul@a+2
 18744   0068BC  C027  F044         	movff	?___fldiv+3,___flmul@a+3
 18745   0068C0  EC59  F01D         	call	___flmul	;wreg free
 18746   0068C4  C03D  F06E         	movff	?___flmul,exp@term
 18747   0068C8  C03E  F06F         	movff	?___flmul+1,exp@term+1
 18748   0068CC  C03F  F070         	movff	?___flmul+2,exp@term+2
 18749   0068D0  C040  F071         	movff	?___flmul+3,exp@term+3
 18750   0068D4                     
 18751                           ;functions.c: 13:         result += term;
 18752   0068D4  C06A  F056         	movff	exp@result,___fladd@b
 18753   0068D8  C06B  F057         	movff	exp@result+1,___fladd@b+1
 18754   0068DC  C06C  F058         	movff	exp@result+2,___fladd@b+2
 18755   0068E0  C06D  F059         	movff	exp@result+3,___fladd@b+3
 18756   0068E4  C06E  F05A         	movff	exp@term,___fladd@a
 18757   0068E8  C06F  F05B         	movff	exp@term+1,___fladd@a+1
 18758   0068EC  C070  F05C         	movff	exp@term+2,___fladd@a+2
 18759   0068F0  C071  F05D         	movff	exp@term+3,___fladd@a+3
 18760   0068F4  ECB3  F016         	call	___fladd	;wreg free
 18761   0068F8  C056  F06A         	movff	?___fladd,exp@result
 18762   0068FC  C057  F06B         	movff	?___fladd+1,exp@result+1
 18763   006900  C058  F06C         	movff	?___fladd+2,exp@result+2
 18764   006904  C059  F06D         	movff	?___fladd+3,exp@result+3
 18765   006908                     
 18766                           ;functions.c: 14:     }
 18767   006908  4A72               	infsnz	exp@i^0,f,c
 18768   00690A  2A73               	incf	(exp@i+1)^0,f,c
 18769   00690C  BE73               	btfsc	(exp@i+1)^0,7,c
 18770   00690E  EF92  F034         	goto	u12901
 18771   006912  5073               	movf	(exp@i+1)^0,w,c
 18772   006914  E109               	bnz	u12900
 18773   006916  0E0A               	movlw	10
 18774   006918  5C72               	subwf	exp@i^0,w,c
 18775   00691A  A0D8               	btfss	status,0,c
 18776   00691C  EF92  F034         	goto	u12901
 18777   006920  EF94  F034         	goto	u12900
 18778   006924                     u12901:
 18779   006924  EF32  F034         	goto	l10452
 18780   006928                     u12900:
 18781   006928                     
 18782                           ;functions.c: 16:     return result;
 18783   006928  C06A  F066         	movff	exp@result,?_exp
 18784   00692C  C06B  F067         	movff	exp@result+1,?_exp+1
 18785   006930  C06C  F068         	movff	exp@result+2,?_exp+2
 18786   006934  C06D  F069         	movff	exp@result+3,?_exp+3
 18787   006938  0012               	return		;funcret
 18788   00693A                     __end_of_exp:
 18789                           	callstack 0
 18790                           
 18791 ;; *************** function ___xxtofl *****************
 18792 ;; Defined at:
 18793 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 18794 ;; Parameters:    Size  Location     Type
 18795 ;;  sign            1    wreg     unsigned char 
 18796 ;;  val             4   21[COMRAM] long 
 18797 ;; Auto vars:     Size  Location     Type
 18798 ;;  sign            1   29[COMRAM] unsigned char 
 18799 ;;  arg             4   31[COMRAM] unsigned long 
 18800 ;;  exp             1   30[COMRAM] unsigned char 
 18801 ;; Return value:  Size  Location     Type
 18802 ;;                  4   21[COMRAM] unsigned char 
 18803 ;; Registers used:
 18804 ;;		wreg, status,2, status,0
 18805 ;; Tracked objects:
 18806 ;;		On entry : 0/0
 18807 ;;		On exit  : 0/0
 18808 ;;		Unchanged: 0/0
 18809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18811 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18812 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18813 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18814 ;;Total ram usage:       14 bytes
 18815 ;; Hardware stack levels used: 1
 18816 ;; Hardware stack levels required when called: 1
 18817 ;; This function calls:
 18818 ;;		Nothing
 18819 ;; This function is called by:
 18820 ;;		_exp
 18821 ;;		_GetTimerVal
 18822 ;;		_WaitPeriod
 18823 ;;		_OxygenSPO2Calc
 18824 ;;		_HeartRateCalc
 18825 ;; This function uses a non-reentrant model
 18826 ;;
 18827                           
 18828                           	psect	text66
 18829   00560C                     __ptext66:
 18830                           	callstack 0
 18831   00560C                     ___xxtofl:
 18832                           	callstack 24
 18833                           
 18834                           ;incstack = 0
 18835                           ;___xxtofl@sign stored from wreg
 18836   00560C  6E1E               	movwf	___xxtofl@sign^0,c
 18837   00560E  501E               	movf	___xxtofl@sign^0,w,c
 18838   005610  B4D8               	btfsc	status,2,c
 18839   005612  EF0D  F02B         	goto	u12531
 18840   005616  EF0F  F02B         	goto	u12530
 18841   00561A                     u12531:
 18842   00561A  EF31  F02B         	goto	l1111
 18843   00561E                     u12530:
 18844   00561E  BE19               	btfsc	(___xxtofl@val+3)^0,7,c
 18845   005620  EF16  F02B         	goto	u12540
 18846   005624  EF14  F02B         	goto	u12541
 18847   005628                     u12541:
 18848   005628  EF31  F02B         	goto	l1111
 18849   00562C                     u12540:
 18850   00562C  C016  F01A         	movff	___xxtofl@val,??___xxtofl
 18851   005630  C017  F01B         	movff	___xxtofl@val+1,??___xxtofl+1
 18852   005634  C018  F01C         	movff	___xxtofl@val+2,??___xxtofl+2
 18853   005638  C019  F01D         	movff	___xxtofl@val+3,??___xxtofl+3
 18854   00563C  1E1A               	comf	??___xxtofl^0,f,c
 18855   00563E  1E1B               	comf	(??___xxtofl+1)^0,f,c
 18856   005640  1E1C               	comf	(??___xxtofl+2)^0,f,c
 18857   005642  1E1D               	comf	(??___xxtofl+3)^0,f,c
 18858   005644  2A1A               	incf	??___xxtofl^0,f,c
 18859   005646  0E00               	movlw	0
 18860   005648  221B               	addwfc	(??___xxtofl+1)^0,f,c
 18861   00564A  221C               	addwfc	(??___xxtofl+2)^0,f,c
 18862   00564C  221D               	addwfc	(??___xxtofl+3)^0,f,c
 18863   00564E  C01A  F020         	movff	??___xxtofl,___xxtofl@arg
 18864   005652  C01B  F021         	movff	??___xxtofl+1,___xxtofl@arg+1
 18865   005656  C01C  F022         	movff	??___xxtofl+2,___xxtofl@arg+2
 18866   00565A  C01D  F023         	movff	??___xxtofl+3,___xxtofl@arg+3
 18867   00565E  EF39  F02B         	goto	l10240
 18868   005662                     l1111:
 18869   005662  C016  F020         	movff	___xxtofl@val,___xxtofl@arg
 18870   005666  C017  F021         	movff	___xxtofl@val+1,___xxtofl@arg+1
 18871   00566A  C018  F022         	movff	___xxtofl@val+2,___xxtofl@arg+2
 18872   00566E  C019  F023         	movff	___xxtofl@val+3,___xxtofl@arg+3
 18873   005672                     l10240:
 18874   005672  5016               	movf	___xxtofl@val^0,w,c
 18875   005674  1017               	iorwf	(___xxtofl@val+1)^0,w,c
 18876   005676  1018               	iorwf	(___xxtofl@val+2)^0,w,c
 18877   005678  1019               	iorwf	(___xxtofl@val+3)^0,w,c
 18878   00567A  A4D8               	btfss	status,2,c
 18879   00567C  EF42  F02B         	goto	u12551
 18880   005680  EF44  F02B         	goto	u12550
 18881   005684                     u12551:
 18882   005684  EF4E  F02B         	goto	l10246
 18883   005688                     u12550:
 18884   005688  0E00               	movlw	0
 18885   00568A  6E16               	movwf	?___xxtofl^0,c
 18886   00568C  0E00               	movlw	0
 18887   00568E  6E17               	movwf	(?___xxtofl+1)^0,c
 18888   005690  0E00               	movlw	0
 18889   005692  6E18               	movwf	(?___xxtofl+2)^0,c
 18890   005694  0E00               	movlw	0
 18891   005696  6E19               	movwf	(?___xxtofl+3)^0,c
 18892   005698  EFDF  F02B         	goto	l1114
 18893   00569C                     l10246:
 18894   00569C  0E96               	movlw	150
 18895   00569E  6E1F               	movwf	___xxtofl@exp^0,c
 18896   0056A0  EF58  F02B         	goto	l10250
 18897   0056A4                     l10248:
 18898   0056A4  2A1F               	incf	___xxtofl@exp^0,f,c
 18899   0056A6  90D8               	bcf	status,0,c
 18900   0056A8  3223               	rrcf	(___xxtofl@arg+3)^0,f,c
 18901   0056AA  3222               	rrcf	(___xxtofl@arg+2)^0,f,c
 18902   0056AC  3221               	rrcf	(___xxtofl@arg+1)^0,f,c
 18903   0056AE  3220               	rrcf	___xxtofl@arg^0,f,c
 18904   0056B0                     l10250:
 18905   0056B0  0E00               	movlw	0
 18906   0056B2  1420               	andwf	___xxtofl@arg^0,w,c
 18907   0056B4  6E1A               	movwf	??___xxtofl^0,c
 18908   0056B6  0E00               	movlw	0
 18909   0056B8  1421               	andwf	(___xxtofl@arg+1)^0,w,c
 18910   0056BA  6E1B               	movwf	(??___xxtofl+1)^0,c
 18911   0056BC  0E00               	movlw	0
 18912   0056BE  1422               	andwf	(___xxtofl@arg+2)^0,w,c
 18913   0056C0  6E1C               	movwf	(??___xxtofl+2)^0,c
 18914   0056C2  0EFE               	movlw	254
 18915   0056C4  1423               	andwf	(___xxtofl@arg+3)^0,w,c
 18916   0056C6  6E1D               	movwf	(??___xxtofl+3)^0,c
 18917   0056C8  501A               	movf	??___xxtofl^0,w,c
 18918   0056CA  101B               	iorwf	(??___xxtofl+1)^0,w,c
 18919   0056CC  101C               	iorwf	(??___xxtofl+2)^0,w,c
 18920   0056CE  101D               	iorwf	(??___xxtofl+3)^0,w,c
 18921   0056D0  A4D8               	btfss	status,2,c
 18922   0056D2  EF6D  F02B         	goto	u12561
 18923   0056D6  EF6F  F02B         	goto	u12560
 18924   0056DA                     u12561:
 18925   0056DA  EF52  F02B         	goto	l10248
 18926   0056DE                     u12560:
 18927   0056DE  EF7D  F02B         	goto	l1118
 18928   0056E2                     l10252:
 18929   0056E2  2A1F               	incf	___xxtofl@exp^0,f,c
 18930   0056E4  0E01               	movlw	1
 18931   0056E6  2620               	addwf	___xxtofl@arg^0,f,c
 18932   0056E8  0E00               	movlw	0
 18933   0056EA  2221               	addwfc	(___xxtofl@arg+1)^0,f,c
 18934   0056EC  2222               	addwfc	(___xxtofl@arg+2)^0,f,c
 18935   0056EE  2223               	addwfc	(___xxtofl@arg+3)^0,f,c
 18936   0056F0  90D8               	bcf	status,0,c
 18937   0056F2  3223               	rrcf	(___xxtofl@arg+3)^0,f,c
 18938   0056F4  3222               	rrcf	(___xxtofl@arg+2)^0,f,c
 18939   0056F6  3221               	rrcf	(___xxtofl@arg+1)^0,f,c
 18940   0056F8  3220               	rrcf	___xxtofl@arg^0,f,c
 18941   0056FA                     l1118:
 18942   0056FA  0E00               	movlw	0
 18943   0056FC  1420               	andwf	___xxtofl@arg^0,w,c
 18944   0056FE  6E1A               	movwf	??___xxtofl^0,c
 18945   005700  0E00               	movlw	0
 18946   005702  1421               	andwf	(___xxtofl@arg+1)^0,w,c
 18947   005704  6E1B               	movwf	(??___xxtofl+1)^0,c
 18948   005706  0E00               	movlw	0
 18949   005708  1422               	andwf	(___xxtofl@arg+2)^0,w,c
 18950   00570A  6E1C               	movwf	(??___xxtofl+2)^0,c
 18951   00570C  0EFF               	movlw	255
 18952   00570E  1423               	andwf	(___xxtofl@arg+3)^0,w,c
 18953   005710  6E1D               	movwf	(??___xxtofl+3)^0,c
 18954   005712  501A               	movf	??___xxtofl^0,w,c
 18955   005714  101B               	iorwf	(??___xxtofl+1)^0,w,c
 18956   005716  101C               	iorwf	(??___xxtofl+2)^0,w,c
 18957   005718  101D               	iorwf	(??___xxtofl+3)^0,w,c
 18958   00571A  A4D8               	btfss	status,2,c
 18959   00571C  EF92  F02B         	goto	u12571
 18960   005720  EF94  F02B         	goto	u12570
 18961   005724                     u12571:
 18962   005724  EF71  F02B         	goto	l10252
 18963   005728                     u12570:
 18964   005728  EF9C  F02B         	goto	l10260
 18965   00572C                     l10258:
 18966   00572C  061F               	decf	___xxtofl@exp^0,f,c
 18967   00572E  90D8               	bcf	status,0,c
 18968   005730  3620               	rlcf	___xxtofl@arg^0,f,c
 18969   005732  3621               	rlcf	(___xxtofl@arg+1)^0,f,c
 18970   005734  3622               	rlcf	(___xxtofl@arg+2)^0,f,c
 18971   005736  3623               	rlcf	(___xxtofl@arg+3)^0,f,c
 18972   005738                     l10260:
 18973   005738  BE22               	btfsc	(___xxtofl@arg+2)^0,7,c
 18974   00573A  EFA1  F02B         	goto	u12581
 18975   00573E  EFA3  F02B         	goto	u12580
 18976   005742                     u12581:
 18977   005742  EFAB  F02B         	goto	l1125
 18978   005746                     u12580:
 18979   005746  0E02               	movlw	2
 18980   005748  601F               	cpfslt	___xxtofl@exp^0,c
 18981   00574A  EFA9  F02B         	goto	u12591
 18982   00574E  EFAB  F02B         	goto	u12590
 18983   005752                     u12591:
 18984   005752  EF96  F02B         	goto	l10258
 18985   005756                     u12590:
 18986   005756                     l1125:
 18987   005756  B01F               	btfsc	___xxtofl@exp^0,0,c
 18988   005758  EFB0  F02B         	goto	u12601
 18989   00575C  EFB2  F02B         	goto	u12600
 18990   005760                     u12601:
 18991   005760  EFB3  F02B         	goto	l10266
 18992   005764                     u12600:
 18993   005764  9E22               	bcf	(___xxtofl@arg+2)^0,7,c
 18994   005766                     l10266:
 18995   005766  90D8               	bcf	status,0,c
 18996   005768  321F               	rrcf	___xxtofl@exp^0,f,c
 18997   00576A  C01F  F01A         	movff	___xxtofl@exp,??___xxtofl
 18998   00576E  6A1B               	clrf	(??___xxtofl+1)^0,c
 18999   005770  6A1C               	clrf	(??___xxtofl+2)^0,c
 19000   005772  6A1D               	clrf	(??___xxtofl+3)^0,c
 19001   005774  C01A  F01D         	movff	??___xxtofl,??___xxtofl+3
 19002   005778  6A1C               	clrf	(??___xxtofl+2)^0,c
 19003   00577A  6A1B               	clrf	(??___xxtofl+1)^0,c
 19004   00577C  6A1A               	clrf	??___xxtofl^0,c
 19005   00577E  501A               	movf	??___xxtofl^0,w,c
 19006   005780  1220               	iorwf	___xxtofl@arg^0,f,c
 19007   005782  501B               	movf	(??___xxtofl+1)^0,w,c
 19008   005784  1221               	iorwf	(___xxtofl@arg+1)^0,f,c
 19009   005786  501C               	movf	(??___xxtofl+2)^0,w,c
 19010   005788  1222               	iorwf	(___xxtofl@arg+2)^0,f,c
 19011   00578A  501D               	movf	(??___xxtofl+3)^0,w,c
 19012   00578C  1223               	iorwf	(___xxtofl@arg+3)^0,f,c
 19013   00578E  501E               	movf	___xxtofl@sign^0,w,c
 19014   005790  B4D8               	btfsc	status,2,c
 19015   005792  EFCD  F02B         	goto	u12611
 19016   005796  EFCF  F02B         	goto	u12610
 19017   00579A                     u12611:
 19018   00579A  EFD7  F02B         	goto	l10276
 19019   00579E                     u12610:
 19020   00579E  BE19               	btfsc	(___xxtofl@val+3)^0,7,c
 19021   0057A0  EFD6  F02B         	goto	u12620
 19022   0057A4  EFD4  F02B         	goto	u12621
 19023   0057A8                     u12621:
 19024   0057A8  EFD7  F02B         	goto	l10276
 19025   0057AC                     u12620:
 19026   0057AC  8E23               	bsf	(___xxtofl@arg+3)^0,7,c
 19027   0057AE                     l10276:
 19028   0057AE  C020  F016         	movff	___xxtofl@arg,?___xxtofl
 19029   0057B2  C021  F017         	movff	___xxtofl@arg+1,?___xxtofl+1
 19030   0057B6  C022  F018         	movff	___xxtofl@arg+2,?___xxtofl+2
 19031   0057BA  C023  F019         	movff	___xxtofl@arg+3,?___xxtofl+3
 19032   0057BE                     l1114:
 19033   0057BE  0012               	return		;funcret
 19034   0057C0                     __end_of___xxtofl:
 19035                           	callstack 0
 19036                           
 19037 ;; *************** function ___flmul *****************
 19038 ;; Defined at:
 19039 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 19040 ;; Parameters:    Size  Location     Type
 19041 ;;  b               4   60[COMRAM] unsigned char 
 19042 ;;  a               4   64[COMRAM] unsigned char 
 19043 ;; Auto vars:     Size  Location     Type
 19044 ;;  prod            4   79[COMRAM] struct .
 19045 ;;  grs             4   73[COMRAM] unsigned long 
 19046 ;;  temp            2   83[COMRAM] struct .
 19047 ;;  bexp            1   78[COMRAM] unsigned char 
 19048 ;;  aexp            1   77[COMRAM] unsigned char 
 19049 ;;  sign            1   72[COMRAM] unsigned char 
 19050 ;; Return value:  Size  Location     Type
 19051 ;;                  4   60[COMRAM] unsigned char 
 19052 ;; Registers used:
 19053 ;;		wreg, status,2, status,0, prodl, prodh
 19054 ;; Tracked objects:
 19055 ;;		On entry : 0/0
 19056 ;;		On exit  : 0/0
 19057 ;;		Unchanged: 0/0
 19058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19059 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19060 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19061 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19062 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19063 ;;Total ram usage:       25 bytes
 19064 ;; Hardware stack levels used: 1
 19065 ;; Hardware stack levels required when called: 1
 19066 ;; This function calls:
 19067 ;;		Nothing
 19068 ;; This function is called by:
 19069 ;;		_exp
 19070 ;;		_WaitPeriod
 19071 ;;		_DataPrinting
 19072 ;;		_OxygenSPO2Calc
 19073 ;;		_atoa
 19074 ;;		_efgtoa
 19075 ;; This function uses a non-reentrant model
 19076 ;;
 19077                           
 19078                           	psect	text67
 19079   003AB2                     __ptext67:
 19080                           	callstack 0
 19081   003AB2                     ___flmul:
 19082                           	callstack 22
 19083   003AB2  5040               	movf	(___flmul@b+3)^0,w,c
 19084   003AB4  0B80               	andlw	128
 19085   003AB6  6E49               	movwf	___flmul@sign^0,c
 19086   003AB8  5040               	movf	(___flmul@b+3)^0,w,c
 19087   003ABA  2440               	addwf	(___flmul@b+3)^0,w,c
 19088   003ABC  6E4F               	movwf	___flmul@bexp^0,c
 19089   003ABE  AE3F               	btfss	(___flmul@b+2)^0,7,c
 19090   003AC0  EF64  F01D         	goto	u5561
 19091   003AC4  EF66  F01D         	goto	u5560
 19092   003AC8                     u5561:
 19093   003AC8  EF67  F01D         	goto	l5614
 19094   003ACC                     u5560:
 19095   003ACC  804F               	bsf	___flmul@bexp^0,0,c
 19096   003ACE                     l5614:
 19097   003ACE  504F               	movf	___flmul@bexp^0,w,c
 19098   003AD0  B4D8               	btfsc	status,2,c
 19099   003AD2  EF6D  F01D         	goto	u5571
 19100   003AD6  EF6F  F01D         	goto	u5570
 19101   003ADA                     u5571:
 19102   003ADA  EF82  F01D         	goto	l5622
 19103   003ADE                     u5570:
 19104   003ADE  284F               	incf	___flmul@bexp^0,w,c
 19105   003AE0  A4D8               	btfss	status,2,c
 19106   003AE2  EF75  F01D         	goto	u5581
 19107   003AE6  EF77  F01D         	goto	u5580
 19108   003AEA                     u5581:
 19109   003AEA  EF7F  F01D         	goto	l5620
 19110   003AEE                     u5580:
 19111   003AEE  0E00               	movlw	0
 19112   003AF0  6E3D               	movwf	___flmul@b^0,c
 19113   003AF2  0E00               	movlw	0
 19114   003AF4  6E3E               	movwf	(___flmul@b+1)^0,c
 19115   003AF6  0E00               	movlw	0
 19116   003AF8  6E3F               	movwf	(___flmul@b+2)^0,c
 19117   003AFA  0E00               	movlw	0
 19118   003AFC  6E40               	movwf	(___flmul@b+3)^0,c
 19119   003AFE                     l5620:
 19120   003AFE  8E3F               	bsf	(___flmul@b+2)^0,7,c
 19121   003B00  EF8A  F01D         	goto	l5624
 19122   003B04                     l5622:
 19123   003B04  0E00               	movlw	0
 19124   003B06  6E3D               	movwf	___flmul@b^0,c
 19125   003B08  0E00               	movlw	0
 19126   003B0A  6E3E               	movwf	(___flmul@b+1)^0,c
 19127   003B0C  0E00               	movlw	0
 19128   003B0E  6E3F               	movwf	(___flmul@b+2)^0,c
 19129   003B10  0E00               	movlw	0
 19130   003B12  6E40               	movwf	(___flmul@b+3)^0,c
 19131   003B14                     l5624:
 19132   003B14  5044               	movf	(___flmul@a+3)^0,w,c
 19133   003B16  0B80               	andlw	128
 19134   003B18  1A49               	xorwf	___flmul@sign^0,f,c
 19135   003B1A  5044               	movf	(___flmul@a+3)^0,w,c
 19136   003B1C  2444               	addwf	(___flmul@a+3)^0,w,c
 19137   003B1E  6E4E               	movwf	___flmul@aexp^0,c
 19138   003B20  AE43               	btfss	(___flmul@a+2)^0,7,c
 19139   003B22  EF95  F01D         	goto	u5591
 19140   003B26  EF97  F01D         	goto	u5590
 19141   003B2A                     u5591:
 19142   003B2A  EF98  F01D         	goto	l5632
 19143   003B2E                     u5590:
 19144   003B2E  804E               	bsf	___flmul@aexp^0,0,c
 19145   003B30                     l5632:
 19146   003B30  504E               	movf	___flmul@aexp^0,w,c
 19147   003B32  B4D8               	btfsc	status,2,c
 19148   003B34  EF9E  F01D         	goto	u5601
 19149   003B38  EFA0  F01D         	goto	u5600
 19150   003B3C                     u5601:
 19151   003B3C  EFB3  F01D         	goto	l5640
 19152   003B40                     u5600:
 19153   003B40  284E               	incf	___flmul@aexp^0,w,c
 19154   003B42  A4D8               	btfss	status,2,c
 19155   003B44  EFA6  F01D         	goto	u5611
 19156   003B48  EFA8  F01D         	goto	u5610
 19157   003B4C                     u5611:
 19158   003B4C  EFB0  F01D         	goto	l5638
 19159   003B50                     u5610:
 19160   003B50  0E00               	movlw	0
 19161   003B52  6E41               	movwf	___flmul@a^0,c
 19162   003B54  0E00               	movlw	0
 19163   003B56  6E42               	movwf	(___flmul@a+1)^0,c
 19164   003B58  0E00               	movlw	0
 19165   003B5A  6E43               	movwf	(___flmul@a+2)^0,c
 19166   003B5C  0E00               	movlw	0
 19167   003B5E  6E44               	movwf	(___flmul@a+3)^0,c
 19168   003B60                     l5638:
 19169   003B60  8E43               	bsf	(___flmul@a+2)^0,7,c
 19170   003B62  EFBB  F01D         	goto	l1070
 19171   003B66                     l5640:
 19172   003B66  0E00               	movlw	0
 19173   003B68  6E41               	movwf	___flmul@a^0,c
 19174   003B6A  0E00               	movlw	0
 19175   003B6C  6E42               	movwf	(___flmul@a+1)^0,c
 19176   003B6E  0E00               	movlw	0
 19177   003B70  6E43               	movwf	(___flmul@a+2)^0,c
 19178   003B72  0E00               	movlw	0
 19179   003B74  6E44               	movwf	(___flmul@a+3)^0,c
 19180   003B76                     l1070:
 19181   003B76  504E               	movf	___flmul@aexp^0,w,c
 19182   003B78  B4D8               	btfsc	status,2,c
 19183   003B7A  EFC1  F01D         	goto	u5621
 19184   003B7E  EFC3  F01D         	goto	u5620
 19185   003B82                     u5621:
 19186   003B82  EFCB  F01D         	goto	l5644
 19187   003B86                     u5620:
 19188   003B86  504F               	movf	___flmul@bexp^0,w,c
 19189   003B88  A4D8               	btfss	status,2,c
 19190   003B8A  EFC9  F01D         	goto	u5631
 19191   003B8E  EFCB  F01D         	goto	u5630
 19192   003B92                     u5631:
 19193   003B92  EFD5  F01D         	goto	l5648
 19194   003B96                     u5630:
 19195   003B96                     l5644:
 19196   003B96  0E00               	movlw	0
 19197   003B98  6E3D               	movwf	?___flmul^0,c
 19198   003B9A  0E00               	movlw	0
 19199   003B9C  6E3E               	movwf	(?___flmul+1)^0,c
 19200   003B9E  0E00               	movlw	0
 19201   003BA0  6E3F               	movwf	(?___flmul+2)^0,c
 19202   003BA2  0E00               	movlw	0
 19203   003BA4  6E40               	movwf	(?___flmul+3)^0,c
 19204   003BA6  EF6D  F01F         	goto	l1074
 19205   003BAA                     l5648:
 19206   003BAA  5043               	movf	(___flmul@a+2)^0,w,c
 19207   003BAC  023D               	mulwf	___flmul@b^0,c
 19208   003BAE  CFF3 F054          	movff	prodl,___flmul@temp
 19209   003BB2  CFF4 F055          	movff	prodh,___flmul@temp+1
 19210   003BB6  5054               	movf	___flmul@temp^0,w,c
 19211   003BB8  6E4A               	movwf	___flmul@grs^0,c
 19212   003BBA  6A4B               	clrf	(___flmul@grs+1)^0,c
 19213   003BBC  6A4C               	clrf	(___flmul@grs+2)^0,c
 19214   003BBE  6A4D               	clrf	(___flmul@grs+3)^0,c
 19215   003BC0  5055               	movf	(___flmul@temp+1)^0,w,c
 19216   003BC2  6E50               	movwf	___flmul@prod^0,c
 19217   003BC4  6A51               	clrf	(___flmul@prod+1)^0,c
 19218   003BC6  6A52               	clrf	(___flmul@prod+2)^0,c
 19219   003BC8  6A53               	clrf	(___flmul@prod+3)^0,c
 19220   003BCA  5042               	movf	(___flmul@a+1)^0,w,c
 19221   003BCC  023E               	mulwf	(___flmul@b+1)^0,c
 19222   003BCE  CFF3 F054          	movff	prodl,___flmul@temp
 19223   003BD2  CFF4 F055          	movff	prodh,___flmul@temp+1
 19224   003BD6  5054               	movf	___flmul@temp^0,w,c
 19225   003BD8  264A               	addwf	___flmul@grs^0,f,c
 19226   003BDA  0E00               	movlw	0
 19227   003BDC  224B               	addwfc	(___flmul@grs+1)^0,f,c
 19228   003BDE  224C               	addwfc	(___flmul@grs+2)^0,f,c
 19229   003BE0  224D               	addwfc	(___flmul@grs+3)^0,f,c
 19230   003BE2  5055               	movf	(___flmul@temp+1)^0,w,c
 19231   003BE4  2650               	addwf	___flmul@prod^0,f,c
 19232   003BE6  0E00               	movlw	0
 19233   003BE8  2251               	addwfc	(___flmul@prod+1)^0,f,c
 19234   003BEA  2252               	addwfc	(___flmul@prod+2)^0,f,c
 19235   003BEC  2253               	addwfc	(___flmul@prod+3)^0,f,c
 19236   003BEE  5041               	movf	___flmul@a^0,w,c
 19237   003BF0  023F               	mulwf	(___flmul@b+2)^0,c
 19238   003BF2  CFF3 F054          	movff	prodl,___flmul@temp
 19239   003BF6  CFF4 F055          	movff	prodh,___flmul@temp+1
 19240   003BFA  5054               	movf	___flmul@temp^0,w,c
 19241   003BFC  264A               	addwf	___flmul@grs^0,f,c
 19242   003BFE  0E00               	movlw	0
 19243   003C00  224B               	addwfc	(___flmul@grs+1)^0,f,c
 19244   003C02  224C               	addwfc	(___flmul@grs+2)^0,f,c
 19245   003C04  224D               	addwfc	(___flmul@grs+3)^0,f,c
 19246   003C06  5055               	movf	(___flmul@temp+1)^0,w,c
 19247   003C08  2650               	addwf	___flmul@prod^0,f,c
 19248   003C0A  0E00               	movlw	0
 19249   003C0C  2251               	addwfc	(___flmul@prod+1)^0,f,c
 19250   003C0E  2252               	addwfc	(___flmul@prod+2)^0,f,c
 19251   003C10  2253               	addwfc	(___flmul@prod+3)^0,f,c
 19252   003C12  C04C  F04D         	movff	___flmul@grs+2,___flmul@grs+3
 19253   003C16  C04B  F04C         	movff	___flmul@grs+1,___flmul@grs+2
 19254   003C1A  C04A  F04B         	movff	___flmul@grs,___flmul@grs+1
 19255   003C1E  6A4A               	clrf	___flmul@grs^0,c
 19256   003C20  5041               	movf	___flmul@a^0,w,c
 19257   003C22  023E               	mulwf	(___flmul@b+1)^0,c
 19258   003C24  CFF3 F054          	movff	prodl,___flmul@temp
 19259   003C28  CFF4 F055          	movff	prodh,___flmul@temp+1
 19260   003C2C  5054               	movf	___flmul@temp^0,w,c
 19261   003C2E  264A               	addwf	___flmul@grs^0,f,c
 19262   003C30  5055               	movf	(___flmul@temp+1)^0,w,c
 19263   003C32  224B               	addwfc	(___flmul@grs+1)^0,f,c
 19264   003C34  0E00               	movlw	0
 19265   003C36  224C               	addwfc	(___flmul@grs+2)^0,f,c
 19266   003C38  0E00               	movlw	0
 19267   003C3A  224D               	addwfc	(___flmul@grs+3)^0,f,c
 19268   003C3C  5042               	movf	(___flmul@a+1)^0,w,c
 19269   003C3E  023D               	mulwf	___flmul@b^0,c
 19270   003C40  CFF3 F054          	movff	prodl,___flmul@temp
 19271   003C44  CFF4 F055          	movff	prodh,___flmul@temp+1
 19272   003C48  5054               	movf	___flmul@temp^0,w,c
 19273   003C4A  264A               	addwf	___flmul@grs^0,f,c
 19274   003C4C  5055               	movf	(___flmul@temp+1)^0,w,c
 19275   003C4E  224B               	addwfc	(___flmul@grs+1)^0,f,c
 19276   003C50  0E00               	movlw	0
 19277   003C52  224C               	addwfc	(___flmul@grs+2)^0,f,c
 19278   003C54  0E00               	movlw	0
 19279   003C56  224D               	addwfc	(___flmul@grs+3)^0,f,c
 19280   003C58  C04C  F04D         	movff	___flmul@grs+2,___flmul@grs+3
 19281   003C5C  C04B  F04C         	movff	___flmul@grs+1,___flmul@grs+2
 19282   003C60  C04A  F04B         	movff	___flmul@grs,___flmul@grs+1
 19283   003C64  6A4A               	clrf	___flmul@grs^0,c
 19284   003C66  5041               	movf	___flmul@a^0,w,c
 19285   003C68  023D               	mulwf	___flmul@b^0,c
 19286   003C6A  CFF3 F054          	movff	prodl,___flmul@temp
 19287   003C6E  CFF4 F055          	movff	prodh,___flmul@temp+1
 19288   003C72  5054               	movf	___flmul@temp^0,w,c
 19289   003C74  264A               	addwf	___flmul@grs^0,f,c
 19290   003C76  5055               	movf	(___flmul@temp+1)^0,w,c
 19291   003C78  224B               	addwfc	(___flmul@grs+1)^0,f,c
 19292   003C7A  0E00               	movlw	0
 19293   003C7C  224C               	addwfc	(___flmul@grs+2)^0,f,c
 19294   003C7E  0E00               	movlw	0
 19295   003C80  224D               	addwfc	(___flmul@grs+3)^0,f,c
 19296   003C82  5043               	movf	(___flmul@a+2)^0,w,c
 19297   003C84  023E               	mulwf	(___flmul@b+1)^0,c
 19298   003C86  CFF3 F054          	movff	prodl,___flmul@temp
 19299   003C8A  CFF4 F055          	movff	prodh,___flmul@temp+1
 19300   003C8E  5054               	movf	___flmul@temp^0,w,c
 19301   003C90  2650               	addwf	___flmul@prod^0,f,c
 19302   003C92  5055               	movf	(___flmul@temp+1)^0,w,c
 19303   003C94  2251               	addwfc	(___flmul@prod+1)^0,f,c
 19304   003C96  0E00               	movlw	0
 19305   003C98  2252               	addwfc	(___flmul@prod+2)^0,f,c
 19306   003C9A  0E00               	movlw	0
 19307   003C9C  2253               	addwfc	(___flmul@prod+3)^0,f,c
 19308   003C9E  5042               	movf	(___flmul@a+1)^0,w,c
 19309   003CA0  023F               	mulwf	(___flmul@b+2)^0,c
 19310   003CA2  CFF3 F054          	movff	prodl,___flmul@temp
 19311   003CA6  CFF4 F055          	movff	prodh,___flmul@temp+1
 19312   003CAA  5054               	movf	___flmul@temp^0,w,c
 19313   003CAC  2650               	addwf	___flmul@prod^0,f,c
 19314   003CAE  5055               	movf	(___flmul@temp+1)^0,w,c
 19315   003CB0  2251               	addwfc	(___flmul@prod+1)^0,f,c
 19316   003CB2  0E00               	movlw	0
 19317   003CB4  2252               	addwfc	(___flmul@prod+2)^0,f,c
 19318   003CB6  0E00               	movlw	0
 19319   003CB8  2253               	addwfc	(___flmul@prod+3)^0,f,c
 19320   003CBA  5043               	movf	(___flmul@a+2)^0,w,c
 19321   003CBC  023F               	mulwf	(___flmul@b+2)^0,c
 19322   003CBE  CFF3 F054          	movff	prodl,___flmul@temp
 19323   003CC2  CFF4 F055          	movff	prodh,___flmul@temp+1
 19324   003CC6  5054               	movf	___flmul@temp^0,w,c
 19325   003CC8  6E45               	movwf	??___flmul^0,c
 19326   003CCA  5055               	movf	(___flmul@temp+1)^0,w,c
 19327   003CCC  6E46               	movwf	(??___flmul+1)^0,c
 19328   003CCE  6A47               	clrf	(??___flmul+2)^0,c
 19329   003CD0  6A48               	clrf	(??___flmul+3)^0,c
 19330   003CD2  C047  F048         	movff	??___flmul+2,??___flmul+3
 19331   003CD6  C046  F047         	movff	??___flmul+1,??___flmul+2
 19332   003CDA  C045  F046         	movff	??___flmul,??___flmul+1
 19333   003CDE  6A45               	clrf	??___flmul^0,c
 19334   003CE0  5045               	movf	??___flmul^0,w,c
 19335   003CE2  2650               	addwf	___flmul@prod^0,f,c
 19336   003CE4  5046               	movf	(??___flmul+1)^0,w,c
 19337   003CE6  2251               	addwfc	(___flmul@prod+1)^0,f,c
 19338   003CE8  5047               	movf	(??___flmul+2)^0,w,c
 19339   003CEA  2252               	addwfc	(___flmul@prod+2)^0,f,c
 19340   003CEC  5048               	movf	(??___flmul+3)^0,w,c
 19341   003CEE  2253               	addwfc	(___flmul@prod+3)^0,f,c
 19342   003CF0  C04A  F045         	movff	___flmul@grs,??___flmul
 19343   003CF4  C04B  F046         	movff	___flmul@grs+1,??___flmul+1
 19344   003CF8  C04C  F047         	movff	___flmul@grs+2,??___flmul+2
 19345   003CFC  C04D  F048         	movff	___flmul@grs+3,??___flmul+3
 19346   003D00  0E19               	movlw	25
 19347   003D02  EF88  F01E         	goto	u5640
 19348   003D06                     u5645:
 19349   003D06  90D8               	bcf	status,0,c
 19350   003D08  3248               	rrcf	(??___flmul+3)^0,f,c
 19351   003D0A  3247               	rrcf	(??___flmul+2)^0,f,c
 19352   003D0C  3246               	rrcf	(??___flmul+1)^0,f,c
 19353   003D0E  3245               	rrcf	??___flmul^0,f,c
 19354   003D10                     u5640:
 19355   003D10  2EE8               	decfsz	wreg,f,c
 19356   003D12  EF83  F01E         	goto	u5645
 19357   003D16  5045               	movf	??___flmul^0,w,c
 19358   003D18  2650               	addwf	___flmul@prod^0,f,c
 19359   003D1A  5046               	movf	(??___flmul+1)^0,w,c
 19360   003D1C  2251               	addwfc	(___flmul@prod+1)^0,f,c
 19361   003D1E  5047               	movf	(??___flmul+2)^0,w,c
 19362   003D20  2252               	addwfc	(___flmul@prod+2)^0,f,c
 19363   003D22  5048               	movf	(??___flmul+3)^0,w,c
 19364   003D24  2253               	addwfc	(___flmul@prod+3)^0,f,c
 19365   003D26  C04C  F04D         	movff	___flmul@grs+2,___flmul@grs+3
 19366   003D2A  C04B  F04C         	movff	___flmul@grs+1,___flmul@grs+2
 19367   003D2E  C04A  F04B         	movff	___flmul@grs,___flmul@grs+1
 19368   003D32  6A4A               	clrf	___flmul@grs^0,c
 19369   003D34  504E               	movf	___flmul@aexp^0,w,c
 19370   003D36  C04F  F045         	movff	___flmul@bexp,??___flmul
 19371   003D3A  6A46               	clrf	(??___flmul+1)^0,c
 19372   003D3C  2645               	addwf	??___flmul^0,f,c
 19373   003D3E  0E00               	movlw	0
 19374   003D40  2246               	addwfc	(??___flmul+1)^0,f,c
 19375   003D42  0E82               	movlw	130
 19376   003D44  2445               	addwf	??___flmul^0,w,c
 19377   003D46  6E54               	movwf	___flmul@temp^0,c
 19378   003D48  0EFF               	movlw	255
 19379   003D4A  2046               	addwfc	(??___flmul+1)^0,w,c
 19380   003D4C  6E55               	movwf	(___flmul@temp+1)^0,c
 19381   003D4E  EFBE  F01E         	goto	l5696
 19382   003D52                     l5690:
 19383   003D52  90D8               	bcf	status,0,c
 19384   003D54  3650               	rlcf	___flmul@prod^0,f,c
 19385   003D56  3651               	rlcf	(___flmul@prod+1)^0,f,c
 19386   003D58  3652               	rlcf	(___flmul@prod+2)^0,f,c
 19387   003D5A  3653               	rlcf	(___flmul@prod+3)^0,f,c
 19388   003D5C  AE4D               	btfss	(___flmul@grs+3)^0,7,c
 19389   003D5E  EFB3  F01E         	goto	u5651
 19390   003D62  EFB5  F01E         	goto	u5650
 19391   003D66                     u5651:
 19392   003D66  EFB6  F01E         	goto	l1077
 19393   003D6A                     u5650:
 19394   003D6A  8050               	bsf	___flmul@prod^0,0,c
 19395   003D6C                     l1077:
 19396   003D6C  90D8               	bcf	status,0,c
 19397   003D6E  364A               	rlcf	___flmul@grs^0,f,c
 19398   003D70  364B               	rlcf	(___flmul@grs+1)^0,f,c
 19399   003D72  364C               	rlcf	(___flmul@grs+2)^0,f,c
 19400   003D74  364D               	rlcf	(___flmul@grs+3)^0,f,c
 19401   003D76  0654               	decf	___flmul@temp^0,f,c
 19402   003D78  A0D8               	btfss	status,0,c
 19403   003D7A  0655               	decf	(___flmul@temp+1)^0,f,c
 19404   003D7C                     l5696:
 19405   003D7C  AE52               	btfss	(___flmul@prod+2)^0,7,c
 19406   003D7E  EFC3  F01E         	goto	u5661
 19407   003D82  EFC5  F01E         	goto	u5660
 19408   003D86                     u5661:
 19409   003D86  EFA9  F01E         	goto	l5690
 19410   003D8A                     u5660:
 19411   003D8A  0E00               	movlw	0
 19412   003D8C  6E4E               	movwf	___flmul@aexp^0,c
 19413   003D8E  AE4D               	btfss	(___flmul@grs+3)^0,7,c
 19414   003D90  EFCC  F01E         	goto	u5671
 19415   003D94  EFCE  F01E         	goto	u5670
 19416   003D98                     u5671:
 19417   003D98  EFF2  F01E         	goto	l1079
 19418   003D9C                     u5670:
 19419   003D9C  0EFF               	movlw	255
 19420   003D9E  144A               	andwf	___flmul@grs^0,w,c
 19421   003DA0  6E45               	movwf	??___flmul^0,c
 19422   003DA2  0EFF               	movlw	255
 19423   003DA4  144B               	andwf	(___flmul@grs+1)^0,w,c
 19424   003DA6  6E46               	movwf	(??___flmul+1)^0,c
 19425   003DA8  0EFF               	movlw	255
 19426   003DAA  144C               	andwf	(___flmul@grs+2)^0,w,c
 19427   003DAC  6E47               	movwf	(??___flmul+2)^0,c
 19428   003DAE  0E7F               	movlw	127
 19429   003DB0  144D               	andwf	(___flmul@grs+3)^0,w,c
 19430   003DB2  6E48               	movwf	(??___flmul+3)^0,c
 19431   003DB4  5045               	movf	??___flmul^0,w,c
 19432   003DB6  1046               	iorwf	(??___flmul+1)^0,w,c
 19433   003DB8  1047               	iorwf	(??___flmul+2)^0,w,c
 19434   003DBA  1048               	iorwf	(??___flmul+3)^0,w,c
 19435   003DBC  B4D8               	btfsc	status,2,c
 19436   003DBE  EFE3  F01E         	goto	u5681
 19437   003DC2  EFE5  F01E         	goto	u5680
 19438   003DC6                     u5681:
 19439   003DC6  EFE9  F01E         	goto	l1080
 19440   003DCA                     u5680:
 19441   003DCA                     l5704:
 19442   003DCA  0E01               	movlw	1
 19443   003DCC  6E4E               	movwf	___flmul@aexp^0,c
 19444   003DCE  EFF2  F01E         	goto	l1079
 19445   003DD2                     l1080:
 19446   003DD2  A050               	btfss	___flmul@prod^0,0,c
 19447   003DD4  EFEE  F01E         	goto	u5691
 19448   003DD8  EFF0  F01E         	goto	u5690
 19449   003DDC                     u5691:
 19450   003DDC  EFF2  F01E         	goto	l1079
 19451   003DE0                     u5690:
 19452   003DE0  EFE5  F01E         	goto	l5704
 19453   003DE4                     l1079:
 19454   003DE4  504E               	movf	___flmul@aexp^0,w,c
 19455   003DE6  B4D8               	btfsc	status,2,c
 19456   003DE8  EFF8  F01E         	goto	u5701
 19457   003DEC  EFFA  F01E         	goto	u5700
 19458   003DF0                     u5701:
 19459   003DF0  EF1E  F01F         	goto	l5716
 19460   003DF4                     u5700:
 19461   003DF4  0E01               	movlw	1
 19462   003DF6  2650               	addwf	___flmul@prod^0,f,c
 19463   003DF8  0E00               	movlw	0
 19464   003DFA  2251               	addwfc	(___flmul@prod+1)^0,f,c
 19465   003DFC  2252               	addwfc	(___flmul@prod+2)^0,f,c
 19466   003DFE  2253               	addwfc	(___flmul@prod+3)^0,f,c
 19467   003E00  A053               	btfss	(___flmul@prod+3)^0,0,c
 19468   003E02  EF05  F01F         	goto	u5711
 19469   003E06  EF07  F01F         	goto	u5710
 19470   003E0A                     u5711:
 19471   003E0A  EF1E  F01F         	goto	l5716
 19472   003E0E                     u5710:
 19473   003E0E  C050  F045         	movff	___flmul@prod,??___flmul
 19474   003E12  C051  F046         	movff	___flmul@prod+1,??___flmul+1
 19475   003E16  C052  F047         	movff	___flmul@prod+2,??___flmul+2
 19476   003E1A  C053  F048         	movff	___flmul@prod+3,??___flmul+3
 19477   003E1E  3448               	rlcf	(??___flmul+3)^0,w,c
 19478   003E20  3248               	rrcf	(??___flmul+3)^0,f,c
 19479   003E22  3247               	rrcf	(??___flmul+2)^0,f,c
 19480   003E24  3246               	rrcf	(??___flmul+1)^0,f,c
 19481   003E26  3245               	rrcf	??___flmul^0,f,c
 19482   003E28  C045  F050         	movff	??___flmul,___flmul@prod
 19483   003E2C  C046  F051         	movff	??___flmul+1,___flmul@prod+1
 19484   003E30  C047  F052         	movff	??___flmul+2,___flmul@prod+2
 19485   003E34  C048  F053         	movff	??___flmul+3,___flmul@prod+3
 19486   003E38  4A54               	infsnz	___flmul@temp^0,f,c
 19487   003E3A  2A55               	incf	(___flmul@temp+1)^0,f,c
 19488   003E3C                     l5716:
 19489   003E3C  BE55               	btfsc	(___flmul@temp+1)^0,7,c
 19490   003E3E  EF29  F01F         	goto	u5721
 19491   003E42  5055               	movf	(___flmul@temp+1)^0,w,c
 19492   003E44  E108               	bnz	u5720
 19493   003E46  2854               	incf	___flmul@temp^0,w,c
 19494   003E48  A0D8               	btfss	status,0,c
 19495   003E4A  EF29  F01F         	goto	u5721
 19496   003E4E  EF2B  F01F         	goto	u5720
 19497   003E52                     u5721:
 19498   003E52  EF35  F01F         	goto	l5720
 19499   003E56                     u5720:
 19500   003E56  0E00               	movlw	0
 19501   003E58  6E50               	movwf	___flmul@prod^0,c
 19502   003E5A  0E00               	movlw	0
 19503   003E5C  6E51               	movwf	(___flmul@prod+1)^0,c
 19504   003E5E  0E80               	movlw	128
 19505   003E60  6E52               	movwf	(___flmul@prod+2)^0,c
 19506   003E62  0E7F               	movlw	127
 19507   003E64  6E53               	movwf	(___flmul@prod+3)^0,c
 19508   003E66  EF63  F01F         	goto	l5732
 19509   003E6A                     l5720:
 19510   003E6A  BE55               	btfsc	(___flmul@temp+1)^0,7,c
 19511   003E6C  EF42  F01F         	goto	u5730
 19512   003E70  5055               	movf	(___flmul@temp+1)^0,w,c
 19513   003E72  E106               	bnz	u5731
 19514   003E74  0454               	decf	___flmul@temp^0,w,c
 19515   003E76  B0D8               	btfsc	status,0,c
 19516   003E78  EF40  F01F         	goto	u5731
 19517   003E7C  EF42  F01F         	goto	u5730
 19518   003E80                     u5731:
 19519   003E80  EF4E  F01F         	goto	l1087
 19520   003E84                     u5730:
 19521   003E84  0E00               	movlw	0
 19522   003E86  6E50               	movwf	___flmul@prod^0,c
 19523   003E88  0E00               	movlw	0
 19524   003E8A  6E51               	movwf	(___flmul@prod+1)^0,c
 19525   003E8C  0E00               	movlw	0
 19526   003E8E  6E52               	movwf	(___flmul@prod+2)^0,c
 19527   003E90  0E00               	movlw	0
 19528   003E92  6E53               	movwf	(___flmul@prod+3)^0,c
 19529   003E94  0E00               	movlw	0
 19530   003E96  6E49               	movwf	___flmul@sign^0,c
 19531   003E98  EF63  F01F         	goto	l5732
 19532   003E9C                     l1087:
 19533   003E9C  C054  F04F         	movff	___flmul@temp,___flmul@bexp
 19534   003EA0  0EFF               	movlw	255
 19535   003EA2  1650               	andwf	___flmul@prod^0,f,c
 19536   003EA4  0EFF               	movlw	255
 19537   003EA6  1651               	andwf	(___flmul@prod+1)^0,f,c
 19538   003EA8  0E7F               	movlw	127
 19539   003EAA  1652               	andwf	(___flmul@prod+2)^0,f,c
 19540   003EAC  0E00               	movlw	0
 19541   003EAE  1653               	andwf	(___flmul@prod+3)^0,f,c
 19542   003EB0  A04F               	btfss	___flmul@bexp^0,0,c
 19543   003EB2  EF5D  F01F         	goto	u5741
 19544   003EB6  EF5F  F01F         	goto	u5740
 19545   003EBA                     u5741:
 19546   003EBA  EF60  F01F         	goto	l5730
 19547   003EBE                     u5740:
 19548   003EBE  8E52               	bsf	(___flmul@prod+2)^0,7,c
 19549   003EC0                     l5730:
 19550   003EC0  90D8               	bcf	status,0,c
 19551   003EC2  304F               	rrcf	___flmul@bexp^0,w,c
 19552   003EC4  6E53               	movwf	(___flmul@prod+3)^0,c
 19553   003EC6                     l5732:
 19554   003EC6  5049               	movf	___flmul@sign^0,w,c
 19555   003EC8  1253               	iorwf	(___flmul@prod+3)^0,f,c
 19556   003ECA  C050  F03D         	movff	___flmul@prod,?___flmul
 19557   003ECE  C051  F03E         	movff	___flmul@prod+1,?___flmul+1
 19558   003ED2  C052  F03F         	movff	___flmul@prod+2,?___flmul+2
 19559   003ED6  C053  F040         	movff	___flmul@prod+3,?___flmul+3
 19560   003EDA                     l1074:
 19561   003EDA  0012               	return		;funcret
 19562   003EDC                     __end_of___flmul:
 19563                           	callstack 0
 19564                           
 19565 ;; *************** function ___fldiv *****************
 19566 ;; Defined at:
 19567 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 19568 ;; Parameters:    Size  Location     Type
 19569 ;;  b               4   35[COMRAM] unsigned char 
 19570 ;;  a               4   39[COMRAM] unsigned char 
 19571 ;; Auto vars:     Size  Location     Type
 19572 ;;  grs             4   54[COMRAM] unsigned long 
 19573 ;;  rem             4   47[COMRAM] unsigned long 
 19574 ;;  new_exp         2   52[COMRAM] short 
 19575 ;;  aexp            1   59[COMRAM] unsigned char 
 19576 ;;  bexp            1   58[COMRAM] unsigned char 
 19577 ;;  sign            1   51[COMRAM] unsigned char 
 19578 ;; Return value:  Size  Location     Type
 19579 ;;                  4   35[COMRAM] unsigned char 
 19580 ;; Registers used:
 19581 ;;		wreg, status,2, status,0
 19582 ;; Tracked objects:
 19583 ;;		On entry : 0/0
 19584 ;;		On exit  : 0/0
 19585 ;;		Unchanged: 0/0
 19586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19587 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19588 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19589 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19590 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19591 ;;Total ram usage:       25 bytes
 19592 ;; Hardware stack levels used: 1
 19593 ;; Hardware stack levels required when called: 1
 19594 ;; This function calls:
 19595 ;;		Nothing
 19596 ;; This function is called by:
 19597 ;;		_exp
 19598 ;;		_GetTimerVal
 19599 ;;		_AbsorptionCoefficentCalc
 19600 ;;		_DataPrinting
 19601 ;;		_OxygenSPO2Calc
 19602 ;;		_HeartRateCalc
 19603 ;;		_TimerPeriodCheck
 19604 ;;		_atoa
 19605 ;;		_efgtoa
 19606 ;; This function uses a non-reentrant model
 19607 ;;
 19608                           
 19609                           	psect	text68
 19610   003EDC                     __ptext68:
 19611                           	callstack 0
 19612   003EDC                     ___fldiv:
 19613                           	callstack 22
 19614   003EDC  5027               	movf	(___fldiv@b+3)^0,w,c
 19615   003EDE  0B80               	andlw	128
 19616   003EE0  6E34               	movwf	___fldiv@sign^0,c
 19617   003EE2  5027               	movf	(___fldiv@b+3)^0,w,c
 19618   003EE4  2427               	addwf	(___fldiv@b+3)^0,w,c
 19619   003EE6  6E3B               	movwf	___fldiv@bexp^0,c
 19620   003EE8  AE26               	btfss	(___fldiv@b+2)^0,7,c
 19621   003EEA  EF79  F01F         	goto	u9941
 19622   003EEE  EF7B  F01F         	goto	u9940
 19623   003EF2                     u9941:
 19624   003EF2  EF7C  F01F         	goto	l8622
 19625   003EF6                     u9940:
 19626   003EF6  803B               	bsf	___fldiv@bexp^0,0,c
 19627   003EF8                     l8622:
 19628   003EF8  503B               	movf	___fldiv@bexp^0,w,c
 19629   003EFA  B4D8               	btfsc	status,2,c
 19630   003EFC  EF82  F01F         	goto	u9951
 19631   003F00  EF84  F01F         	goto	u9950
 19632   003F04                     u9951:
 19633   003F04  EF99  F01F         	goto	l8632
 19634   003F08                     u9950:
 19635   003F08  283B               	incf	___fldiv@bexp^0,w,c
 19636   003F0A  A4D8               	btfss	status,2,c
 19637   003F0C  EF8A  F01F         	goto	u9961
 19638   003F10  EF8C  F01F         	goto	u9960
 19639   003F14                     u9961:
 19640   003F14  EF94  F01F         	goto	l8628
 19641   003F18                     u9960:
 19642   003F18  0E00               	movlw	0
 19643   003F1A  6E24               	movwf	___fldiv@b^0,c
 19644   003F1C  0E00               	movlw	0
 19645   003F1E  6E25               	movwf	(___fldiv@b+1)^0,c
 19646   003F20  0E00               	movlw	0
 19647   003F22  6E26               	movwf	(___fldiv@b+2)^0,c
 19648   003F24  0E00               	movlw	0
 19649   003F26  6E27               	movwf	(___fldiv@b+3)^0,c
 19650   003F28                     l8628:
 19651   003F28  8E26               	bsf	(___fldiv@b+2)^0,7,c
 19652   003F2A  0E00               	movlw	0
 19653   003F2C  6E27               	movwf	(___fldiv@b+3)^0,c
 19654   003F2E  EFA1  F01F         	goto	l8634
 19655   003F32                     l8632:
 19656   003F32  0E00               	movlw	0
 19657   003F34  6E24               	movwf	___fldiv@b^0,c
 19658   003F36  0E00               	movlw	0
 19659   003F38  6E25               	movwf	(___fldiv@b+1)^0,c
 19660   003F3A  0E00               	movlw	0
 19661   003F3C  6E26               	movwf	(___fldiv@b+2)^0,c
 19662   003F3E  0E00               	movlw	0
 19663   003F40  6E27               	movwf	(___fldiv@b+3)^0,c
 19664   003F42                     l8634:
 19665   003F42  502B               	movf	(___fldiv@a+3)^0,w,c
 19666   003F44  0B80               	andlw	128
 19667   003F46  1A34               	xorwf	___fldiv@sign^0,f,c
 19668   003F48  502B               	movf	(___fldiv@a+3)^0,w,c
 19669   003F4A  242B               	addwf	(___fldiv@a+3)^0,w,c
 19670   003F4C  6E3C               	movwf	___fldiv@aexp^0,c
 19671   003F4E  AE2A               	btfss	(___fldiv@a+2)^0,7,c
 19672   003F50  EFAC  F01F         	goto	u9971
 19673   003F54  EFAE  F01F         	goto	u9970
 19674   003F58                     u9971:
 19675   003F58  EFAF  F01F         	goto	l8642
 19676   003F5C                     u9970:
 19677   003F5C  803C               	bsf	___fldiv@aexp^0,0,c
 19678   003F5E                     l8642:
 19679   003F5E  503C               	movf	___fldiv@aexp^0,w,c
 19680   003F60  B4D8               	btfsc	status,2,c
 19681   003F62  EFB5  F01F         	goto	u9981
 19682   003F66  EFB7  F01F         	goto	u9980
 19683   003F6A                     u9981:
 19684   003F6A  EFCC  F01F         	goto	l8652
 19685   003F6E                     u9980:
 19686   003F6E  283C               	incf	___fldiv@aexp^0,w,c
 19687   003F70  A4D8               	btfss	status,2,c
 19688   003F72  EFBD  F01F         	goto	u9991
 19689   003F76  EFBF  F01F         	goto	u9990
 19690   003F7A                     u9991:
 19691   003F7A  EFC7  F01F         	goto	l8648
 19692   003F7E                     u9990:
 19693   003F7E  0E00               	movlw	0
 19694   003F80  6E28               	movwf	___fldiv@a^0,c
 19695   003F82  0E00               	movlw	0
 19696   003F84  6E29               	movwf	(___fldiv@a+1)^0,c
 19697   003F86  0E00               	movlw	0
 19698   003F88  6E2A               	movwf	(___fldiv@a+2)^0,c
 19699   003F8A  0E00               	movlw	0
 19700   003F8C  6E2B               	movwf	(___fldiv@a+3)^0,c
 19701   003F8E                     l8648:
 19702   003F8E  8E2A               	bsf	(___fldiv@a+2)^0,7,c
 19703   003F90  0E00               	movlw	0
 19704   003F92  6E2B               	movwf	(___fldiv@a+3)^0,c
 19705   003F94  EFD4  F01F         	goto	l8654
 19706   003F98                     l8652:
 19707   003F98  0E00               	movlw	0
 19708   003F9A  6E28               	movwf	___fldiv@a^0,c
 19709   003F9C  0E00               	movlw	0
 19710   003F9E  6E29               	movwf	(___fldiv@a+1)^0,c
 19711   003FA0  0E00               	movlw	0
 19712   003FA2  6E2A               	movwf	(___fldiv@a+2)^0,c
 19713   003FA4  0E00               	movlw	0
 19714   003FA6  6E2B               	movwf	(___fldiv@a+3)^0,c
 19715   003FA8                     l8654:
 19716   003FA8  5028               	movf	___fldiv@a^0,w,c
 19717   003FAA  1029               	iorwf	(___fldiv@a+1)^0,w,c
 19718   003FAC  102A               	iorwf	(___fldiv@a+2)^0,w,c
 19719   003FAE  102B               	iorwf	(___fldiv@a+3)^0,w,c
 19720   003FB0  A4D8               	btfss	status,2,c
 19721   003FB2  EFDD  F01F         	goto	u10001
 19722   003FB6  EFDF  F01F         	goto	u10000
 19723   003FBA                     u10001:
 19724   003FBA  EFF7  F01F         	goto	l8666
 19725   003FBE                     u10000:
 19726   003FBE  0E00               	movlw	0
 19727   003FC0  6E24               	movwf	___fldiv@b^0,c
 19728   003FC2  0E00               	movlw	0
 19729   003FC4  6E25               	movwf	(___fldiv@b+1)^0,c
 19730   003FC6  0E00               	movlw	0
 19731   003FC8  6E26               	movwf	(___fldiv@b+2)^0,c
 19732   003FCA  0E00               	movlw	0
 19733   003FCC  6E27               	movwf	(___fldiv@b+3)^0,c
 19734   003FCE  0E80               	movlw	128
 19735   003FD0  1226               	iorwf	(___fldiv@b+2)^0,f,c
 19736   003FD2  0E7F               	movlw	127
 19737   003FD4  1227               	iorwf	(___fldiv@b+3)^0,f,c
 19738   003FD6                     l8660:
 19739   003FD6  5034               	movf	___fldiv@sign^0,w,c
 19740   003FD8  1227               	iorwf	(___fldiv@b+3)^0,f,c
 19741   003FDA  C024  F024         	movff	___fldiv@b,?___fldiv
 19742   003FDE  C025  F025         	movff	___fldiv@b+1,?___fldiv+1
 19743   003FE2  C026  F026         	movff	___fldiv@b+2,?___fldiv+2
 19744   003FE6  C027  F027         	movff	___fldiv@b+3,?___fldiv+3
 19745   003FEA  EF3A  F021         	goto	l1038
 19746   003FEE                     l8666:
 19747   003FEE  503B               	movf	___fldiv@bexp^0,w,c
 19748   003FF0  A4D8               	btfss	status,2,c
 19749   003FF2  EFFD  F01F         	goto	u10011
 19750   003FF6  EFFF  F01F         	goto	u10010
 19751   003FFA                     u10011:
 19752   003FFA  EF09  F020         	goto	l8674
 19753   003FFE                     u10010:
 19754   003FFE  0E00               	movlw	0
 19755   004000  6E24               	movwf	?___fldiv^0,c
 19756   004002  0E00               	movlw	0
 19757   004004  6E25               	movwf	(?___fldiv+1)^0,c
 19758   004006  0E00               	movlw	0
 19759   004008  6E26               	movwf	(?___fldiv+2)^0,c
 19760   00400A  0E00               	movlw	0
 19761   00400C  6E27               	movwf	(?___fldiv+3)^0,c
 19762   00400E  EF3A  F021         	goto	l1038
 19763   004012                     l8674:
 19764   004012  503C               	movf	___fldiv@aexp^0,w,c
 19765   004014  C03B  F02C         	movff	___fldiv@bexp,??___fldiv
 19766   004018  6A2D               	clrf	(??___fldiv+1)^0,c
 19767   00401A  5E2C               	subwf	??___fldiv^0,f,c
 19768   00401C  0E00               	movlw	0
 19769   00401E  5A2D               	subwfb	(??___fldiv+1)^0,f,c
 19770   004020  0E7F               	movlw	127
 19771   004022  242C               	addwf	??___fldiv^0,w,c
 19772   004024  6E35               	movwf	___fldiv@new_exp^0,c
 19773   004026  0E00               	movlw	0
 19774   004028  202D               	addwfc	(??___fldiv+1)^0,w,c
 19775   00402A  6E36               	movwf	(___fldiv@new_exp+1)^0,c
 19776   00402C  C024  F030         	movff	___fldiv@b,___fldiv@rem
 19777   004030  C025  F031         	movff	___fldiv@b+1,___fldiv@rem+1
 19778   004034  C026  F032         	movff	___fldiv@b+2,___fldiv@rem+2
 19779   004038  C027  F033         	movff	___fldiv@b+3,___fldiv@rem+3
 19780   00403C  0E00               	movlw	0
 19781   00403E  6E24               	movwf	___fldiv@b^0,c
 19782   004040  0E00               	movlw	0
 19783   004042  6E25               	movwf	(___fldiv@b+1)^0,c
 19784   004044  0E00               	movlw	0
 19785   004046  6E26               	movwf	(___fldiv@b+2)^0,c
 19786   004048  0E00               	movlw	0
 19787   00404A  6E27               	movwf	(___fldiv@b+3)^0,c
 19788   00404C  0E00               	movlw	0
 19789   00404E  6E37               	movwf	___fldiv@grs^0,c
 19790   004050  0E00               	movlw	0
 19791   004052  6E38               	movwf	(___fldiv@grs+1)^0,c
 19792   004054  0E00               	movlw	0
 19793   004056  6E39               	movwf	(___fldiv@grs+2)^0,c
 19794   004058  0E00               	movlw	0
 19795   00405A  6E3A               	movwf	(___fldiv@grs+3)^0,c
 19796   00405C  0E00               	movlw	0
 19797   00405E  6E3C               	movwf	___fldiv@aexp^0,c
 19798   004060  EF6A  F020         	goto	l1040
 19799   004064                     l8684:
 19800   004064  503C               	movf	___fldiv@aexp^0,w,c
 19801   004066  B4D8               	btfsc	status,2,c
 19802   004068  EF38  F020         	goto	u10021
 19803   00406C  EF3A  F020         	goto	u10020
 19804   004070                     u10021:
 19805   004070  EF51  F020         	goto	l8692
 19806   004074                     u10020:
 19807   004074  90D8               	bcf	status,0,c
 19808   004076  3630               	rlcf	___fldiv@rem^0,f,c
 19809   004078  3631               	rlcf	(___fldiv@rem+1)^0,f,c
 19810   00407A  3632               	rlcf	(___fldiv@rem+2)^0,f,c
 19811   00407C  3633               	rlcf	(___fldiv@rem+3)^0,f,c
 19812   00407E  90D8               	bcf	status,0,c
 19813   004080  3624               	rlcf	___fldiv@b^0,f,c
 19814   004082  3625               	rlcf	(___fldiv@b+1)^0,f,c
 19815   004084  3626               	rlcf	(___fldiv@b+2)^0,f,c
 19816   004086  3627               	rlcf	(___fldiv@b+3)^0,f,c
 19817   004088  AE3A               	btfss	(___fldiv@grs+3)^0,7,c
 19818   00408A  EF49  F020         	goto	u10031
 19819   00408E  EF4B  F020         	goto	u10030
 19820   004092                     u10031:
 19821   004092  EF4C  F020         	goto	l1043
 19822   004096                     u10030:
 19823   004096  8024               	bsf	___fldiv@b^0,0,c
 19824   004098                     l1043:
 19825   004098  90D8               	bcf	status,0,c
 19826   00409A  3637               	rlcf	___fldiv@grs^0,f,c
 19827   00409C  3638               	rlcf	(___fldiv@grs+1)^0,f,c
 19828   00409E  3639               	rlcf	(___fldiv@grs+2)^0,f,c
 19829   0040A0  363A               	rlcf	(___fldiv@grs+3)^0,f,c
 19830   0040A2                     l8692:
 19831   0040A2  5028               	movf	___fldiv@a^0,w,c
 19832   0040A4  5C30               	subwf	___fldiv@rem^0,w,c
 19833   0040A6  5029               	movf	(___fldiv@a+1)^0,w,c
 19834   0040A8  5831               	subwfb	(___fldiv@rem+1)^0,w,c
 19835   0040AA  502A               	movf	(___fldiv@a+2)^0,w,c
 19836   0040AC  5832               	subwfb	(___fldiv@rem+2)^0,w,c
 19837   0040AE  502B               	movf	(___fldiv@a+3)^0,w,c
 19838   0040B0  5833               	subwfb	(___fldiv@rem+3)^0,w,c
 19839   0040B2  A0D8               	btfss	status,0,c
 19840   0040B4  EF5E  F020         	goto	u10041
 19841   0040B8  EF60  F020         	goto	u10040
 19842   0040BC                     u10041:
 19843   0040BC  EF69  F020         	goto	l8698
 19844   0040C0                     u10040:
 19845   0040C0  8C3A               	bsf	(___fldiv@grs+3)^0,6,c
 19846   0040C2  5028               	movf	___fldiv@a^0,w,c
 19847   0040C4  5E30               	subwf	___fldiv@rem^0,f,c
 19848   0040C6  5029               	movf	(___fldiv@a+1)^0,w,c
 19849   0040C8  5A31               	subwfb	(___fldiv@rem+1)^0,f,c
 19850   0040CA  502A               	movf	(___fldiv@a+2)^0,w,c
 19851   0040CC  5A32               	subwfb	(___fldiv@rem+2)^0,f,c
 19852   0040CE  502B               	movf	(___fldiv@a+3)^0,w,c
 19853   0040D0  5A33               	subwfb	(___fldiv@rem+3)^0,f,c
 19854   0040D2                     l8698:
 19855   0040D2  2A3C               	incf	___fldiv@aexp^0,f,c
 19856   0040D4                     l1040:
 19857   0040D4  0E19               	movlw	25
 19858   0040D6  643C               	cpfsgt	___fldiv@aexp^0,c
 19859   0040D8  EF70  F020         	goto	u10051
 19860   0040DC  EF72  F020         	goto	u10050
 19861   0040E0                     u10051:
 19862   0040E0  EF32  F020         	goto	l8684
 19863   0040E4                     u10050:
 19864   0040E4  5030               	movf	___fldiv@rem^0,w,c
 19865   0040E6  1031               	iorwf	(___fldiv@rem+1)^0,w,c
 19866   0040E8  1032               	iorwf	(___fldiv@rem+2)^0,w,c
 19867   0040EA  1033               	iorwf	(___fldiv@rem+3)^0,w,c
 19868   0040EC  B4D8               	btfsc	status,2,c
 19869   0040EE  EF7B  F020         	goto	u10061
 19870   0040F2  EF7D  F020         	goto	u10060
 19871   0040F6                     u10061:
 19872   0040F6  EF95  F020         	goto	l8710
 19873   0040FA                     u10060:
 19874   0040FA  8037               	bsf	___fldiv@grs^0,0,c
 19875   0040FC  EF95  F020         	goto	l8710
 19876   004100                     l8704:
 19877   004100  90D8               	bcf	status,0,c
 19878   004102  3624               	rlcf	___fldiv@b^0,f,c
 19879   004104  3625               	rlcf	(___fldiv@b+1)^0,f,c
 19880   004106  3626               	rlcf	(___fldiv@b+2)^0,f,c
 19881   004108  3627               	rlcf	(___fldiv@b+3)^0,f,c
 19882   00410A  AE3A               	btfss	(___fldiv@grs+3)^0,7,c
 19883   00410C  EF8A  F020         	goto	u10071
 19884   004110  EF8C  F020         	goto	u10070
 19885   004114                     u10071:
 19886   004114  EF8D  F020         	goto	l1049
 19887   004118                     u10070:
 19888   004118  8024               	bsf	___fldiv@b^0,0,c
 19889   00411A                     l1049:
 19890   00411A  90D8               	bcf	status,0,c
 19891   00411C  3637               	rlcf	___fldiv@grs^0,f,c
 19892   00411E  3638               	rlcf	(___fldiv@grs+1)^0,f,c
 19893   004120  3639               	rlcf	(___fldiv@grs+2)^0,f,c
 19894   004122  363A               	rlcf	(___fldiv@grs+3)^0,f,c
 19895   004124  0635               	decf	___fldiv@new_exp^0,f,c
 19896   004126  A0D8               	btfss	status,0,c
 19897   004128  0636               	decf	(___fldiv@new_exp+1)^0,f,c
 19898   00412A                     l8710:
 19899   00412A  AE26               	btfss	(___fldiv@b+2)^0,7,c
 19900   00412C  EF9A  F020         	goto	u10081
 19901   004130  EF9C  F020         	goto	u10080
 19902   004134                     u10081:
 19903   004134  EF80  F020         	goto	l8704
 19904   004138                     u10080:
 19905   004138  0E00               	movlw	0
 19906   00413A  6E3C               	movwf	___fldiv@aexp^0,c
 19907   00413C  AE3A               	btfss	(___fldiv@grs+3)^0,7,c
 19908   00413E  EFA3  F020         	goto	u10091
 19909   004142  EFA5  F020         	goto	u10090
 19910   004146                     u10091:
 19911   004146  EFC9  F020         	goto	l1051
 19912   00414A                     u10090:
 19913   00414A  0EFF               	movlw	255
 19914   00414C  1437               	andwf	___fldiv@grs^0,w,c
 19915   00414E  6E2C               	movwf	??___fldiv^0,c
 19916   004150  0EFF               	movlw	255
 19917   004152  1438               	andwf	(___fldiv@grs+1)^0,w,c
 19918   004154  6E2D               	movwf	(??___fldiv+1)^0,c
 19919   004156  0EFF               	movlw	255
 19920   004158  1439               	andwf	(___fldiv@grs+2)^0,w,c
 19921   00415A  6E2E               	movwf	(??___fldiv+2)^0,c
 19922   00415C  0E7F               	movlw	127
 19923   00415E  143A               	andwf	(___fldiv@grs+3)^0,w,c
 19924   004160  6E2F               	movwf	(??___fldiv+3)^0,c
 19925   004162  502C               	movf	??___fldiv^0,w,c
 19926   004164  102D               	iorwf	(??___fldiv+1)^0,w,c
 19927   004166  102E               	iorwf	(??___fldiv+2)^0,w,c
 19928   004168  102F               	iorwf	(??___fldiv+3)^0,w,c
 19929   00416A  B4D8               	btfsc	status,2,c
 19930   00416C  EFBA  F020         	goto	u10101
 19931   004170  EFBC  F020         	goto	u10100
 19932   004174                     u10101:
 19933   004174  EFC0  F020         	goto	l1052
 19934   004178                     u10100:
 19935   004178                     l8718:
 19936   004178  0E01               	movlw	1
 19937   00417A  6E3C               	movwf	___fldiv@aexp^0,c
 19938   00417C  EFC9  F020         	goto	l1051
 19939   004180                     l1052:
 19940   004180  A024               	btfss	___fldiv@b^0,0,c
 19941   004182  EFC5  F020         	goto	u10111
 19942   004186  EFC7  F020         	goto	u10110
 19943   00418A                     u10111:
 19944   00418A  EFC9  F020         	goto	l1051
 19945   00418E                     u10110:
 19946   00418E  EFBC  F020         	goto	l8718
 19947   004192                     l1051:
 19948   004192  503C               	movf	___fldiv@aexp^0,w,c
 19949   004194  B4D8               	btfsc	status,2,c
 19950   004196  EFCF  F020         	goto	u10121
 19951   00419A  EFD1  F020         	goto	u10120
 19952   00419E                     u10121:
 19953   00419E  EFF5  F020         	goto	l8730
 19954   0041A2                     u10120:
 19955   0041A2  0E01               	movlw	1
 19956   0041A4  2624               	addwf	___fldiv@b^0,f,c
 19957   0041A6  0E00               	movlw	0
 19958   0041A8  2225               	addwfc	(___fldiv@b+1)^0,f,c
 19959   0041AA  2226               	addwfc	(___fldiv@b+2)^0,f,c
 19960   0041AC  2227               	addwfc	(___fldiv@b+3)^0,f,c
 19961   0041AE  A027               	btfss	(___fldiv@b+3)^0,0,c
 19962   0041B0  EFDC  F020         	goto	u10131
 19963   0041B4  EFDE  F020         	goto	u10130
 19964   0041B8                     u10131:
 19965   0041B8  EFF5  F020         	goto	l8730
 19966   0041BC                     u10130:
 19967   0041BC  C024  F02C         	movff	___fldiv@b,??___fldiv
 19968   0041C0  C025  F02D         	movff	___fldiv@b+1,??___fldiv+1
 19969   0041C4  C026  F02E         	movff	___fldiv@b+2,??___fldiv+2
 19970   0041C8  C027  F02F         	movff	___fldiv@b+3,??___fldiv+3
 19971   0041CC  342F               	rlcf	(??___fldiv+3)^0,w,c
 19972   0041CE  322F               	rrcf	(??___fldiv+3)^0,f,c
 19973   0041D0  322E               	rrcf	(??___fldiv+2)^0,f,c
 19974   0041D2  322D               	rrcf	(??___fldiv+1)^0,f,c
 19975   0041D4  322C               	rrcf	??___fldiv^0,f,c
 19976   0041D6  C02C  F024         	movff	??___fldiv,___fldiv@b
 19977   0041DA  C02D  F025         	movff	??___fldiv+1,___fldiv@b+1
 19978   0041DE  C02E  F026         	movff	??___fldiv+2,___fldiv@b+2
 19979   0041E2  C02F  F027         	movff	??___fldiv+3,___fldiv@b+3
 19980   0041E6  4A35               	infsnz	___fldiv@new_exp^0,f,c
 19981   0041E8  2A36               	incf	(___fldiv@new_exp+1)^0,f,c
 19982   0041EA                     l8730:
 19983   0041EA  BE36               	btfsc	(___fldiv@new_exp+1)^0,7,c
 19984   0041EC  EF00  F021         	goto	u10141
 19985   0041F0  5036               	movf	(___fldiv@new_exp+1)^0,w,c
 19986   0041F2  E108               	bnz	u10140
 19987   0041F4  2835               	incf	___fldiv@new_exp^0,w,c
 19988   0041F6  A0D8               	btfss	status,0,c
 19989   0041F8  EF00  F021         	goto	u10141
 19990   0041FC  EF02  F021         	goto	u10140
 19991   004200                     u10141:
 19992   004200  EF0D  F021         	goto	l8734
 19993   004204                     u10140:
 19994   004204  0E00               	movlw	0
 19995   004206  6E36               	movwf	(___fldiv@new_exp+1)^0,c
 19996   004208  6835               	setf	___fldiv@new_exp^0,c
 19997   00420A  0E00               	movlw	0
 19998   00420C  6E24               	movwf	___fldiv@b^0,c
 19999   00420E  0E00               	movlw	0
 20000   004210  6E25               	movwf	(___fldiv@b+1)^0,c
 20001   004212  0E00               	movlw	0
 20002   004214  6E26               	movwf	(___fldiv@b+2)^0,c
 20003   004216  0E00               	movlw	0
 20004   004218  6E27               	movwf	(___fldiv@b+3)^0,c
 20005   00421A                     l8734:
 20006   00421A  BE36               	btfsc	(___fldiv@new_exp+1)^0,7,c
 20007   00421C  EF1A  F021         	goto	u10150
 20008   004220  5036               	movf	(___fldiv@new_exp+1)^0,w,c
 20009   004222  E106               	bnz	u10151
 20010   004224  0435               	decf	___fldiv@new_exp^0,w,c
 20011   004226  B0D8               	btfsc	status,0,c
 20012   004228  EF18  F021         	goto	u10151
 20013   00422C  EF1A  F021         	goto	u10150
 20014   004230                     u10151:
 20015   004230  EF28  F021         	goto	l8738
 20016   004234                     u10150:
 20017   004234  0E00               	movlw	0
 20018   004236  6E36               	movwf	(___fldiv@new_exp+1)^0,c
 20019   004238  0E00               	movlw	0
 20020   00423A  6E35               	movwf	___fldiv@new_exp^0,c
 20021   00423C  0E00               	movlw	0
 20022   00423E  6E24               	movwf	___fldiv@b^0,c
 20023   004240  0E00               	movlw	0
 20024   004242  6E25               	movwf	(___fldiv@b+1)^0,c
 20025   004244  0E00               	movlw	0
 20026   004246  6E26               	movwf	(___fldiv@b+2)^0,c
 20027   004248  0E00               	movlw	0
 20028   00424A  6E27               	movwf	(___fldiv@b+3)^0,c
 20029   00424C  0E00               	movlw	0
 20030   00424E  6E34               	movwf	___fldiv@sign^0,c
 20031   004250                     l8738:
 20032   004250  C035  F03B         	movff	___fldiv@new_exp,___fldiv@bexp
 20033   004254  A03B               	btfss	___fldiv@bexp^0,0,c
 20034   004256  EF2F  F021         	goto	u10161
 20035   00425A  EF31  F021         	goto	u10160
 20036   00425E                     u10161:
 20037   00425E  EF34  F021         	goto	l8744
 20038   004262                     u10160:
 20039   004262  8E26               	bsf	(___fldiv@b+2)^0,7,c
 20040   004264  EF35  F021         	goto	l8746
 20041   004268                     l8744:
 20042   004268  9E26               	bcf	(___fldiv@b+2)^0,7,c
 20043   00426A                     l8746:
 20044   00426A  90D8               	bcf	status,0,c
 20045   00426C  303B               	rrcf	___fldiv@bexp^0,w,c
 20046   00426E  6E27               	movwf	(___fldiv@b+3)^0,c
 20047   004270  EFEB  F01F         	goto	l8660
 20048   004274                     l1038:
 20049   004274  0012               	return		;funcret
 20050   004276                     __end_of___fldiv:
 20051                           	callstack 0
 20052                           
 20053 ;; *************** function ___flsub *****************
 20054 ;; Defined at:
 20055 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 20056 ;; Parameters:    Size  Location     Type
 20057 ;;  b               4  115[COMRAM] unsigned char 
 20058 ;;  a               4  119[COMRAM] unsigned char 
 20059 ;; Auto vars:     Size  Location     Type
 20060 ;;		None
 20061 ;; Return value:  Size  Location     Type
 20062 ;;                  4  115[COMRAM] unsigned char 
 20063 ;; Registers used:
 20064 ;;		wreg, status,2, status,0, cstack
 20065 ;; Tracked objects:
 20066 ;;		On entry : 0/0
 20067 ;;		On exit  : 0/0
 20068 ;;		Unchanged: 0/0
 20069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20070 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20073 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20074 ;;Total ram usage:        8 bytes
 20075 ;; Hardware stack levels used: 1
 20076 ;; Hardware stack levels required when called: 2
 20077 ;; This function calls:
 20078 ;;		___fladd
 20079 ;; This function is called by:
 20080 ;;		_AbsorptionCoefficentCalc
 20081 ;;		_DataPrinting
 20082 ;;		_OxygenSPO2Calc
 20083 ;;		_HeartRateCalc
 20084 ;;		_TimerPeriodCheck
 20085 ;;		_atoa
 20086 ;;		_efgtoa
 20087 ;; This function uses a non-reentrant model
 20088 ;;
 20089                           
 20090                           	psect	text69
 20091   0076A8                     __ptext69:
 20092                           	callstack 0
 20093   0076A8                     ___flsub:
 20094                           	callstack 21
 20095   0076A8  0E00               	movlw	0
 20096   0076AA  1A78               	xorwf	___flsub@a^0,f,c
 20097   0076AC  0E00               	movlw	0
 20098   0076AE  1A79               	xorwf	(___flsub@a+1)^0,f,c
 20099   0076B0  0E00               	movlw	0
 20100   0076B2  1A7A               	xorwf	(___flsub@a+2)^0,f,c
 20101   0076B4  0E80               	movlw	128
 20102   0076B6  1A7B               	xorwf	(___flsub@a+3)^0,f,c
 20103   0076B8  C074  F056         	movff	___flsub@b,___fladd@b
 20104   0076BC  C075  F057         	movff	___flsub@b+1,___fladd@b+1
 20105   0076C0  C076  F058         	movff	___flsub@b+2,___fladd@b+2
 20106   0076C4  C077  F059         	movff	___flsub@b+3,___fladd@b+3
 20107   0076C8  C078  F05A         	movff	___flsub@a,___fladd@a
 20108   0076CC  C079  F05B         	movff	___flsub@a+1,___fladd@a+1
 20109   0076D0  C07A  F05C         	movff	___flsub@a+2,___fladd@a+2
 20110   0076D4  C07B  F05D         	movff	___flsub@a+3,___fladd@a+3
 20111   0076D8  ECB3  F016         	call	___fladd	;wreg free
 20112   0076DC  C056  F074         	movff	?___fladd,?___flsub
 20113   0076E0  C057  F075         	movff	?___fladd+1,?___flsub+1
 20114   0076E4  C058  F076         	movff	?___fladd+2,?___flsub+2
 20115   0076E8  C059  F077         	movff	?___fladd+3,?___flsub+3
 20116   0076EC  0012               	return		;funcret
 20117   0076EE                     __end_of___flsub:
 20118                           	callstack 0
 20119                           
 20120 ;; *************** function ___fladd *****************
 20121 ;; Defined at:
 20122 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 20123 ;; Parameters:    Size  Location     Type
 20124 ;;  b               4   85[COMRAM] unsigned char 
 20125 ;;  a               4   89[COMRAM] unsigned char 
 20126 ;; Auto vars:     Size  Location     Type
 20127 ;;  grs             1  100[COMRAM] unsigned char 
 20128 ;;  bexp            1   99[COMRAM] unsigned char 
 20129 ;;  aexp            1   98[COMRAM] unsigned char 
 20130 ;;  signs           1   97[COMRAM] unsigned char 
 20131 ;; Return value:  Size  Location     Type
 20132 ;;                  4   85[COMRAM] unsigned char 
 20133 ;; Registers used:
 20134 ;;		wreg, status,2, status,0
 20135 ;; Tracked objects:
 20136 ;;		On entry : 0/0
 20137 ;;		On exit  : 0/0
 20138 ;;		Unchanged: 0/0
 20139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20140 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20141 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20142 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20143 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20144 ;;Total ram usage:       16 bytes
 20145 ;; Hardware stack levels used: 1
 20146 ;; Hardware stack levels required when called: 1
 20147 ;; This function calls:
 20148 ;;		Nothing
 20149 ;; This function is called by:
 20150 ;;		_exp
 20151 ;;		_GetTimerVal
 20152 ;;		_AbsorptionCoefficentCalc
 20153 ;;		_DataPrinting
 20154 ;;		_OxygenSPO2Calc
 20155 ;;		_HeartRateCalc
 20156 ;;		_TimerPeriodCheck
 20157 ;;		___flsub
 20158 ;;		_atoa
 20159 ;;		_efgtoa
 20160 ;; This function uses a non-reentrant model
 20161 ;;
 20162                           
 20163                           	psect	text70
 20164   002D66                     __ptext70:
 20165                           	callstack 0
 20166   002D66                     ___fladd:
 20167                           	callstack 21
 20168   002D66  5059               	movf	(___fladd@b+3)^0,w,c
 20169   002D68  0B80               	andlw	128
 20170   002D6A  6E62               	movwf	___fladd@signs^0,c
 20171   002D6C  5059               	movf	(___fladd@b+3)^0,w,c
 20172   002D6E  2459               	addwf	(___fladd@b+3)^0,w,c
 20173   002D70  6E64               	movwf	___fladd@bexp^0,c
 20174   002D72  AE58               	btfss	(___fladd@b+2)^0,7,c
 20175   002D74  EFBE  F016         	goto	u9531
 20176   002D78  EFC0  F016         	goto	u9530
 20177   002D7C                     u9531:
 20178   002D7C  EFC1  F016         	goto	l8402
 20179   002D80                     u9530:
 20180   002D80  8064               	bsf	___fladd@bexp^0,0,c
 20181   002D82                     l8402:
 20182   002D82  5064               	movf	___fladd@bexp^0,w,c
 20183   002D84  B4D8               	btfsc	status,2,c
 20184   002D86  EFC7  F016         	goto	u9541
 20185   002D8A  EFC9  F016         	goto	u9540
 20186   002D8E                     u9541:
 20187   002D8E  EFDE  F016         	goto	l8412
 20188   002D92                     u9540:
 20189   002D92  2864               	incf	___fladd@bexp^0,w,c
 20190   002D94  A4D8               	btfss	status,2,c
 20191   002D96  EFCF  F016         	goto	u9551
 20192   002D9A  EFD1  F016         	goto	u9550
 20193   002D9E                     u9551:
 20194   002D9E  EFD9  F016         	goto	l8408
 20195   002DA2                     u9550:
 20196   002DA2  0E00               	movlw	0
 20197   002DA4  6E56               	movwf	___fladd@b^0,c
 20198   002DA6  0E00               	movlw	0
 20199   002DA8  6E57               	movwf	(___fladd@b+1)^0,c
 20200   002DAA  0E00               	movlw	0
 20201   002DAC  6E58               	movwf	(___fladd@b+2)^0,c
 20202   002DAE  0E00               	movlw	0
 20203   002DB0  6E59               	movwf	(___fladd@b+3)^0,c
 20204   002DB2                     l8408:
 20205   002DB2  8E58               	bsf	(___fladd@b+2)^0,7,c
 20206   002DB4  0E00               	movlw	0
 20207   002DB6  6E59               	movwf	(___fladd@b+3)^0,c
 20208   002DB8  EFE6  F016         	goto	l8414
 20209   002DBC                     l8412:
 20210   002DBC  0E00               	movlw	0
 20211   002DBE  6E56               	movwf	___fladd@b^0,c
 20212   002DC0  0E00               	movlw	0
 20213   002DC2  6E57               	movwf	(___fladd@b+1)^0,c
 20214   002DC4  0E00               	movlw	0
 20215   002DC6  6E58               	movwf	(___fladd@b+2)^0,c
 20216   002DC8  0E00               	movlw	0
 20217   002DCA  6E59               	movwf	(___fladd@b+3)^0,c
 20218   002DCC                     l8414:
 20219   002DCC  505D               	movf	(___fladd@a+3)^0,w,c
 20220   002DCE  0B80               	andlw	128
 20221   002DD0  6E63               	movwf	___fladd@aexp^0,c
 20222   002DD2  5062               	movf	___fladd@signs^0,w,c
 20223   002DD4  1863               	xorwf	___fladd@aexp^0,w,c
 20224   002DD6  B4D8               	btfsc	status,2,c
 20225   002DD8  EFF0  F016         	goto	u9561
 20226   002DDC  EFF2  F016         	goto	u9560
 20227   002DE0                     u9561:
 20228   002DE0  EFF3  F016         	goto	l8420
 20229   002DE4                     u9560:
 20230   002DE4  8C62               	bsf	___fladd@signs^0,6,c
 20231   002DE6                     l8420:
 20232   002DE6  505D               	movf	(___fladd@a+3)^0,w,c
 20233   002DE8  245D               	addwf	(___fladd@a+3)^0,w,c
 20234   002DEA  6E63               	movwf	___fladd@aexp^0,c
 20235   002DEC  AE5C               	btfss	(___fladd@a+2)^0,7,c
 20236   002DEE  EFFB  F016         	goto	u9571
 20237   002DF2  EFFD  F016         	goto	u9570
 20238   002DF6                     u9571:
 20239   002DF6  EFFE  F016         	goto	l8426
 20240   002DFA                     u9570:
 20241   002DFA  8063               	bsf	___fladd@aexp^0,0,c
 20242   002DFC                     l8426:
 20243   002DFC  5063               	movf	___fladd@aexp^0,w,c
 20244   002DFE  B4D8               	btfsc	status,2,c
 20245   002E00  EF04  F017         	goto	u9581
 20246   002E04  EF06  F017         	goto	u9580
 20247   002E08                     u9581:
 20248   002E08  EF1B  F017         	goto	l8436
 20249   002E0C                     u9580:
 20250   002E0C  2863               	incf	___fladd@aexp^0,w,c
 20251   002E0E  A4D8               	btfss	status,2,c
 20252   002E10  EF0C  F017         	goto	u9591
 20253   002E14  EF0E  F017         	goto	u9590
 20254   002E18                     u9591:
 20255   002E18  EF16  F017         	goto	l8432
 20256   002E1C                     u9590:
 20257   002E1C  0E00               	movlw	0
 20258   002E1E  6E5A               	movwf	___fladd@a^0,c
 20259   002E20  0E00               	movlw	0
 20260   002E22  6E5B               	movwf	(___fladd@a+1)^0,c
 20261   002E24  0E00               	movlw	0
 20262   002E26  6E5C               	movwf	(___fladd@a+2)^0,c
 20263   002E28  0E00               	movlw	0
 20264   002E2A  6E5D               	movwf	(___fladd@a+3)^0,c
 20265   002E2C                     l8432:
 20266   002E2C  8E5C               	bsf	(___fladd@a+2)^0,7,c
 20267   002E2E  0E00               	movlw	0
 20268   002E30  6E5D               	movwf	(___fladd@a+3)^0,c
 20269   002E32  EF23  F017         	goto	l8438
 20270   002E36                     l8436:
 20271   002E36  0E00               	movlw	0
 20272   002E38  6E5A               	movwf	___fladd@a^0,c
 20273   002E3A  0E00               	movlw	0
 20274   002E3C  6E5B               	movwf	(___fladd@a+1)^0,c
 20275   002E3E  0E00               	movlw	0
 20276   002E40  6E5C               	movwf	(___fladd@a+2)^0,c
 20277   002E42  0E00               	movlw	0
 20278   002E44  6E5D               	movwf	(___fladd@a+3)^0,c
 20279   002E46                     l8438:
 20280   002E46  5064               	movf	___fladd@bexp^0,w,c
 20281   002E48  5C63               	subwf	___fladd@aexp^0,w,c
 20282   002E4A  B0D8               	btfsc	status,0,c
 20283   002E4C  EF2A  F017         	goto	u9601
 20284   002E50  EF2C  F017         	goto	u9600
 20285   002E54                     u9601:
 20286   002E54  EF53  F017         	goto	l8474
 20287   002E58                     u9600:
 20288   002E58  AC62               	btfss	___fladd@signs^0,6,c
 20289   002E5A  EF31  F017         	goto	u9611
 20290   002E5E  EF33  F017         	goto	u9610
 20291   002E62                     u9611:
 20292   002E62  EF35  F017         	goto	l8444
 20293   002E66                     u9610:
 20294   002E66  0E80               	movlw	128
 20295   002E68  1A62               	xorwf	___fladd@signs^0,f,c
 20296   002E6A                     l8444:
 20297   002E6A  C064  F065         	movff	___fladd@bexp,___fladd@grs
 20298   002E6E  C063  F064         	movff	___fladd@aexp,___fladd@bexp
 20299   002E72  C065  F063         	movff	___fladd@grs,___fladd@aexp
 20300   002E76  C056  F065         	movff	___fladd@b,___fladd@grs
 20301   002E7A  C05A  F056         	movff	___fladd@a,___fladd@b
 20302   002E7E  C065  F05A         	movff	___fladd@grs,___fladd@a
 20303   002E82  C057  F065         	movff	___fladd@b+1,___fladd@grs
 20304   002E86  C05B  F057         	movff	___fladd@a+1,___fladd@b+1
 20305   002E8A  C065  F05B         	movff	___fladd@grs,___fladd@a+1
 20306   002E8E  C058  F065         	movff	___fladd@b+2,___fladd@grs
 20307   002E92  C05C  F058         	movff	___fladd@a+2,___fladd@b+2
 20308   002E96  C065  F05C         	movff	___fladd@grs,___fladd@a+2
 20309   002E9A  C059  F065         	movff	___fladd@b+3,___fladd@grs
 20310   002E9E  C05D  F059         	movff	___fladd@a+3,___fladd@b+3
 20311   002EA2  C065  F05D         	movff	___fladd@grs,___fladd@a+3
 20312   002EA6                     l8474:
 20313   002EA6  0E00               	movlw	0
 20314   002EA8  6E65               	movwf	___fladd@grs^0,c
 20315   002EAA  5064               	movf	___fladd@bexp^0,w,c
 20316   002EAC  C063  F05E         	movff	___fladd@aexp,??___fladd
 20317   002EB0  6A5F               	clrf	(??___fladd+1)^0,c
 20318   002EB2  5E5E               	subwf	??___fladd^0,f,c
 20319   002EB4  0E00               	movlw	0
 20320   002EB6  5A5F               	subwfb	(??___fladd+1)^0,f,c
 20321   002EB8  BE5F               	btfsc	(??___fladd+1)^0,7,c
 20322   002EBA  EF68  F017         	goto	u9621
 20323   002EBE  505F               	movf	(??___fladd+1)^0,w,c
 20324   002EC0  E109               	bnz	u9620
 20325   002EC2  0E1A               	movlw	26
 20326   002EC4  5C5E               	subwf	??___fladd^0,w,c
 20327   002EC6  A0D8               	btfss	status,0,c
 20328   002EC8  EF68  F017         	goto	u9621
 20329   002ECC  EF6A  F017         	goto	u9620
 20330   002ED0                     u9621:
 20331   002ED0  EFA1  F017         	goto	l985
 20332   002ED4                     u9620:
 20333   002ED4  5056               	movf	___fladd@b^0,w,c
 20334   002ED6  1057               	iorwf	(___fladd@b+1)^0,w,c
 20335   002ED8  1058               	iorwf	(___fladd@b+2)^0,w,c
 20336   002EDA  1059               	iorwf	(___fladd@b+3)^0,w,c
 20337   002EDC  A4D8               	btfss	status,2,c
 20338   002EDE  EF73  F017         	goto	u9631
 20339   002EE2  EF76  F017         	goto	u9630
 20340   002EE6                     u9631:
 20341   002EE6  0E01               	movlw	1
 20342   002EE8  EF77  F017         	goto	u9640
 20343   002EEC                     u9630:
 20344   002EEC  0E00               	movlw	0
 20345   002EEE                     u9640:
 20346   002EEE  6E65               	movwf	___fladd@grs^0,c
 20347   002EF0  0E00               	movlw	0
 20348   002EF2  6E56               	movwf	___fladd@b^0,c
 20349   002EF4  0E00               	movlw	0
 20350   002EF6  6E57               	movwf	(___fladd@b+1)^0,c
 20351   002EF8  0E00               	movlw	0
 20352   002EFA  6E58               	movwf	(___fladd@b+2)^0,c
 20353   002EFC  0E00               	movlw	0
 20354   002EFE  6E59               	movwf	(___fladd@b+3)^0,c
 20355   002F00  C063  F064         	movff	___fladd@aexp,___fladd@bexp
 20356   002F04  EFAA  F017         	goto	l984
 20357   002F08                     l986:
 20358   002F08  A065               	btfss	___fladd@grs^0,0,c
 20359   002F0A  EF89  F017         	goto	u9651
 20360   002F0E  EF8B  F017         	goto	u9650
 20361   002F12                     u9651:
 20362   002F12  EF91  F017         	goto	l8486
 20363   002F16                     u9650:
 20364   002F16  90D8               	bcf	status,0,c
 20365   002F18  3065               	rrcf	___fladd@grs^0,w,c
 20366   002F1A  0901               	iorlw	1
 20367   002F1C  6E65               	movwf	___fladd@grs^0,c
 20368   002F1E  EF93  F017         	goto	l8488
 20369   002F22                     l8486:
 20370   002F22  90D8               	bcf	status,0,c
 20371   002F24  3265               	rrcf	___fladd@grs^0,f,c
 20372   002F26                     l8488:
 20373   002F26  A056               	btfss	___fladd@b^0,0,c
 20374   002F28  EF98  F017         	goto	u9661
 20375   002F2C  EF9A  F017         	goto	u9660
 20376   002F30                     u9661:
 20377   002F30  EF9B  F017         	goto	l8492
 20378   002F34                     u9660:
 20379   002F34  8E65               	bsf	___fladd@grs^0,7,c
 20380   002F36                     l8492:
 20381   002F36  3459               	rlcf	(___fladd@b+3)^0,w,c
 20382   002F38  3259               	rrcf	(___fladd@b+3)^0,f,c
 20383   002F3A  3258               	rrcf	(___fladd@b+2)^0,f,c
 20384   002F3C  3257               	rrcf	(___fladd@b+1)^0,f,c
 20385   002F3E  3256               	rrcf	___fladd@b^0,f,c
 20386   002F40  2A64               	incf	___fladd@bexp^0,f,c
 20387   002F42                     l985:
 20388   002F42  5063               	movf	___fladd@aexp^0,w,c
 20389   002F44  5C64               	subwf	___fladd@bexp^0,w,c
 20390   002F46  A0D8               	btfss	status,0,c
 20391   002F48  EFA8  F017         	goto	u9671
 20392   002F4C  EFAA  F017         	goto	u9670
 20393   002F50                     u9671:
 20394   002F50  EF84  F017         	goto	l986
 20395   002F54                     u9670:
 20396   002F54                     l984:
 20397   002F54  BC62               	btfsc	___fladd@signs^0,6,c
 20398   002F56  EFAF  F017         	goto	u9681
 20399   002F5A  EFB1  F017         	goto	u9680
 20400   002F5E                     u9681:
 20401   002F5E  EFF1  F017         	goto	l8520
 20402   002F62                     u9680:
 20403   002F62  5064               	movf	___fladd@bexp^0,w,c
 20404   002F64  A4D8               	btfss	status,2,c
 20405   002F66  EFB7  F017         	goto	u9691
 20406   002F6A  EFB9  F017         	goto	u9690
 20407   002F6E                     u9691:
 20408   002F6E  EFC3  F017         	goto	l8502
 20409   002F72                     u9690:
 20410   002F72  0E00               	movlw	0
 20411   002F74  6E56               	movwf	?___fladd^0,c
 20412   002F76  0E00               	movlw	0
 20413   002F78  6E57               	movwf	(?___fladd+1)^0,c
 20414   002F7A  0E00               	movlw	0
 20415   002F7C  6E58               	movwf	(?___fladd+2)^0,c
 20416   002F7E  0E00               	movlw	0
 20417   002F80  6E59               	movwf	(?___fladd+3)^0,c
 20418   002F82  EF12  F019         	goto	l993
 20419   002F86                     l8502:
 20420   002F86  505A               	movf	___fladd@a^0,w,c
 20421   002F88  2656               	addwf	___fladd@b^0,f,c
 20422   002F8A  505B               	movf	(___fladd@a+1)^0,w,c
 20423   002F8C  2257               	addwfc	(___fladd@b+1)^0,f,c
 20424   002F8E  505C               	movf	(___fladd@a+2)^0,w,c
 20425   002F90  2258               	addwfc	(___fladd@b+2)^0,f,c
 20426   002F92  505D               	movf	(___fladd@a+3)^0,w,c
 20427   002F94  2259               	addwfc	(___fladd@b+3)^0,f,c
 20428   002F96  A059               	btfss	(___fladd@b+3)^0,0,c
 20429   002F98  EFD0  F017         	goto	u9701
 20430   002F9C  EFD2  F017         	goto	u9700
 20431   002FA0                     u9701:
 20432   002FA0  EF7E  F018         	goto	l8556
 20433   002FA4                     u9700:
 20434   002FA4  A065               	btfss	___fladd@grs^0,0,c
 20435   002FA6  EFD7  F017         	goto	u9711
 20436   002FAA  EFD9  F017         	goto	u9710
 20437   002FAE                     u9711:
 20438   002FAE  EFDF  F017         	goto	l8510
 20439   002FB2                     u9710:
 20440   002FB2  90D8               	bcf	status,0,c
 20441   002FB4  3065               	rrcf	___fladd@grs^0,w,c
 20442   002FB6  0901               	iorlw	1
 20443   002FB8  6E65               	movwf	___fladd@grs^0,c
 20444   002FBA  EFE1  F017         	goto	l8512
 20445   002FBE                     l8510:
 20446   002FBE  90D8               	bcf	status,0,c
 20447   002FC0  3265               	rrcf	___fladd@grs^0,f,c
 20448   002FC2                     l8512:
 20449   002FC2  A056               	btfss	___fladd@b^0,0,c
 20450   002FC4  EFE6  F017         	goto	u9721
 20451   002FC8  EFE8  F017         	goto	u9720
 20452   002FCC                     u9721:
 20453   002FCC  EFE9  F017         	goto	l8516
 20454   002FD0                     u9720:
 20455   002FD0  8E65               	bsf	___fladd@grs^0,7,c
 20456   002FD2                     l8516:
 20457   002FD2  3459               	rlcf	(___fladd@b+3)^0,w,c
 20458   002FD4  3259               	rrcf	(___fladd@b+3)^0,f,c
 20459   002FD6  3258               	rrcf	(___fladd@b+2)^0,f,c
 20460   002FD8  3257               	rrcf	(___fladd@b+1)^0,f,c
 20461   002FDA  3256               	rrcf	___fladd@b^0,f,c
 20462   002FDC  2A64               	incf	___fladd@bexp^0,f,c
 20463   002FDE  EF7E  F018         	goto	l8556
 20464   002FE2                     l8520:
 20465   002FE2  505A               	movf	___fladd@a^0,w,c
 20466   002FE4  5C56               	subwf	___fladd@b^0,w,c
 20467   002FE6  505B               	movf	(___fladd@a+1)^0,w,c
 20468   002FE8  5857               	subwfb	(___fladd@b+1)^0,w,c
 20469   002FEA  505C               	movf	(___fladd@a+2)^0,w,c
 20470   002FEC  5858               	subwfb	(___fladd@b+2)^0,w,c
 20471   002FEE  5059               	movf	(___fladd@b+3)^0,w,c
 20472   002FF0  0A80               	xorlw	128
 20473   002FF2  6E5E               	movwf	??___fladd^0,c
 20474   002FF4  505D               	movf	(___fladd@a+3)^0,w,c
 20475   002FF6  0A80               	xorlw	128
 20476   002FF8  585E               	subwfb	??___fladd^0,w,c
 20477   002FFA  B0D8               	btfsc	status,0,c
 20478   002FFC  EF02  F018         	goto	u9731
 20479   003000  EF04  F018         	goto	u9730
 20480   003004                     u9731:
 20481   003004  EF2F  F018         	goto	l8530
 20482   003008                     u9730:
 20483   003008  5056               	movf	___fladd@b^0,w,c
 20484   00300A  5C5A               	subwf	___fladd@a^0,w,c
 20485   00300C  6E5E               	movwf	??___fladd^0,c
 20486   00300E  5057               	movf	(___fladd@b+1)^0,w,c
 20487   003010  585B               	subwfb	(___fladd@a+1)^0,w,c
 20488   003012  6E5F               	movwf	(??___fladd+1)^0,c
 20489   003014  5058               	movf	(___fladd@b+2)^0,w,c
 20490   003016  585C               	subwfb	(___fladd@a+2)^0,w,c
 20491   003018  6E60               	movwf	(??___fladd+2)^0,c
 20492   00301A  5059               	movf	(___fladd@b+3)^0,w,c
 20493   00301C  585D               	subwfb	(___fladd@a+3)^0,w,c
 20494   00301E  6E61               	movwf	(??___fladd+3)^0,c
 20495   003020  0EFF               	movlw	255
 20496   003022  245E               	addwf	??___fladd^0,w,c
 20497   003024  6E56               	movwf	___fladd@b^0,c
 20498   003026  0EFF               	movlw	255
 20499   003028  205F               	addwfc	(??___fladd+1)^0,w,c
 20500   00302A  6E57               	movwf	(___fladd@b+1)^0,c
 20501   00302C  0EFF               	movlw	255
 20502   00302E  2060               	addwfc	(??___fladd+2)^0,w,c
 20503   003030  6E58               	movwf	(___fladd@b+2)^0,c
 20504   003032  0EFF               	movlw	255
 20505   003034  2061               	addwfc	(??___fladd+3)^0,w,c
 20506   003036  6E59               	movwf	(___fladd@b+3)^0,c
 20507   003038  0E80               	movlw	128
 20508   00303A  1A62               	xorwf	___fladd@signs^0,f,c
 20509   00303C  6C65               	negf	___fladd@grs^0,c
 20510   00303E  5065               	movf	___fladd@grs^0,w,c
 20511   003040  A4D8               	btfss	status,2,c
 20512   003042  EF25  F018         	goto	u9741
 20513   003046  EF27  F018         	goto	u9740
 20514   00304A                     u9741:
 20515   00304A  EF37  F018         	goto	l1001
 20516   00304E                     u9740:
 20517   00304E  0E01               	movlw	1
 20518   003050  2656               	addwf	___fladd@b^0,f,c
 20519   003052  0E00               	movlw	0
 20520   003054  2257               	addwfc	(___fladd@b+1)^0,f,c
 20521   003056  2258               	addwfc	(___fladd@b+2)^0,f,c
 20522   003058  2259               	addwfc	(___fladd@b+3)^0,f,c
 20523   00305A  EF37  F018         	goto	l1001
 20524   00305E                     l8530:
 20525   00305E  505A               	movf	___fladd@a^0,w,c
 20526   003060  5E56               	subwf	___fladd@b^0,f,c
 20527   003062  505B               	movf	(___fladd@a+1)^0,w,c
 20528   003064  5A57               	subwfb	(___fladd@b+1)^0,f,c
 20529   003066  505C               	movf	(___fladd@a+2)^0,w,c
 20530   003068  5A58               	subwfb	(___fladd@b+2)^0,f,c
 20531   00306A  505D               	movf	(___fladd@a+3)^0,w,c
 20532   00306C  5A59               	subwfb	(___fladd@b+3)^0,f,c
 20533   00306E                     l1001:
 20534   00306E  5056               	movf	___fladd@b^0,w,c
 20535   003070  1057               	iorwf	(___fladd@b+1)^0,w,c
 20536   003072  1058               	iorwf	(___fladd@b+2)^0,w,c
 20537   003074  1059               	iorwf	(___fladd@b+3)^0,w,c
 20538   003076  A4D8               	btfss	status,2,c
 20539   003078  EF40  F018         	goto	u9751
 20540   00307C  EF42  F018         	goto	u9750
 20541   003080                     u9751:
 20542   003080  EF77  F018         	goto	l8554
 20543   003084                     u9750:
 20544   003084  5065               	movf	___fladd@grs^0,w,c
 20545   003086  A4D8               	btfss	status,2,c
 20546   003088  EF48  F018         	goto	u9761
 20547   00308C  EF4A  F018         	goto	u9760
 20548   003090                     u9761:
 20549   003090  EF77  F018         	goto	l8554
 20550   003094                     u9760:
 20551   003094  0E00               	movlw	0
 20552   003096  6E56               	movwf	?___fladd^0,c
 20553   003098  0E00               	movlw	0
 20554   00309A  6E57               	movwf	(?___fladd+1)^0,c
 20555   00309C  0E00               	movlw	0
 20556   00309E  6E58               	movwf	(?___fladd+2)^0,c
 20557   0030A0  0E00               	movlw	0
 20558   0030A2  6E59               	movwf	(?___fladd+3)^0,c
 20559   0030A4  EF12  F019         	goto	l993
 20560   0030A8                     l8538:
 20561   0030A8  90D8               	bcf	status,0,c
 20562   0030AA  3656               	rlcf	___fladd@b^0,f,c
 20563   0030AC  3657               	rlcf	(___fladd@b+1)^0,f,c
 20564   0030AE  3658               	rlcf	(___fladd@b+2)^0,f,c
 20565   0030B0  3659               	rlcf	(___fladd@b+3)^0,f,c
 20566   0030B2  AE65               	btfss	___fladd@grs^0,7,c
 20567   0030B4  EF5E  F018         	goto	u9771
 20568   0030B8  EF60  F018         	goto	u9770
 20569   0030BC                     u9771:
 20570   0030BC  EF61  F018         	goto	l8544
 20571   0030C0                     u9770:
 20572   0030C0  8056               	bsf	___fladd@b^0,0,c
 20573   0030C2                     l8544:
 20574   0030C2  A065               	btfss	___fladd@grs^0,0,c
 20575   0030C4  EF66  F018         	goto	u9781
 20576   0030C8  EF68  F018         	goto	u9780
 20577   0030CC                     u9781:
 20578   0030CC  EF6C  F018         	goto	l8548
 20579   0030D0                     u9780:
 20580   0030D0  80D8               	bsf	status,0,c
 20581   0030D2  3665               	rlcf	___fladd@grs^0,f,c
 20582   0030D4  EF6E  F018         	goto	l8550
 20583   0030D8                     l8548:
 20584   0030D8  90D8               	bcf	status,0,c
 20585   0030DA  3665               	rlcf	___fladd@grs^0,f,c
 20586   0030DC                     l8550:
 20587   0030DC  5064               	movf	___fladd@bexp^0,w,c
 20588   0030DE  B4D8               	btfsc	status,2,c
 20589   0030E0  EF74  F018         	goto	u9791
 20590   0030E4  EF76  F018         	goto	u9790
 20591   0030E8                     u9791:
 20592   0030E8  EF77  F018         	goto	l8554
 20593   0030EC                     u9790:
 20594   0030EC  0664               	decf	___fladd@bexp^0,f,c
 20595   0030EE                     l8554:
 20596   0030EE  AE58               	btfss	(___fladd@b+2)^0,7,c
 20597   0030F0  EF7C  F018         	goto	u9801
 20598   0030F4  EF7E  F018         	goto	u9800
 20599   0030F8                     u9801:
 20600   0030F8  EF54  F018         	goto	l8538
 20601   0030FC                     u9800:
 20602   0030FC                     l8556:
 20603   0030FC  0E00               	movlw	0
 20604   0030FE  6E63               	movwf	___fladd@aexp^0,c
 20605   003100  AE65               	btfss	___fladd@grs^0,7,c
 20606   003102  EF85  F018         	goto	u9811
 20607   003106  EF87  F018         	goto	u9810
 20608   00310A                     u9811:
 20609   00310A  EF9F  F018         	goto	l1010
 20610   00310E                     u9810:
 20611   00310E  C065  F05E         	movff	___fladd@grs,??___fladd
 20612   003112  0E7F               	movlw	127
 20613   003114  165E               	andwf	??___fladd^0,f,c
 20614   003116  B4D8               	btfsc	status,2,c
 20615   003118  EF90  F018         	goto	u9821
 20616   00311C  EF92  F018         	goto	u9820
 20617   003120                     u9821:
 20618   003120  EF96  F018         	goto	l1011
 20619   003124                     u9820:
 20620   003124                     l8562:
 20621   003124  0E01               	movlw	1
 20622   003126  6E63               	movwf	___fladd@aexp^0,c
 20623   003128  EF9F  F018         	goto	l1010
 20624   00312C                     l1011:
 20625   00312C  A056               	btfss	___fladd@b^0,0,c
 20626   00312E  EF9B  F018         	goto	u9831
 20627   003132  EF9D  F018         	goto	u9830
 20628   003136                     u9831:
 20629   003136  EF9F  F018         	goto	l1010
 20630   00313A                     u9830:
 20631   00313A  EF92  F018         	goto	l8562
 20632   00313E                     l1010:
 20633   00313E  5063               	movf	___fladd@aexp^0,w,c
 20634   003140  B4D8               	btfsc	status,2,c
 20635   003142  EFA5  F018         	goto	u9841
 20636   003146  EFA7  F018         	goto	u9840
 20637   00314A                     u9841:
 20638   00314A  EFD2  F018         	goto	l8574
 20639   00314E                     u9840:
 20640   00314E  0E01               	movlw	1
 20641   003150  2656               	addwf	___fladd@b^0,f,c
 20642   003152  0E00               	movlw	0
 20643   003154  2257               	addwfc	(___fladd@b+1)^0,f,c
 20644   003156  2258               	addwfc	(___fladd@b+2)^0,f,c
 20645   003158  2259               	addwfc	(___fladd@b+3)^0,f,c
 20646   00315A  A059               	btfss	(___fladd@b+3)^0,0,c
 20647   00315C  EFB2  F018         	goto	u9851
 20648   003160  EFB4  F018         	goto	u9850
 20649   003164                     u9851:
 20650   003164  EFD2  F018         	goto	l8574
 20651   003168                     u9850:
 20652   003168  C056  F05E         	movff	___fladd@b,??___fladd
 20653   00316C  C057  F05F         	movff	___fladd@b+1,??___fladd+1
 20654   003170  C058  F060         	movff	___fladd@b+2,??___fladd+2
 20655   003174  C059  F061         	movff	___fladd@b+3,??___fladd+3
 20656   003178  3461               	rlcf	(??___fladd+3)^0,w,c
 20657   00317A  3261               	rrcf	(??___fladd+3)^0,f,c
 20658   00317C  3260               	rrcf	(??___fladd+2)^0,f,c
 20659   00317E  325F               	rrcf	(??___fladd+1)^0,f,c
 20660   003180  325E               	rrcf	??___fladd^0,f,c
 20661   003182  C05E  F056         	movff	??___fladd,___fladd@b
 20662   003186  C05F  F057         	movff	??___fladd+1,___fladd@b+1
 20663   00318A  C060  F058         	movff	??___fladd+2,___fladd@b+2
 20664   00318E  C061  F059         	movff	??___fladd+3,___fladd@b+3
 20665   003192  2864               	incf	___fladd@bexp^0,w,c
 20666   003194  B4D8               	btfsc	status,2,c
 20667   003196  EFCF  F018         	goto	u9861
 20668   00319A  EFD1  F018         	goto	u9860
 20669   00319E                     u9861:
 20670   00319E  EFD2  F018         	goto	l8574
 20671   0031A2                     u9860:
 20672   0031A2  2A64               	incf	___fladd@bexp^0,f,c
 20673   0031A4                     l8574:
 20674   0031A4  2864               	incf	___fladd@bexp^0,w,c
 20675   0031A6  B4D8               	btfsc	status,2,c
 20676   0031A8  EFD8  F018         	goto	u9871
 20677   0031AC  EFDA  F018         	goto	u9870
 20678   0031B0                     u9871:
 20679   0031B0  EFE2  F018         	goto	l8578
 20680   0031B4                     u9870:
 20681   0031B4  5064               	movf	___fladd@bexp^0,w,c
 20682   0031B6  A4D8               	btfss	status,2,c
 20683   0031B8  EFE0  F018         	goto	u9881
 20684   0031BC  EFE2  F018         	goto	u9880
 20685   0031C0                     u9881:
 20686   0031C0  EFF4  F018         	goto	l8582
 20687   0031C4                     u9880:
 20688   0031C4                     l8578:
 20689   0031C4  0E00               	movlw	0
 20690   0031C6  6E56               	movwf	___fladd@b^0,c
 20691   0031C8  0E00               	movlw	0
 20692   0031CA  6E57               	movwf	(___fladd@b+1)^0,c
 20693   0031CC  0E00               	movlw	0
 20694   0031CE  6E58               	movwf	(___fladd@b+2)^0,c
 20695   0031D0  0E00               	movlw	0
 20696   0031D2  6E59               	movwf	(___fladd@b+3)^0,c
 20697   0031D4  5064               	movf	___fladd@bexp^0,w,c
 20698   0031D6  A4D8               	btfss	status,2,c
 20699   0031D8  EFF0  F018         	goto	u9891
 20700   0031DC  EFF2  F018         	goto	u9890
 20701   0031E0                     u9891:
 20702   0031E0  EFF4  F018         	goto	l8582
 20703   0031E4                     u9890:
 20704   0031E4  0E00               	movlw	0
 20705   0031E6  6E62               	movwf	___fladd@signs^0,c
 20706   0031E8                     l8582:
 20707   0031E8  A064               	btfss	___fladd@bexp^0,0,c
 20708   0031EA  EFF9  F018         	goto	u9901
 20709   0031EE  EFFB  F018         	goto	u9900
 20710   0031F2                     u9901:
 20711   0031F2  EFFE  F018         	goto	l8586
 20712   0031F6                     u9900:
 20713   0031F6  8E58               	bsf	(___fladd@b+2)^0,7,c
 20714   0031F8  EFFF  F018         	goto	l8588
 20715   0031FC                     l8586:
 20716   0031FC  9E58               	bcf	(___fladd@b+2)^0,7,c
 20717   0031FE                     l8588:
 20718   0031FE  90D8               	bcf	status,0,c
 20719   003200  3064               	rrcf	___fladd@bexp^0,w,c
 20720   003202  6E59               	movwf	(___fladd@b+3)^0,c
 20721   003204  AE62               	btfss	___fladd@signs^0,7,c
 20722   003206  EF07  F019         	goto	u9911
 20723   00320A  EF09  F019         	goto	u9910
 20724   00320E                     u9911:
 20725   00320E  EF0A  F019         	goto	l8594
 20726   003212                     u9910:
 20727   003212  8E59               	bsf	(___fladd@b+3)^0,7,c
 20728   003214                     l8594:
 20729   003214  C056  F056         	movff	___fladd@b,?___fladd
 20730   003218  C057  F057         	movff	___fladd@b+1,?___fladd+1
 20731   00321C  C058  F058         	movff	___fladd@b+2,?___fladd+2
 20732   003220  C059  F059         	movff	___fladd@b+3,?___fladd+3
 20733   003224                     l993:
 20734   003224  0012               	return		;funcret
 20735   003226                     __end_of___fladd:
 20736                           	callstack 0
 20737                           
 20738 ;; *************** function ___flneg *****************
 20739 ;; Defined at:
 20740 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 20741 ;; Parameters:    Size  Location     Type
 20742 ;;  f1              4    0[COMRAM] unsigned char 
 20743 ;; Auto vars:     Size  Location     Type
 20744 ;;		None
 20745 ;; Return value:  Size  Location     Type
 20746 ;;                  4    0[COMRAM] unsigned char 
 20747 ;; Registers used:
 20748 ;;		wreg, status,2, status,0
 20749 ;; Tracked objects:
 20750 ;;		On entry : 0/0
 20751 ;;		On exit  : 0/0
 20752 ;;		Unchanged: 0/0
 20753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20754 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20757 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20758 ;;Total ram usage:        4 bytes
 20759 ;; Hardware stack levels used: 1
 20760 ;; Hardware stack levels required when called: 1
 20761 ;; This function calls:
 20762 ;;		Nothing
 20763 ;; This function is called by:
 20764 ;;		_fabs
 20765 ;;		_AbsorptionCoefficentCalc
 20766 ;;		_atoa
 20767 ;;		_efgtoa
 20768 ;; This function uses a non-reentrant model
 20769 ;;
 20770                           
 20771                           	psect	text71
 20772   0077DE                     __ptext71:
 20773                           	callstack 0
 20774   0077DE                     ___flneg:
 20775                           	callstack 22
 20776   0077DE  5001               	movf	___flneg@f1^0,w,c
 20777   0077E0  1002               	iorwf	(___flneg@f1+1)^0,w,c
 20778   0077E2  1003               	iorwf	(___flneg@f1+2)^0,w,c
 20779   0077E4  1004               	iorwf	(___flneg@f1+3)^0,w,c
 20780   0077E6  B4D8               	btfsc	status,2,c
 20781   0077E8  EFF8  F03B         	goto	u10221
 20782   0077EC  EFFA  F03B         	goto	u10220
 20783   0077F0                     u10221:
 20784   0077F0  EF02  F03C         	goto	l8786
 20785   0077F4                     u10220:
 20786   0077F4  0E00               	movlw	0
 20787   0077F6  1A01               	xorwf	___flneg@f1^0,f,c
 20788   0077F8  0E00               	movlw	0
 20789   0077FA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 20790   0077FC  0E00               	movlw	0
 20791   0077FE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 20792   007800  0E80               	movlw	128
 20793   007802  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 20794   007804                     l8786:
 20795   007804  C001  F001         	movff	___flneg@f1,?___flneg
 20796   007808  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 20797   00780C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 20798   007810  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 20799   007814  0012               	return		;funcret
 20800   007816                     __end_of___flneg:
 20801                           	callstack 0
 20802                           
 20803 ;; *************** function ___flge *****************
 20804 ;; Defined at:
 20805 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 20806 ;; Parameters:    Size  Location     Type
 20807 ;;  ff1             4    4[BANK0 ] unsigned char 
 20808 ;;  ff2             4    8[BANK0 ] unsigned char 
 20809 ;; Auto vars:     Size  Location     Type
 20810 ;;		None
 20811 ;; Return value:  Size  Location     Type
 20812 ;;		None               void
 20813 ;; Registers used:
 20814 ;;		wreg, status,2, status,0
 20815 ;; Tracked objects:
 20816 ;;		On entry : 0/0
 20817 ;;		On exit  : 0/0
 20818 ;;		Unchanged: 0/0
 20819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20820 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20822 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20823 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20824 ;;Total ram usage:       12 bytes
 20825 ;; Hardware stack levels used: 1
 20826 ;; Hardware stack levels required when called: 1
 20827 ;; This function calls:
 20828 ;;		Nothing
 20829 ;; This function is called by:
 20830 ;;		_main
 20831 ;;		_WaitPeriod
 20832 ;;		_AbsorptionCoefficentCalc
 20833 ;;		_OxygenSPO2Calc
 20834 ;;		_HeartRateCalc
 20835 ;;		_TimerPeriodCheck
 20836 ;;		_atoa
 20837 ;;		_efgtoa
 20838 ;; This function uses a non-reentrant model
 20839 ;;
 20840                           
 20841                           	psect	text72
 20842   006638                     __ptext72:
 20843                           	callstack 0
 20844   006638                     ___flge:
 20845                           	callstack 22
 20846   006638  0E00               	movlw	0
 20847   00663A  0100               	movlb	0	; () banked
 20848   00663C  1584               	andwf	___flge@ff1& (0+255),w,b
 20849   00663E  6F8C               	movwf	??___flge& (0+255),b
 20850   006640  0E00               	movlw	0
 20851   006642  1585               	andwf	(___flge@ff1+1)& (0+255),w,b
 20852   006644  6F8D               	movwf	(??___flge+1)& (0+255),b
 20853   006646  0E80               	movlw	128
 20854   006648  1586               	andwf	(___flge@ff1+2)& (0+255),w,b
 20855   00664A  6F8E               	movwf	(??___flge+2)& (0+255),b
 20856   00664C  0E7F               	movlw	127
 20857   00664E  1587               	andwf	(___flge@ff1+3)& (0+255),w,b
 20858   006650  6F8F               	movwf	(??___flge+3)& (0+255),b
 20859   006652  518C               	movf	??___flge& (0+255),w,b
 20860   006654  118D               	iorwf	(??___flge+1)& (0+255),w,b
 20861   006656  118E               	iorwf	(??___flge+2)& (0+255),w,b
 20862   006658  118F               	iorwf	(??___flge+3)& (0+255),w,b
 20863   00665A  A4D8               	btfss	status,2,c
 20864   00665C  EF32  F033         	goto	u10171
 20865   006660  EF34  F033         	goto	u10170
 20866   006664                     u10171:
 20867   006664  EF3C  F033         	goto	l8764
 20868   006668                     u10170:
 20869   006668                     
 20870                           ; BSR set to: 0
 20871   006668  0E00               	movlw	0
 20872   00666A  6F84               	movwf	___flge@ff1& (0+255),b
 20873   00666C  0E00               	movlw	0
 20874   00666E  6F85               	movwf	(___flge@ff1+1)& (0+255),b
 20875   006670  0E00               	movlw	0
 20876   006672  6F86               	movwf	(___flge@ff1+2)& (0+255),b
 20877   006674  0E00               	movlw	0
 20878   006676  6F87               	movwf	(___flge@ff1+3)& (0+255),b
 20879   006678                     l8764:
 20880                           
 20881                           ; BSR set to: 0
 20882   006678  0E00               	movlw	0
 20883   00667A  1588               	andwf	___flge@ff2& (0+255),w,b
 20884   00667C  6F8C               	movwf	??___flge& (0+255),b
 20885   00667E  0E00               	movlw	0
 20886   006680  1589               	andwf	(___flge@ff2+1)& (0+255),w,b
 20887   006682  6F8D               	movwf	(??___flge+1)& (0+255),b
 20888   006684  0E80               	movlw	128
 20889   006686  158A               	andwf	(___flge@ff2+2)& (0+255),w,b
 20890   006688  6F8E               	movwf	(??___flge+2)& (0+255),b
 20891   00668A  0E7F               	movlw	127
 20892   00668C  158B               	andwf	(___flge@ff2+3)& (0+255),w,b
 20893   00668E  6F8F               	movwf	(??___flge+3)& (0+255),b
 20894   006690  518C               	movf	??___flge& (0+255),w,b
 20895   006692  118D               	iorwf	(??___flge+1)& (0+255),w,b
 20896   006694  118E               	iorwf	(??___flge+2)& (0+255),w,b
 20897   006696  118F               	iorwf	(??___flge+3)& (0+255),w,b
 20898   006698  A4D8               	btfss	status,2,c
 20899   00669A  EF51  F033         	goto	u10181
 20900   00669E  EF53  F033         	goto	u10180
 20901   0066A2                     u10181:
 20902   0066A2  EF5B  F033         	goto	l8768
 20903   0066A6                     u10180:
 20904   0066A6                     
 20905                           ; BSR set to: 0
 20906   0066A6  0E00               	movlw	0
 20907   0066A8  6F88               	movwf	___flge@ff2& (0+255),b
 20908   0066AA  0E00               	movlw	0
 20909   0066AC  6F89               	movwf	(___flge@ff2+1)& (0+255),b
 20910   0066AE  0E00               	movlw	0
 20911   0066B0  6F8A               	movwf	(___flge@ff2+2)& (0+255),b
 20912   0066B2  0E00               	movlw	0
 20913   0066B4  6F8B               	movwf	(___flge@ff2+3)& (0+255),b
 20914   0066B6                     l8768:
 20915                           
 20916                           ; BSR set to: 0
 20917   0066B6  AF87               	btfss	(___flge@ff1+3)& (0+255),7,b
 20918   0066B8  EF60  F033         	goto	u10191
 20919   0066BC  EF62  F033         	goto	u10190
 20920   0066C0                     u10191:
 20921   0066C0  EF6B  F033         	goto	l8772
 20922   0066C4                     u10190:
 20923   0066C4                     
 20924                           ; BSR set to: 0
 20925   0066C4  6D84               	negf	___flge@ff1& (0+255),b
 20926   0066C6  1F85               	comf	(___flge@ff1+1)& (0+255),f,b
 20927   0066C8  B0D8               	btfsc	status,0,c
 20928   0066CA  2B85               	incf	(___flge@ff1+1)& (0+255),f,b
 20929   0066CC  1F86               	comf	(___flge@ff1+2)& (0+255),f,b
 20930   0066CE  B0D8               	btfsc	status,0,c
 20931   0066D0  2B86               	incf	(___flge@ff1+2)& (0+255),f,b
 20932   0066D2  0E80               	movlw	128
 20933   0066D4  5787               	subfwb	(___flge@ff1+3)& (0+255),f,b
 20934   0066D6                     l8772:
 20935                           
 20936                           ; BSR set to: 0
 20937   0066D6  AF8B               	btfss	(___flge@ff2+3)& (0+255),7,b
 20938   0066D8  EF70  F033         	goto	u10201
 20939   0066DC  EF72  F033         	goto	u10200
 20940   0066E0                     u10201:
 20941   0066E0  EF7B  F033         	goto	l721
 20942   0066E4                     u10200:
 20943   0066E4                     
 20944                           ; BSR set to: 0
 20945   0066E4  6D88               	negf	___flge@ff2& (0+255),b
 20946   0066E6  1F89               	comf	(___flge@ff2+1)& (0+255),f,b
 20947   0066E8  B0D8               	btfsc	status,0,c
 20948   0066EA  2B89               	incf	(___flge@ff2+1)& (0+255),f,b
 20949   0066EC  1F8A               	comf	(___flge@ff2+2)& (0+255),f,b
 20950   0066EE  B0D8               	btfsc	status,0,c
 20951   0066F0  2B8A               	incf	(___flge@ff2+2)& (0+255),f,b
 20952   0066F2  0E80               	movlw	128
 20953   0066F4  578B               	subfwb	(___flge@ff2+3)& (0+255),f,b
 20954   0066F6                     l721:
 20955                           
 20956                           ; BSR set to: 0
 20957   0066F6  0E00               	movlw	0
 20958   0066F8  1B84               	xorwf	___flge@ff1& (0+255),f,b
 20959   0066FA  0E00               	movlw	0
 20960   0066FC  1B85               	xorwf	(___flge@ff1+1)& (0+255),f,b
 20961   0066FE  0E00               	movlw	0
 20962   006700  1B86               	xorwf	(___flge@ff1+2)& (0+255),f,b
 20963   006702  0E80               	movlw	128
 20964   006704  1B87               	xorwf	(___flge@ff1+3)& (0+255),f,b
 20965   006706  0E00               	movlw	0
 20966   006708  1B88               	xorwf	___flge@ff2& (0+255),f,b
 20967   00670A  0E00               	movlw	0
 20968   00670C  1B89               	xorwf	(___flge@ff2+1)& (0+255),f,b
 20969   00670E  0E00               	movlw	0
 20970   006710  1B8A               	xorwf	(___flge@ff2+2)& (0+255),f,b
 20971   006712  0E80               	movlw	128
 20972   006714  1B8B               	xorwf	(___flge@ff2+3)& (0+255),f,b
 20973   006716  5188               	movf	___flge@ff2& (0+255),w,b
 20974   006718  5D84               	subwf	___flge@ff1& (0+255),w,b
 20975   00671A  5189               	movf	(___flge@ff2+1)& (0+255),w,b
 20976   00671C  5985               	subwfb	(___flge@ff1+1)& (0+255),w,b
 20977   00671E  518A               	movf	(___flge@ff2+2)& (0+255),w,b
 20978   006720  5986               	subwfb	(___flge@ff1+2)& (0+255),w,b
 20979   006722  518B               	movf	(___flge@ff2+3)& (0+255),w,b
 20980   006724  5987               	subwfb	(___flge@ff1+3)& (0+255),w,b
 20981   006726  B0D8               	btfsc	status,0,c
 20982   006728  EF98  F033         	goto	u10211
 20983   00672C  EF9A  F033         	goto	u10210
 20984   006730                     u10211:
 20985   006730  EF9D  F033         	goto	l8778
 20986   006734                     u10210:
 20987   006734                     
 20988                           ; BSR set to: 0
 20989   006734  90D8               	bcf	status,0,c
 20990   006736  EF9E  F033         	goto	l726
 20991   00673A                     l8778:
 20992                           
 20993                           ; BSR set to: 0
 20994   00673A  80D8               	bsf	status,0,c
 20995   00673C                     l726:
 20996                           
 20997                           ; BSR set to: 0
 20998   00673C  0012               	return		;funcret
 20999   00673E                     __end_of___flge:
 21000                           	callstack 0
 21001                           
 21002 ;; *************** function _isr *****************
 21003 ;; Defined at:
 21004 ;;		line 118 in file "functions.c"
 21005 ;; Parameters:    Size  Location     Type
 21006 ;;		None
 21007 ;; Auto vars:     Size  Location     Type
 21008 ;;		None
 21009 ;; Return value:  Size  Location     Type
 21010 ;;                  1    wreg      void 
 21011 ;; Registers used:
 21012 ;;		wreg, status,2, status,0
 21013 ;; Tracked objects:
 21014 ;;		On entry : 0/0
 21015 ;;		On exit  : 0/0
 21016 ;;		Unchanged: 0/0
 21017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21022 ;;Total ram usage:        0 bytes
 21023 ;; Hardware stack levels used: 1
 21024 ;; This function calls:
 21025 ;;		Nothing
 21026 ;; This function is called by:
 21027 ;;		Interrupt level 2
 21028 ;; This function uses a non-reentrant model
 21029 ;;
 21030                           
 21031                           	psect	intcode
 21032   000008                     __pintcode:
 21033                           	callstack 0
 21034   000008                     _isr:
 21035                           	callstack 16
 21036                           
 21037                           ; BSR set to: 0
 21038                           ;incstack = 0
 21039   000008  827F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 21040   00000A  ED56  F03C         	call	int_func,f	;refresh shadow registers
 21041                           
 21042                           	psect	intcode_body
 21043   0078AC                     __pintcode_body:
 21044                           	callstack 16
 21045   0078AC                     int_func:
 21046                           	callstack 16
 21047   0078AC  0006               	pop		; remove dummy address from shadow register refresh
 21048   0078AE                     
 21049                           ;functions.c: 119:     if (TMR1IF) {
 21050   0078AE  A09E               	btfss	3998,0,c	;volatile
 21051   0078B0  EF5C  F03C         	goto	i2u948_41
 21052   0078B4  EF5E  F03C         	goto	i2u948_40
 21053   0078B8                     i2u948_41:
 21054   0078B8  EF6A  F03C         	goto	i2l300
 21055   0078BC                     i2u948_40:
 21056   0078BC                     
 21057                           ;functions.c: 120:         TMR1IF = 0;
 21058   0078BC  909E               	bcf	3998,0,c	;volatile
 21059   0078BE                     
 21060                           ;functions.c: 121:         TMR1H = 0x00;
 21061   0078BE  0E00               	movlw	0
 21062   0078C0  6ECF               	movwf	207,c	;volatile
 21063                           
 21064                           ;functions.c: 122:         TMR1L = 0x00;
 21065   0078C2  0E00               	movlw	0
 21066   0078C4  6ECE               	movwf	206,c	;volatile
 21067   0078C6                     
 21068                           ;functions.c: 123:         timerOverflowCount++;
 21069   0078C6  0E01               	movlw	1
 21070   0078C8  0101               	movlb	1	; () banked
 21071   0078CA  278C               	addwf	_timerOverflowCount& (0+255),f,b	;volatile
 21072   0078CC  0E00               	movlw	0
 21073   0078CE  238D               	addwfc	(_timerOverflowCount+1)& (0+255),f,b	;volatile
 21074   0078D0  238E               	addwfc	(_timerOverflowCount+2)& (0+255),f,b	;volatile
 21075   0078D2  238F               	addwfc	(_timerOverflowCount+3)& (0+255),f,b	;volatile
 21076   0078D4                     i2l300:
 21077   0078D4  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 21078   0078D6  0011               	retfie		f
 21079   0078D8                     __end_of_isr:
 21080                           	callstack 0
 21081                           
 21082                           	psect	rparam
 21083   000000                     
 21084                           	psect	temp
 21085   00007F                     btemp:
 21086                           	callstack 0
 21087   00007F                     	ds	1
 21088   000000                     int$flags	set	btemp
 21089   000000                     wtemp8	set	btemp+1
 21090   000000                     ttemp5	set	btemp+1
 21091   000000                     ttemp6	set	btemp+4
 21092   000000                     ttemp7	set	btemp+8
 21093                           
 21094                           	psect	config
 21095                           
 21096                           ; Padding undefined space
 21097   300000                     	org	3145728
 21098   300000  FF                 	db	255
 21099                           
 21100                           ;Config register CONFIG1H @ 0x300001
 21101                           ;	Oscillator Selection bits
 21102                           ;	OSC = INTIO7, Internal oscillator block, CLKOUT function on RA6, port function on RA7
 21103                           ;	Fail-Safe Clock Monitor Enable bit
 21104                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 21105                           ;	Internal/External Oscillator Switchover bit
 21106                           ;	IESO = OFF, Oscillator Switchover mode disabled
 21107   300001                     	org	3145729
 21108   300001  09                 	db	9
 21109                           
 21110                           ;Config register CONFIG2L @ 0x300002
 21111                           ;	Power-up Timer Enable bit
 21112                           ;	PWRT = ON, PWRT enabled
 21113                           ;	Brown-out Reset Enable bits
 21114                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 21115                           ;	Brown Out Reset Voltage bits
 21116                           ;	BORV = 2, 
 21117   300002                     	org	3145730
 21118   300002  16                 	db	22
 21119                           
 21120                           ;Config register CONFIG2H @ 0x300003
 21121                           ;	Watchdog Timer Enable bit
 21122                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 21123                           ;	Watchdog Timer Postscale Select bits
 21124                           ;	WDTPS = 32768, 1:32768
 21125   300003                     	org	3145731
 21126   300003  1E                 	db	30
 21127                           
 21128                           ; Padding undefined space
 21129   300004                     	org	3145732
 21130   300004  FF                 	db	255
 21131                           
 21132                           ;Config register CONFIG3H @ 0x300005
 21133                           ;	CCP2 MUX bit
 21134                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 21135                           ;	PORTB A/D Enable bit
 21136                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 21137                           ;	Low-Power Timer1 Oscillator Enable bit
 21138                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 21139                           ;	MCLR Pin Enable bit
 21140                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 21141   300005                     	org	3145733
 21142   300005  83                 	db	131
 21143                           
 21144                           ;Config register CONFIG4L @ 0x300006
 21145                           ;	Stack Full/Underflow Reset Enable bit
 21146                           ;	STVREN = ON, Stack full/underflow will cause Reset
 21147                           ;	Single-Supply ICSP Enable bit
 21148                           ;	LVP = OFF, Single-Supply ICSP disabled
 21149                           ;	Extended Instruction Set Enable bit
 21150                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 21151                           ;	Background Debugger Enable bit
 21152                           ;	DEBUG = 0x1, unprogrammed default
 21153   300006                     	org	3145734
 21154   300006  81                 	db	129
 21155                           
 21156                           ; Padding undefined space
 21157   300007                     	org	3145735
 21158   300007  FF                 	db	255
 21159                           
 21160                           ;Config register CONFIG5L @ 0x300008
 21161                           ;	Code Protection bit
 21162                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 21163                           ;	Code Protection bit
 21164                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 21165                           ;	Code Protection bit
 21166                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 21167                           ;	Code Protection bit
 21168                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 21169   300008                     	org	3145736
 21170   300008  0F                 	db	15
 21171                           
 21172                           ;Config register CONFIG5H @ 0x300009
 21173                           ;	Boot Block Code Protection bit
 21174                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 21175                           ;	Data EEPROM Code Protection bit
 21176                           ;	CPD = OFF, Data EEPROM not code-protected
 21177   300009                     	org	3145737
 21178   300009  C0                 	db	192
 21179                           
 21180                           ;Config register CONFIG6L @ 0x30000A
 21181                           ;	Write Protection bit
 21182                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 21183                           ;	Write Protection bit
 21184                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 21185                           ;	Write Protection bit
 21186                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 21187                           ;	Write Protection bit
 21188                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 21189   30000A                     	org	3145738
 21190   30000A  0F                 	db	15
 21191                           
 21192                           ;Config register CONFIG6H @ 0x30000B
 21193                           ;	Configuration Register Write Protection bit
 21194                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 21195                           ;	Boot Block Write Protection bit
 21196                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 21197                           ;	Data EEPROM Write Protection bit
 21198                           ;	WRTD = OFF, Data EEPROM not write-protected
 21199   30000B                     	org	3145739
 21200   30000B  E0                 	db	224
 21201                           
 21202                           ;Config register CONFIG7L @ 0x30000C
 21203                           ;	Table Read Protection bit
 21204                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 21205                           ;	Table Read Protection bit
 21206                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 21207                           ;	Table Read Protection bit
 21208                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 21209                           ;	Table Read Protection bit
 21210                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 21211   30000C                     	org	3145740
 21212   30000C  0F                 	db	15
 21213                           
 21214                           ;Config register CONFIG7H @ 0x30000D
 21215                           ;	Boot Block Table Read Protection bit
 21216                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 21217   30000D                     	org	3145741
 21218   30000D  40                 	db	64
 21219                           tosu	equ	0xFFF
 21220                           tosh	equ	0xFFE
 21221                           tosl	equ	0xFFD
 21222                           stkptr	equ	0xFFC
 21223                           pclatu	equ	0xFFB
 21224                           pclath	equ	0xFFA
 21225                           pcl	equ	0xFF9
 21226                           tblptru	equ	0xFF8
 21227                           tblptrh	equ	0xFF7
 21228                           tblptrl	equ	0xFF6
 21229                           tablat	equ	0xFF5
 21230                           prodh	equ	0xFF4
 21231                           prodl	equ	0xFF3
 21232                           indf0	equ	0xFEF
 21233                           postinc0	equ	0xFEE
 21234                           postdec0	equ	0xFED
 21235                           preinc0	equ	0xFEC
 21236                           plusw0	equ	0xFEB
 21237                           fsr0h	equ	0xFEA
 21238                           fsr0l	equ	0xFE9
 21239                           wreg	equ	0xFE8
 21240                           indf1	equ	0xFE7
 21241                           postinc1	equ	0xFE6
 21242                           postdec1	equ	0xFE5
 21243                           preinc1	equ	0xFE4
 21244                           plusw1	equ	0xFE3
 21245                           fsr1h	equ	0xFE2
 21246                           fsr1l	equ	0xFE1
 21247                           bsr	equ	0xFE0
 21248                           indf2	equ	0xFDF
 21249                           postinc2	equ	0xFDE
 21250                           postdec2	equ	0xFDD
 21251                           preinc2	equ	0xFDC
 21252                           plusw2	equ	0xFDB
 21253                           fsr2h	equ	0xFDA
 21254                           fsr2l	equ	0xFD9
 21255                           status	equ	0xFD8

Data Sizes:
    Strings     687
    Constant    0
    Data        8
    BSS         560
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    126     126
    BANK0           128    127     127
    BANK1           256     62     254
    BANK2           256    256     256
    BANK3           256      0     120
    BANK4           256      0     256
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    atoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> vsnprintf@f(BANK1[12]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> vsnprintf@f(BANK1[12]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> vsnprintf@f(BANK1[12]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> vsnprintf@f(BANK1[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> vsnprintf@f(BANK1[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> vsnprintf@f(BANK1[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> vsnprintf@f(BANK1[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> vsnprintf@f(BANK1[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 2
		 -> UART1_SendFormatted@args(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1151$buffer	PTR unsigned char  size(2) Largest target is 0

    S1151$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> HR_val(BANK1[4]), STR_55(CODE[7]), ?_UART1_SendFormatted(BANK1[1]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> vsnprintf@f(BANK1[12]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 4
		 -> HR_val(BANK1[4]), ?_UART1_SendFormatted(BANK1[1]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_39(CODE[4]), STR_40(CODE[4]), STR_43(CODE[4]), STR_44(CODE[4]), 
		 -> STR_47(CODE[4]), STR_48(CODE[4]), STR_51(CODE[4]), STR_52(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    UART1_Send@data	PTR const unsigned char  size(2) Largest target is 256
		 -> UART1_SendFormatted@buffer(BANK2[256]), 

    UART1_SendFormatted@args	PTR void [1] size(2) Largest target is 1
		 -> ?_UART1_SendFormatted(BANK1[1]), 

    UART1_SendFormatted@format	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_1(CODE[19]), STR_10(CODE[24]), STR_11(CODE[27]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[18]), STR_15(CODE[14]), STR_16(CODE[13]), 
		 -> STR_17(CODE[16]), STR_18(CODE[16]), STR_19(CODE[14]), STR_2(CODE[19]), 
		 -> STR_20(CODE[15]), STR_21(CODE[13]), STR_22(CODE[17]), STR_23(CODE[7]), 
		 -> STR_24(CODE[13]), STR_25(CODE[13]), STR_26(CODE[15]), STR_27(CODE[13]), 
		 -> STR_28(CODE[14]), STR_29(CODE[58]), STR_3(CODE[38]), STR_30(CODE[24]), 
		 -> STR_31(CODE[3]), STR_32(CODE[2]), STR_33(CODE[4]), STR_34(CODE[4]), 
		 -> STR_35(CODE[26]), STR_36(CODE[27]), STR_37(CODE[5]), STR_38(CODE[5]), 
		 -> STR_4(CODE[15]), STR_5(CODE[76]), STR_6(CODE[24]), STR_7(CODE[24]), 
		 -> STR_8(CODE[24]), STR_9(CODE[21]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> vsnprintf@f(BANK1[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 2
		 -> UART1_SendFormatted@args(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 76
		 -> STR_1(CODE[19]), STR_10(CODE[24]), STR_11(CODE[27]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[18]), STR_15(CODE[14]), STR_16(CODE[13]), 
		 -> STR_17(CODE[16]), STR_18(CODE[16]), STR_19(CODE[14]), STR_2(CODE[19]), 
		 -> STR_20(CODE[15]), STR_21(CODE[13]), STR_22(CODE[17]), STR_23(CODE[7]), 
		 -> STR_24(CODE[13]), STR_25(CODE[13]), STR_26(CODE[15]), STR_27(CODE[13]), 
		 -> STR_28(CODE[14]), STR_29(CODE[58]), STR_3(CODE[38]), STR_30(CODE[24]), 
		 -> STR_31(CODE[3]), STR_32(CODE[2]), STR_33(CODE[4]), STR_34(CODE[4]), 
		 -> STR_35(CODE[26]), STR_36(CODE[27]), STR_37(CODE[5]), STR_38(CODE[5]), 
		 -> STR_4(CODE[15]), STR_5(CODE[76]), STR_6(CODE[24]), STR_7(CODE[24]), 
		 -> STR_8(CODE[24]), STR_9(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> vsnprintf@f(BANK1[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 2
		 -> UART1_SendFormatted@args(BANK0[2]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 76
		 -> STR_1(CODE[19]), STR_10(CODE[24]), STR_11(CODE[27]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[18]), STR_15(CODE[14]), STR_16(CODE[13]), 
		 -> STR_17(CODE[16]), STR_18(CODE[16]), STR_19(CODE[14]), STR_2(CODE[19]), 
		 -> STR_20(CODE[15]), STR_21(CODE[13]), STR_22(CODE[17]), STR_23(CODE[7]), 
		 -> STR_24(CODE[13]), STR_25(CODE[13]), STR_26(CODE[15]), STR_27(CODE[13]), 
		 -> STR_28(CODE[14]), STR_29(CODE[58]), STR_3(CODE[38]), STR_30(CODE[24]), 
		 -> STR_31(CODE[3]), STR_32(CODE[2]), STR_33(CODE[4]), STR_34(CODE[4]), 
		 -> STR_35(CODE[26]), STR_36(CODE[27]), STR_37(CODE[5]), STR_38(CODE[5]), 
		 -> STR_4(CODE[15]), STR_5(CODE[76]), STR_6(CODE[24]), STR_7(CODE[24]), 
		 -> STR_8(CODE[24]), STR_9(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_1(CODE[19]), STR_10(CODE[24]), STR_11(CODE[27]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[18]), STR_15(CODE[14]), STR_16(CODE[13]), 
		 -> STR_17(CODE[16]), STR_18(CODE[16]), STR_19(CODE[14]), STR_2(CODE[19]), 
		 -> STR_20(CODE[15]), STR_21(CODE[13]), STR_22(CODE[17]), STR_23(CODE[7]), 
		 -> STR_24(CODE[13]), STR_25(CODE[13]), STR_26(CODE[15]), STR_27(CODE[13]), 
		 -> STR_28(CODE[14]), STR_29(CODE[58]), STR_3(CODE[38]), STR_30(CODE[24]), 
		 -> STR_31(CODE[3]), STR_32(CODE[2]), STR_33(CODE[4]), STR_34(CODE[4]), 
		 -> STR_35(CODE[26]), STR_36(CODE[27]), STR_37(CODE[5]), STR_38(CODE[5]), 
		 -> STR_4(CODE[15]), STR_5(CODE[76]), STR_6(CODE[24]), STR_7(CODE[24]), 
		 -> STR_8(CODE[24]), STR_9(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> vsnprintf@f(BANK1[12]), 

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 2
		 -> UART1_SendFormatted@args(BANK0[2]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_1(CODE[19]), STR_10(CODE[24]), STR_11(CODE[27]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[18]), STR_15(CODE[14]), STR_16(CODE[13]), 
		 -> STR_17(CODE[16]), STR_18(CODE[16]), STR_19(CODE[14]), STR_2(CODE[19]), 
		 -> STR_20(CODE[15]), STR_21(CODE[13]), STR_22(CODE[17]), STR_23(CODE[7]), 
		 -> STR_24(CODE[13]), STR_25(CODE[13]), STR_26(CODE[15]), STR_27(CODE[13]), 
		 -> STR_28(CODE[14]), STR_29(CODE[58]), STR_3(CODE[38]), STR_30(CODE[24]), 
		 -> STR_31(CODE[3]), STR_32(CODE[2]), STR_33(CODE[4]), STR_34(CODE[4]), 
		 -> STR_35(CODE[26]), STR_36(CODE[27]), STR_37(CODE[5]), STR_38(CODE[5]), 
		 -> STR_4(CODE[15]), STR_5(CODE[76]), STR_6(CODE[24]), STR_7(CODE[24]), 
		 -> STR_8(CODE[24]), STR_9(CODE[21]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 256
		 -> UART1_SendFormatted@buffer(BANK2[256]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> vsnprintf@f(BANK1[12]), 


Critical Paths under _main in COMRAM

    _UART1_Init->___lldiv
    ___llmod->_micros
    _TimerPeriodCheck->___flsub
    _OxygenSPO2Calc->___flsub
    _HeartRateCalc->___flsub
    _fabs->___flsub
    _vfpfcnvrt->_efgtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->_pad
    _stoa->_fputc
    _read_prec_or_width->___wmul
    _otoa->_pad
    _efgtoa->___flsub
    _dtoa->___aodiv
    _abs->___aomod
    _ctoa->_fputc
    _atoa->___flsub
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fltol->___fladd
    _AbsorptionCoefficentCalc->___flsub
    _exp->___fladd
    ___xxtofl->___llmod
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___flsub->_exp
    ___fladd->___flmul
    ___flge->___flsub

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _setup->_StartPrinting
    _StartPrinting->_UART1_SendFormatted
    _FormatForPrint->_UART1_SendFormatted
    _DeviceInitialization->_UART1_SendFormatted
    _Setting->_DetectorTest
    _Setting->_ResistorAdjust
    _ResistorAdjust->_UART1_SendFormatted
    _DetectorTest->_UART1_SendFormatted
    _WaitReleaseSW1->_UART1_SendFormatted
    _WaitPeriod->___flge
    _TimerPeriodCheck->___flge
    _PrintNoData->_UART1_SendFormatted
    _OxygenSPO2Calc->___flge
    _HeartRateCalc->___flge
    _DataPrinting->_UART1_SendFormatted
    _UART1_SendFormatted->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _atoa->___flge
    _AbsorptionCoefficentCalc->___flge
    ___flge->_fabs

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_DataPrinting
    _setup->_ConfigurationCheck
    _StartPrinting->_UART1_SendFormatted
    _FormatForPrint->_UART1_SendFormatted
    _DeviceInitialization->_UART1_SendFormatted
    _ConfigurationCheck->_Setting
    _Setting->_UART1_SendFormatted
    _ResistorAdjust->_UART1_SendFormatted
    _DetectorTest->_UART1_SendFormatted
    _WaitReleaseSW1->_UART1_SendFormatted
    _PrintNoData->_UART1_SendFormatted
    _DataPrinting->_UART1_SendFormatted
    _UART1_SendFormatted->_vsnprintf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _StartPrinting->_UART1_SendFormatted
    _FormatForPrint->_UART1_SendFormatted
    _DeviceInitialization->_UART1_SendFormatted
    _Setting->_UART1_SendFormatted
    _ResistorAdjust->_UART1_SendFormatted
    _DetectorTest->_UART1_SendFormatted
    _WaitReleaseSW1->_UART1_SendFormatted
    _PrintNoData->_UART1_SendFormatted
    _DataPrinting->_UART1_SendFormatted

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0 1720782
                                            125 BANK0      2     2      0
                                             60 BANK1      2     2      0
           _AbsorptionCoefficentCalc
                       _DataPrinting
                        _GetTimerVal
                      _HeartRateCalc
                     _LEDChangeState
                     _MinMaxValReset
                           _OSC_Init
                     _OxygenSPO2Calc
                        _PrintNoData
                   _TimerPeriodCheck
                             ___flge
                              _setup
                         _setupTimer
 ---------------------------------------------------------------------------------
 (1) _setupTimer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0 1247461
                 _ConfigurationCheck
               _DeviceInitialization
                     _FormatForPrint
                     _MinMaxValReset
                      _StartPrinting
                         _UART1_Init
 ---------------------------------------------------------------------------------
 (2) _UART1_Init                                           8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _StartPrinting                                        2     2      0  149924
                                            123 BANK0      2     2      0
                _UART1_SendFormatted
 ---------------------------------------------------------------------------------
 (2) _MinMaxValReset                                       4     4      0      90
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) _FormatForPrint                                       0     0      0  149924
                _UART1_SendFormatted
 ---------------------------------------------------------------------------------
 (2) _DeviceInitialization                                 0     0      0  150569
                     _LEDChangeState
                _UART1_SendFormatted
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              5     4      1     623
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _ConfigurationCheck                                   8     8      0  796542
                                             48 BANK1      8     8      0
                            _Setting
                             _millis
 ---------------------------------------------------------------------------------
 (3) _Setting                                              4     4      0  796440
                                             44 BANK1      4     4      0
                       _DetectorTest
                         _Reset_MCLR
                     _ResistorAdjust
                _UART1_SendFormatted
                     _WaitReleaseSW1
                             _millis
 ---------------------------------------------------------------------------------
 (4) _ResistorAdjust                                       2     2      0  173550
                                            123 BANK0      2     2      0
                        _GetTimerVal
                _UART1_SendFormatted
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     522
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _Reset_MCLR                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _DetectorTest                                         2     2      0  322974
                                            123 BANK0      2     2      0
                        _GetTimerVal
                     _LEDChangeState
                _UART1_SendFormatted
                     _WaitReleaseSW1
 ---------------------------------------------------------------------------------
 (4) _WaitReleaseSW1                                       0     0      0  149924
                _UART1_SendFormatted
 ---------------------------------------------------------------------------------
 (5) _GetTimerVal                                          6     6      0   23104
                                            123 COMRAM     2     2      0
                                             16 BANK0      4     4      0
                     _LEDChangeState
                         _WaitPeriod
                            ___fladd
                            ___fldiv
                            ___llmod
                           ___xxtofl
                             _micros
 ---------------------------------------------------------------------------------
 (6) _WaitPeriod                                           0     0      0    9314
                             ___flge
                            ___flmul
                            ___llmod
                           ___xxtofl
                             _micros
 ---------------------------------------------------------------------------------
 (6) _micros                                              12     8      4      23
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     615
                                             12 COMRAM     9     1      8
                             _micros (ARG)
 ---------------------------------------------------------------------------------
 (3) _LEDChangeState                                       3     3      0      22
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _TimerPeriodCheck                                     4     4      0   23205
                                            123 COMRAM     2     2      0
                                             16 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                             _millis
 ---------------------------------------------------------------------------------
 (1) _PrintNoData                                          0     0      0  149924
                _UART1_SendFormatted
 ---------------------------------------------------------------------------------
 (1) _OxygenSPO2Calc                                      32    32      0   30930
                                            123 COMRAM     2     2      0
                                             16 BANK0     30    30      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _fabs
 ---------------------------------------------------------------------------------
 (1) _OSC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HeartRateCalc                                        6     6      0   25908
                                            123 COMRAM     2     2      0
                                             16 BANK0      4     4      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _fabs
 ---------------------------------------------------------------------------------
 (2) _fabs                                                 4     0      4     698
                                              0 BANK0      4     0      4
                            ___flneg
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _DataPrinting                                        16    16      0  175164
                                             44 BANK1     16    16      0
                _UART1_SendFormatted
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                             _millis
 ---------------------------------------------------------------------------------
 (3) _millis                                              17    13      4      68
                                              0 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _UART1_SendFormatted                                286   258     28  149924
                                            121 BANK0      2     2      0
                                             16 BANK1     28     0     28
                                              0 BANK2    256   256      0
                         _UART1_Send
                             ___lmul (ARG)
                             _millis (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (4) _vsnprintf                                           26    19      7  146058
                                            111 BANK0     10     3      7
                                              0 BANK1     16    16      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             7     2      5  145045
                                            104 BANK0      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           30    26      4  144452
                                             74 BANK0     30    26      4
                               _atoa
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                               _otoa
                 _read_prec_or_width
                               _stoa
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                30    19     11    9252
                                             25 COMRAM    30    19     11
                                _pad
 ---------------------------------------------------------------------------------
 (7) _utoa                                                24    14     10    9143
                                             25 COMRAM    24    14     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (7) _stoa                                                14    10      4    2823
                                              9 COMRAM    14    10      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _read_prec_or_width                                   7     5      2     795
                                              6 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _otoa                                                25    15     10    8623
                                             25 COMRAM    25    15     10
                                _pad
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              61    54      7   48004
                                            123 COMRAM     3     3      0
                                             16 BANK0     58    51      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (8) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                27    17     10    9801
                                             26 COMRAM    27    17     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 8     5      3    2591
                                              9 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _atoa                                                58    51      7   47255
                                            123 COMRAM     2     2      0
                                             16 BANK0     56    49      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               6     2      4    1543
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _pad                                                  9     3      6    7973
                                             16 COMRAM     9     3      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     220
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    2617
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    2117
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6     748
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (8) _floorf                                              20    16      4     642
                                             60 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       14    10      4     439
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (8) ___fltol                                             10     6      4     967
                                            101 COMRAM    10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fleq                                              12     4      8    1102
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _UART1_Send                                           2     0      2     121
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _AbsorptionCoefficentCalc                            20    20      0   42117
                                             16 BANK0     20    20      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flneg
                            ___flsub
                                _exp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 14    10      4   18171
                                            101 COMRAM    14    10      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg (ARG)
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1106
                                             21 COMRAM    14    10      4
                            ___llmod (ARG)
                             _micros (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    4784
                                             60 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             25    17      8    5963
                                             35 COMRAM    25    17      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    8327
                                            115 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                                _exp (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             16     8      8    5962
                                             85 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4     425
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8    2786
                                              4 BANK0     12     4      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                            ___llmod (ARG)
                           ___xxtofl (ARG)
                               _fabs (ARG)
                             _micros (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _isr                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AbsorptionCoefficentCalc
     ___fladd
       ___fldiv (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
           ___llmod (ARG)
             _micros (ARG)
           _micros (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
     ___flge
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
         _exp (ARG)
           ___fladd
           ___fldiv
           ___flmul
           ___flneg (ARG)
           ___xxtofl (ARG)
       ___llmod (ARG)
       ___xxtofl (ARG)
       _fabs (ARG)
         ___flneg
         ___flsub (ARG)
         ___xxtofl (ARG)
       _micros (ARG)
     ___flneg
     ___flsub
     _exp
   _DataPrinting
     _UART1_SendFormatted
       _UART1_Send
       ___lmul (ARG)
       _millis (ARG)
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
               ___fltol
                 ___fladd (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _memcpy
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
               _strcpy
             _ctoa
               _fputc
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
               ___fltol
               ___fpclassifyf
               _floorf
               _labs
               _memcpy
               _pad
               _strcpy
             _fputc
             _otoa
               _pad
             _read_prec_or_width
               ___wmul
             _stoa
               _fputc
             _utoa
               ___lodiv
               ___lomod
               _pad
             _xtoa
               _pad
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
     _millis
   _GetTimerVal
     _LEDChangeState
     _WaitPeriod
       ___flge
       ___flmul
       ___llmod
       ___xxtofl
       _micros
     ___fladd
     ___fldiv
     ___llmod
     ___xxtofl
     _micros
   _HeartRateCalc
     ___fladd
     ___fldiv
     ___flge
     ___flsub
     ___fltol
     ___xxtofl
     _fabs
   _LEDChangeState
   _MinMaxValReset
   _OSC_Init
   _OxygenSPO2Calc
     ___fladd
     ___fldiv
     ___flge
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
     _fabs
   _PrintNoData
     _UART1_SendFormatted
   _TimerPeriodCheck
     ___fladd
     ___fldiv
     ___flge
     ___flsub
     _millis
   ___flge
   _setup
     _ConfigurationCheck
       _Setting
         _DetectorTest
           _GetTimerVal
           _LEDChangeState
           _UART1_SendFormatted
           _WaitReleaseSW1
             _UART1_SendFormatted
         _Reset_MCLR
         _ResistorAdjust
           _GetTimerVal
           _UART1_SendFormatted
           ___lmul
         _UART1_SendFormatted
         _WaitReleaseSW1
         _millis
       _millis
     _DeviceInitialization
       _LEDChangeState
       _UART1_SendFormatted
       _pinMode
     _FormatForPrint
       _UART1_SendFormatted
     _MinMaxValReset
     _StartPrinting
       _UART1_SendFormatted
     _UART1_Init
       ___lldiv
   _setupTimer

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0     100      13      100.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      78      11       46.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100    100     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3E      FE       7       99.2%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     7F      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     7E      7E       1      100.0%
BITBIGSFRhhl        1E      0       0      37        0.0%
BITBIGSFRhlhhl      1D      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhlhllh      C      0       0      41        0.0%
BITBIGSFRhllhh       8      0       0      43        0.0%
BITBIGSFRhlhlll      8      0       0      42        0.0%
BITBIGSFRhllhl       5      0       0      44        0.0%
BITBIGSFRhlhhhh      3      0       0      38        0.0%
BITBIGSFRhlll        2      0       0      45        0.0%
BITBIGSFRhlhlh       1      0       0      40        0.0%
BITBIGSFRl           1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     473      47        0.0%
DATA                 0      0     473       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Nov 17 13:58:15 2023

                               _R 01B8                      ___fldiv@aexp 003C                      ___fldiv@bexp 003B  
                    ___fldiv@sign 0034                                l99 4D1A                      ___awdiv@sign 0006  
             ___wmul@multiplicand 0003                    _MinMaxValReset 70D4                               l105 4E7A  
                             l108 4E62                               l303 72F6                               l304 735C  
                             l305 736C                               l313 4394                               l242 6928  
                             l314 42DE                               l243 6938                               l308 73E0  
                             l324 6046                               l405 367E                               l261 77A4  
                             l254 7736                               l246 79C8                               l350 641E  
                             l334 60D4                               l414 78AA                               l319 4502  
                             l264 7696                               l272 79BA                               l408 792A  
                             l425 4C54                               l265 76A6                               l281 75B6  
                             l361 6530                               l433 7164                               l249 755E  
                             l258 776C                               l354 72E6                               l291 71F4  
                             l700 6F84                               l428 798C                               l276 7566  
                             l364 5B38                               l445 543A                               l453 5970  
                             l381 5CB6                               l269 7900                               l278 7570  
                             l358 72F4                               l294 79A4                               l439 3AB0  
                             l279 757A                               l287 71F4                               l456 7950  
                             l384 7960                               l368 5B7C                               l721 66F6  
                             l393 6308                               l730 7814                               l570 5E3E  
                             l378 5CA8                               l490 70D2                               l715 702E  
                             l387 796E                               l467 743A                               l483 70C2  
                             l468 744A                               l397 343C                               l901 6A28  
                             l726 673C                               l583 5FA2                               l911 6BD0  
                             l904 6BB0                               l753 6636                               l687 6D5E  
                             l883 727C                               l876 726C                               l894 6A08  
                             l984 2F54                               l993 3224                               l985 2F42  
                             l986 2F08                               _GIE 7F97                               _Tmi 0160  
                             _abs 784C                               _pad 6E1C                               _exp 683C  
                             _isr 0008                      ___awmod@sign 0006                               prod 0FF3  
                             wreg 0FE8                        _TXSTA1bits 0FAC                      ___flmul@aexp 004E  
                    ___flmul@bexp 004F                      ___flmul@sign 0049                      ___flmul@temp 0054  
                    ___flmul@prod 0050                      ___fltol@exp1 006F                              l1001 306E  
                            l1010 313E                              l1011 312C                              l1111 5662  
                            l1040 40D4                              l1026 76EC                              l1114 57BE  
                            l1051 4192                              l1043 4098                              ?_abs 0013  
                            l1052 4180                              l1140 61D2                              l1125 5756  
                            l1038 4274                              l1070 3B76                              l1118 56FA  
                            l1135 61F0                              l1080 3DD2                              l1049 411A  
                            l1074 3EDA                              l1315 4790                              l1332 2094  
                            l1077 3D6C                              l1181 6ED4                              l1502 6E1A  
                            l1087 3E9C                              l1079 3DE4                              l1319 132E  
                            l1423 5468                              l1176 6E56                              l1185 2160  
                            l1425 5470                              l1521 1280                              l1290 6B00  
                            l1354 1744                              l1179 6E98                              l1339 14F4  
                            l1435 55B6                              l1451 5AC8                              l1436 560A  
                            l1452 5B12                              l1444 5A18                              l1516 00FE  
                            l1285 6A90                              l1461 50C0                              l1613 1152  
                            l1198 2D64                              l1382 1B7A                              l1534 0264  
                            l1622 74A4                              l1295 4544                              l1471 526A  
                            l1463 50C8                              l1623 74AC                              l1704 784A  
                            l1288 6AD2                              l1456 5B1A                              l1633 683A  
                            l1641 787E                              l1297 454C                              l1298 45A4  
                            l1652 4FD6                              l1492 4976                              l1476 47BE  
                            l1638 7866                              l1494 49FC                              l1478 47C6  
                            l1663 760C                              l1479 4818                              l6000 4EA2  
                            l1649 5092                              l1681 6C9A                              l6010 4F8A  
                            l6002 4EF8                              l1498 6E12                              l1594 0F12  
                            l6020 5072                              l6012 4FC6                              l6004 4F0C  
                            l1692 79CA                              l1669 765C                              l6022 5082  
                            l6006 4F1A                              l6014 4FFA                              l6016 5036  
                            l5400 5CFC                              l6040 785A                              l1689 7730  
                            l6018 504A                              l1698 77DC                              l5410 5D52  
                            l5402 5D1C                              l6042 75B8                              l5420 5DD4  
                            l5412 5D66                              l5404 5D20                              l6044 75C6  
                            l7020 6D60                              l5430 5E1E                              l5422 5DD6  
                            l5414 5D74                              l5406 5D2C                              l6038 784C  
                            l6046 75DA                              l7030 6DEC                              l7022 6D68  
                            ?_pad 0011                              l5424 5DE8                              l5416 5D86  
                            l5408 5D4A                              l5440 5E72                              l7024 6D8A  
                            l5610 3ABE                              l5418 5DB4                              l5426 5DEE  
                            l5450 5ECA                              l5442 5E76                              l5434 5E40  
                            l7026 6DC0                              l5700 3D8E                              l5620 3AFE  
                            l5612 3ACC                              l5428 5DFE                              l5460 5F4C  
                            l5452 5EDE                              l5444 5E84                              l5436 5E44  
                            l7028 6DE0                              l5710 3E00                              l5702 3D9C  
                            l5630 3B2E                              l5622 3B04                              l5614 3ACE  
                            l5390 5CB8                              l5454 5EEC                              l5462 5F52  
                            l5446 5EA4                              l5438 5E52                              l5720 3E6A  
                            l5712 3E0E                              l5704 3DCA                              l5640 3B66  
                            l5632 3B30                              l5624 3B14                              l5616 3ADE  
                            l5608 3AB2                              l7400 7744                              l5800 6F0A  
                            l9000 2692                              l5392 5CBC                              l5464 5F62  
                            l5456 5F1A                              l5448 5EC2                              l5384 792C  
                            l5730 3EC0                              l5722 3E84                              l5714 3E38  
                            l5650 3BB6                              l5642 3B86                              l5634 3B40  
                            l5626 3B1A                              l5618 3AEE                              l7402 7750  
                            l5810 6F50                              l5802 6F1C                              l9010 26C4  
                            l9002 26A2                              l5394 5CCA                              l5466 5F82  
                            l5458 5F3A                              l5386 7948                              l5724 3EA0  
                            l5732 3EC6                              l5708 3DF4                              l5716 3E3C  
                            l5660 3C06                              l5652 3BC0                              l5644 3B96  
                            l5636 3B50                              l5628 3B20                              l7404 7754  
                            l5820 6F7C                              l5812 6F58                              l5804 6F24  
                            l9100 2A24                              l9020 2764                              l9012 2728  
                            l9004 26AC                              l5396 5CEA                              ?_exp 0066  
                            l5734 3ECA                              l5726 3EB0                              l5718 3E56  
                            l5670 3C48                              l5662 3C12                              l5654 3BD6  
                            l5638 3B60                              l5750 6CB6                              l5814 6F5E  
                            l5806 6F2C                              l5830 6FF2                              l9110 2A64  
                            l9102 2A28                              l9030 279E                              l9022 2776  
                            l9014 273C                              l9006 26B0                              l5398 5CEE  
                            l7502 7562                              l8400 2D80                              l5728 3EBE  
                            l5680 3CAA                              l5672 3C58                              l5664 3C20  
                            l5656 3BE2                              l5648 3BAA                              l5760 6CDC  
                            l5752 6CBA                              l5744 6C9C                              l5808 6F3A  
                            l5816 6F64                              l5832 7002                              l5824 6F86  
                            l9200 2CE2                              l9120 2AAA                              l9112 2A74  
                            l9104 2A2E                              l9032 27A6                              l9024 2784  
                            l9040 27C6                              l9016 274A                              l9008 26B8  
                            l5920 696C                              l7440 71F6                              l8410 2DB4  
                            l8402 2D82                              l5690 3D52                              l5682 3CC6  
                            l5674 3C72                              l5666 3C2C                              l5658 3BFA  
                            l5770 6D12                              l5762 6CEE                              l5754 6CC8  
                            l5746 6CA0                              l5818 6F74                              l5834 7026  
                            l5826 6FB4                              l9202 2CF8                              l9130 2AD6  
                            l9122 2AB2                              l9114 2A84                              l9106 2A34  
                            l9050 2820                              l9042 27D8                              l9034 27B6  
                            l9026 2794                              l9018 275A                              l5930 69EE  
                            l5922 6980                              l5914 693A                              l7506 7584  
                            l7450 724C                              l7442 720C                              l7434 736E  
                            l8420 2DE6                              l8404 2D92                              l8412 2DBC  
                            l5692 3D5C                              l5684 3CF0                              l5676 3C82  
                            l5668 3C3C                              l5772 6D28                              l5764 6CF6  
                            l5780 6D3E                              l5756 6CD0                              l5748 6CAE  
                            l5836 702C                              l5828 6FC4                              l9204 2D1E  
                            l9140 2B32                              l9132 2ADE                              l9124 2AC0  
                            l9116 2A96                              l9108 2A48                              l9060 2870  
                            l9052 283C                              l9044 27F4                              l9036 27BA  
                            l9028 2798                              l9220 6A64                              l9212 6A2A  
                            l9300 1282                              l5932 69F0                              l5924 698E  
                            l5916 6946                              l5940 6B28                              l7452 725C  
                            l7444 7214                              l7436 73D0                              ?_isr 0001  
                            l8510 2FBE                              l8502 2F86                              l8430 2E1C  
                            l8422 2DEC                              l8414 2DCC                              l8406 2DA2  
                            l5694 3D6A                              l5686 3D26                              l5678 3C9E  
                            l5782 6D4E                              l5774 6D30                              l5766 6CFE  
                            l5758 6CD4                              l5790 6EDA                              l9206 2D34  
                            l9150 2B72                              l9142 2B3A                              l9134 2AEA  
                            l9126 2AC4                              l9118 2A9A                              l9070 290E  
                            l9062 2874                              l9046 2804                              l9038 27C0  
                            l9230 6AB0                              l9222 6A76                              l9214 6A3E  
                            l9310 12CE                              l9302 1288                              l5934 6A02  
                            l5926 69A0                              l5918 6964                              l5950 6BAA  
                            l5942 6B3C                              l7454 7266                              l7446 7220  
                            l8512 2FC2                              l8504 2F96                              l8520 2FE2  
                            l8440 2E58                              l8432 2E2C                              l8424 2DFA  
                            l8416 2DD2                              l8408 2DB2                              l5696 3D7C  
                            l5688 3D34                              l5784 6D56                              l5776 6D32  
                            l5768 6D0C                              l5792 6EE8                              l8600 76FA  
                            l9208 2D3C                              l9160 2BAC                              l9152 2B82  
                            l9136 2AF0                              l9144 2B40                              l9128 2AD2  
                            l9080 2978                              l9072 2912                              l9056 2858  
                            l9048 2810                              l9064 287A                              l9232 6AB4  
                            l9216 6A4A                              l9240 4504                              l9400 16B0  
                            l9320 1312                              l9312 12D8                              l9304 1298  
                            l5928 69CE                              l5944 6B4A                              l5936 6B02  
                            l7448 722E                              l7720 706A                              l7712 7030  
                            l8522 3008                              l8530 305E                              l8514 2FD0  
                            l8506 2FA4                              l8450 2E76                              l8442 2E66  
                            l8434 2E2E                              l8426 2DFC                              l8418 2DE4  
                            l5698 3D8A                              l5778 6D38                              l5794 6EF0  
                            l8602 770C                              l8610 7826                              l9170 2BE6  
                            l9162 2BB2                              l9154 2B8E                              l9146 2B52  
                            l9138 2B16                              l9090 29F2                              l9082 2994  
                            l9074 2922                              l9066 28D2                              l9058 2860  
                            l9234 6AE2                              l9226 6A88                              l9218 6A56  
                            l9250 4564                              l9242 4528                              l9410 1700  
                            l9402 16C8                              l9330 1368                              l9322 131E  
                            l9314 12E0                              l9306 12A6                              l5946 6B78  
                            l5938 6B20                              l7730 70B2                              l7722 7078  
                            l7714 7040                              l8540 30B2                              l8532 3084  
                            l8524 303C                              l8516 2FD2                              l8508 2FB2  
                            l8460 2E8A                              l8452 2E7A                              l8444 2E6A  
                            l8428 2E0C                              l8436 2E36                              l8700 40E4  
                            l8620 3EF6                              l5796 6EF4                              l5788 6ED6  
                            l5980 67D0                              l5972 673E                              l8604 7710  
                            l8612 783E                              l9180 2C46                              l9172 2BEC  
                            l9164 2BC2                              l9156 2B96                              l9148 2B6C  
                            l9092 29F6                              l9084 29A6                              l9068 2906  
                            l9236 6AF4                              l9228 6A9C                              l9260 459C  
                            l9252 4572                              l9244 452A                              l9500 1B72  
                            l9412 1714                              l9404 16D4                              l9340 13A4  
                            l9332 137A                              l9324 1326                              l9316 12F0  
                            l9308 12AA                              l5948 6B98                              l7580 7400  
                            l7660 7194                              l7740 70DC                              l7732 70BC  
                            l7724 7082                              l7716 7056                              l7820 798E  
                            l8550 30DC                              l8542 30C0                              l8534 3094  
                            l8526 303E                              l8518 2FDC                              l8470 2E9E  
                            l8462 2E8E                              l8454 2E7E                              l8446 2E6E  
                            l8438 2E46                              l8702 40FA                              l8710 412A  
                            l8630 3F2A                              l8622 3EF8                              l7398 7732  
                            l5798 6F02                              l5990 6832                              l5974 675E  
                            l8390 6C1E                              l8382 6BD2                              l8606 7816  
                            l9190 2C7E                              l9182 2C4E                              l9174 2C1C  
                            l9166 2BCE                              l9158 2BA6                              l9094 2A06  
                            l9086 29B8                              l9078 2958                              l9270 45CE  
                            l9262 45B2                              l9254 4578                              l9246 4538  
                            l9510 1C48                              l9502 1B92                              l9430 17BE  
                            l9414 171C                              l9406 16E6                              l9342 13C0  
                            l9334 137E                              l9350 140A                              l9326 133C  
                            l9318 1300                              l7590 79B8                              l7582 7410  
                            l7670 71D4                              l7662 719E                              l7742 7144  
                            l7734 70D4                              l7726 70A0                              l7718 705E  
                            l7830 79A2                              l7822 799A                              l8560 310E  
                            l8552 30EC                              l8544 30C2                              l8528 304E  
                            l8480 2EF0                              l8472 2EA2                              l8464 2E92  
                            l8456 2E82                              l8448 2E72                              l8712 4138  
                            l8704 4100                              l8640 3F5C                              l8624 3F08  
                            l8632 3F32                              l8616 3EDC                              l8800 6588  
                            l5976 679C                              l5984 67DC                              l8392 6C54  
                            l8384 6BE4                              l8608 7822                              l9192 2C9E  
                            l9176 2C2A                              l9168 2BD6                              l9096 2A0A  
                            l9088 29D4                              l9272 45D4                              l9280 46C6  
                            l9264 45B8                              l9256 4588                              l9248 4554  
                            l9600 1F06                              l9520 1C94                              l9512 1C5A  
                            l9504 1C0A                              l9440 17F6                              l9432 17C6  
                            l9424 1764                              l9416 1736                              l9408 16EA  
                            l9360 1454                              l9352 1430                              l9344 13D8  
                            l9336 1384                              l9328 1342                              l7584 741A  
                            l7576 73E2                              l7672 71E6                              l7664 71AE  
                            l7656 7168                              l7744 7148                              l7728 70B0  
                            l7760 7508                              l7824 799C                              l8570 3168  
                            l8562 3124                              l8546 30D0                              l8538 30A8  
                            l8554 30EE                              l8490 2F34                              l8482 2F00  
                            l8466 2E96                              l8458 2E86                              l8474 2EA6  
                            l8722 41A2                              l8730 41EA                              l8714 413C  
                            l8706 410A                              l8650 3F90                              l8642 3F5E  
                            l8634 3F42                              l8626 3F18                              l8618 3EE8  
                            l8802 6598                              l5986 67EE                              l5978 67C4  
                            l8386 6BF6                              l9186 2C62                              l9194 2CBC  
                            l9178 2C3A                              l9098 2A14                              l9282 46E0  
                            l9290 4742                              l9274 4656                              l9266 45BC  
                            l9258 4594                              l9610 1F36                              l9602 1F12  
                            l9530 1CC4                              l9522 1CA2                              l9514 1C68  
                            l9506 1C2A                              l9450 1840                              l9442 1804  
                            l9426 1778                              l9434 17CA                              l9418 1750  
                            l9362 146C                              l9354 1442                              l9346 13E2  
                            l9338 138C                              l7818 79C4                              l7586 79A6  
                            l7578 73F2                              l7666 71B6                              l7658 7184  
                            l7770 755C                              l7762 750C                              l7826 799E  
                            l8580 31E4                              l8572 31A2                              l8548 30D8  
                            l8556 30FC                              l8492 2F36                              l8484 2F16  
                            l8476 2EAA                              l8468 2E9A                              l8396 2D66  
                            l8740 4254                              l8732 4204                              l8724 41AE  
                            l8716 414A                              l8708 4118                              l8660 3FD6  
                            l8644 3F6E                              l8652 3F98                              l8636 3F48  
                            l8628 3F28                              l8812 65C2                              l8804 659C  
                            l8388 6C00                              l9196 2CCE                              l9188 2C78  
                            l8900 2174                              l9292 4752                              l9284 46FE  
                            l9276 465C                              l9268 45C4                              l9612 1F4E  
                            l9604 1F1A                              l9620 1F78                              l9540 1CF6  
                            l9532 1CD4                              l9524 1CB2                              l9516 1C78  
                            l9508 1C34                              l9460 1886                              l9452 1852  
                            l9444 1808                              l9436 17D2                              l9428 1794  
                            l9380 150A                              l9364 1488                              l9356 1446  
                            l9372 14A4                              l9700 598C                              l7588 79A8  
                            l7668 71C8                              l7764 7556                              l7828 79A0  
                            l8590 3204                              l8582 31E8                              l8566 314E  
                            l8574 31A4                              l8558 3100                              l8494 2F40  
                            l8486 2F22                              l8478 2ED4                              l8398 2D72  
                            l8742 4262                              l8734 421A                              l8726 41BC  
                            l8718 4178                              l8670 3FFE                              l8662 3FDA  
                            l8654 3FA8                              l8646 3F7E                              l8638 3F4E  
                            l8830 6626                              l8822 65EA                              l8814 65CC  
                            l8806 65AA                              l5998 4E82                              l9198 2CDA  
                            l8910 21BE                              l8902 219A                              l9294 4758  
                            l9286 4718                              l9278 4662                              l9630 1FE2  
                            l9622 1FA8                              l9614 1F5A                              l9606 1F2A  
                            l9550 1D9E                              l9542 1D08                              l9534 1CD8  
                            l9526 1CB6                              l9518 1C82                              l9470 199A  
                            l9462 18EA                              l9446 181A                              l9454 185A  
                            l9438 17E4                              l9390 1600                              l9382 153E  
                            l9374 14BE                              l9358 144C                              l9710 59F2  
                            l9702 5994                              l7766 7558                              l8760 6638  
                            l8592 3212                              l8584 31F6                              l8576 31B4  
                            l8568 315A                              l8496 2F62                              l8488 2F26  
                            l8744 4268                              l8736 4234                              l8728 41E6  
                            l8680 404C                              l8656 3FBE                              l8648 3F8E  
                            l8824 65F6                              l8816 65D6                              l8840 6E4E  
                            l8912 21CE                              l8904 21AC                              l9296 4768  
                            l9288 4732                              l9640 204E                              l9632 1FF8  
                            l9624 1FB6                              l9616 1F62                              l9608 1F30  
                            l9560 1DF4                              l9552 1DA6                              l9544 1D0C  
                            l9536 1CDE                              l9528 1CBC                              l9480 1A58  
                            l9472 19CE                              l9464 1942                              l9456 1862  
                            l9448 1828                              l9392 1634                              l9384 157C  
                            l9720 5A52                              l9712 5A10                              l9704 59A0  
                            l9800 485A                              l7768 755A                              l8770 66C4  
                            l8762 6668                              l8594 3214                              l8586 31FC  
                            l8578 31C4                              l8498 2F72                              l8754 76A8  
                            l8746 426A                              l8738 4250                              l8690 4096  
                            l8682 405C                              l8674 4012                              l8658 3FCE  
                            l8666 3FEE                              l8826 6606                              l8850 6EBC  
                            l8842 6E62                              l8834 6E1C                              l8930 2278  
                            l8914 21EA                              l8906 21B0                              l8922 2234  
                            l9642 2064                              l9634 1FFE                              l9626 1FCE  
                            l9618 1F72                              l9570 1E32                              l9562 1E04  
                            l9538 1CE4                              l9546 1D12                              l9554 1DAA  
                            l9490 1B2C                              l9482 1A68                              l9474 1A02  
                            l9466 1976                              l9458 1872                              l9394 163C  
                            l9386 15B0                              l9378 1504                              l9650 544C  
                            l9730 5ADC                              l9722 5A74                              l9706 59A4  
                            l9810 488E                              l9802 4860                              l8772 66D6  
                            l8764 6678                              l8588 31FE                              l8756 76B8  
                            l8692 40A2                              l8684 4064                              l8676 402C  
                            l8668 3FFE                              l8828 6616                              l8860 7622  
                            l8844 6E76                              l8836 6E2C                              l8932 227E  
                            l8924 225A                              l8916 2202                              l8908 21B8  
                            l9644 206C                              l9636 201E                              l9580 1E62  
                            l9572 1E44                              l9564 1E16                              l9556 1DC8  
                            l9548 1D6A                              l9492 1B40                              l9484 1A9C  
                            l9476 1A16                              l9468 197C                              l9388 15EC  
                            l9660 5486                              l9652 544E                              l9732 5AF0  
                            l9724 5AAA                              l9716 5A3A                              l9708 59E2  
                            l9740 50A6                              l9820 4932                              l9812 4894  
                            l9804 4870                              l9900 01F0                              l8774 66E4  
                            l8766 66A6                              l8782 77DE                              l8694 40C0  
                            l8686 4074                              l8678 403C                              l8790 6532  
                            l8862 762E                              l8598 76EE                              l8846 6E7A  
                            l8838 6E40                              l8854 77A6                              l8950 2316  
                            l8934 228E                              l8926 226C                              l8918 220C  
                            l8870 2096                              l9638 203C                              l9590 1EBE  
                            l9582 1E6E                              l9574 1E48                              l9566 1E1A  
                            l9558 1DE4                              l9486 1AF4                              l9494 1B44  
                            l9478 1A48                              l9398 167C                              l9670 54B2  
                            l9662 548E                              l9654 545C                              l9734 5AF4  
                            l9718 5A4E                              l9726 5AAE                              l9750 50E8  
                            l9742 50B4                              l9830 49A8                              l9822 494C  
                            l9814 489A                              l9806 4878                              l9910 0234  
                            l9902 01FE                              l8776 6734                              l8768 66B6  
                            l8784 77F4                              l8696 40C2                              l8688 4088  
                            l8792 6548                              l8864 7632                              l8848 6EA8  
                            l8856 77AE                              l8960 23E8                              l8952 234A  
                            l8936 22AA                              l8928 2270                              l8944 22C6  
                            l8880 20DC                              l8872 20B6                              l9584 1E74  
                            l9592 1EC4                              l9576 1E56                              l9568 1E24  
                            l9496 1B54                              l9488 1AF8                              l9680 5568  
                            l9672 54B8                              l9664 5494                              l9656 5478  
                            l9648 543C                              l9760 51E0                              l9752 515E  
                            l9744 50D0                              l9736 5094                              l9832 49AE  
                            l9824 4966                              l9808 487E                              l9816 48F8  
                            l9912 023C                              l9904 0210                              l9840 0012  
                            l8778 673A                              l8786 7804                              l8698 40D2  
                            l8866 763E                              l8858 760E                              l8970 2450  
                            l8954 2350                              l8962 241C                              l8946 22E0  
                            l8890 2132                              l8882 2100                              l8874 20BA  
                            l9594 1ED6                              l9586 1E9A                              l9578 1E5A  
                            l9498 1B66                              l9690 55CC                              l9682 5582  
                            l9666 549A                              l9674 5516                              l9658 5480  
                            l9762 51FE                              l9754 5164                              l9746 50D8  
                            l9738 50A4                              l9834 49BE                              l9826 4986  
                            l9818 4914                              l9922 0264                              l9914 0240  
                            l9930 02EE                              l9906 0214                              l9850 005E  
                            l9842 0036                              l8796 655C                              l8868 7642  
                            l8980 2538                              l8972 2458                              l8964 242C  
                            l8956 23AC                              l8892 2144                              l8884 210A  
                            l8876 20CA                              l9596 1EF0                              l9588 1EB6  
                            l9692 55DC                              l9676 5530                              l9684 5592  
                            l9668 54AC                              l9764 5218                              l9756 516A  
                            l9748 50E2                              l9828 4996                              l9836 49D4  
                            l9780 47B2                              l9772 4792                              l9940 03DC  
                            l9932 030A                              l9924 026C                              l9916 025C  
                            l9908 0230                              l9852 0062                              l9844 0042  
                            l8798 6586                              l8990 25F8                              l8982 256C  
                            l8974 2468                              l8966 2438                              l8958 23E0  
                            l8894 2150                              l8886 2112                              l8878 20D8  
                            l9598 1EF6                              l9694 55E2                              l9686 55A2  
                            l9678 554E                              l9766 5232                              l9758 51CE  
                            l9790 482A                              l9782 47CE                              l9774 4792  
                            l9942 0450                              l9934 032A                              l9870 0094  
                            l9862 0084                              l9854 0074                              l9846 0050  
                            STR_1 FED3                              l8992 260C                              l8976 247C  
                            l8984 2572                              l8968 2442                              l8896 2158  
                            l8888 2122                              l9688 55C6                              l9768 5242  
                            l9792 4836                              l9784 47F2                              l9776 47A2  
                            l9944 04B2                              l9936 0366                              l9960 063A  
                            l9952 058E                              l9928 0274                              l9880 0110  
                            l9848 0054                              STR_2 FEC0                              STR_3 FDD5  
                            l8994 263E                              l8986 2590                              l8978 24E0  
                            l8898 216E                              l9698 5972                              l9794 483E  
                            l9786 4800                              l9778 47A4                              l9970 06EC  
                            l9962 0656                              l9946 04EE                              l9938 03A2  
                            l9954 05E8                              l9890 016E                              l9882 0124  
                            l9874 009C                              l9866 008C                              l9858 007C  
                            STR_4 FF49                              STR_5 FD4F                              l8996 264E  
                            l8988 25C4                              l9796 484A                              l9788 4810  
                            l9980 084A                              l9972 072A                              l9964 0672  
                            l9956 0602                              l9948 0550                              l9892 0182  
                            l9884 0134                              l9876 00EE                              STR_6 FE63  
                            STR_7 FE7B                              l8998 265E                              l9798 4854  
                            l9990 0962                              l9982 08AC                              l9974 0762  
                            l9966 068E                              l9894 01A6                              l9886 013E  
                            l9878 010E                              STR_8 FE4B                              STR_9 FEAB  
                            l9976 07AC                              l9968 06AE                              l9896 01D4  
                            l9888 0162                              l9994 099A                              l9978 080E  
                            l9986 08EA                              l9988 0944                              l9998 09D2  
                            _LATB 0F8A                              u5200 5CCA                              u5201 5CC6  
                            u5210 5CFC                              u5211 5CF8                              u5300 5EEC  
                            u5221 5D26                              u5301 5EE8                              u5230 5D4A  
                            u5310 5F1A                              u5231 5D46                              u5311 5F16  
                            u6031 6940                              u6200 682A                              u5240 5D74  
                            u5320 5F62                              u6040 6964                              u5241 5D70  
                            u5321 5F5E                              u6041 6960                              u5250 5DB4  
                            u6050 698E                              u5251 5DB0                              u6051 698A  
                            _PEIE 7F96                              u6140 677E                              u6300 5036  
                            u6220 4ECA                              u5260 5DFE                              u6060 69CE  
                            u6301 5032                              u5261 5DFA                              u6061 69CA  
                            u6150 679C                              u6310 5072                              u6230 4EF8  
                            u5270 5E52                              u6070 6B20                              u6151 6798  
                            u6311 506E                              u6231 4EF4                              u5271 5E4E  
                            u6071 6B1C                              u5600 3B40                              u6160 67C4  
                            u6240 4F1A                              u5280 5E84                              u6080 6B4A  
                            u5601 3B3C                              u6161 67C0                              u6145 6774  
                            u6241 4F16                              u6225 4EC0                              u5281 5E80  
                            u6081 6B46                              u5610 3B50                              u6170 67EE  
                            u5290 5EC2                              u6330 785A                              u6090 6B78  
                            u5611 3B4C                              u6171 67EA                              u5291 5EBE  
                            u6331 7856                              u6091 6B74                              u5700 3DF4  
                            u5620 3B86                              u6260 4F86                              u6340 75C6  
                            u5701 3DF0                              u5621 3B82                              u6261 4F82  
                            u6341 75C2                              u5710 3E0E                              u5630 3B96  
                            u6190 6828                              u6270 4FAA                              u5711 3E0A  
                            u5631 3B92                              u6191 6822                              u6255 4F2E  
                            u5720 3E56                              u5640 3D10                              u5560 3ACC  
                            u5800 6D4E                              u6280 4FC6                              u6256 4F38  
                            u5721 3E52                              u5561 3AC8                              u5801 6D4A  
                            u6185 6800                              u6281 4FC2                              u6257 4F48  
                            u5730 3E84                              u5650 3D6A                              u5570 3ADE  
                            u5810 6EE8                              u6290 501A                              u5731 3E80  
                            u5651 3D66                              u5571 3ADA                              u5811 6EE4  
                            u6275 4FA0                              u5740 3EBE                              u5660 3D8A  
                            u5580 3AEE                              u5820 6F02                              u5741 3EBA  
                            u5661 3D86                              u5645 3D06                              u5581 3AEA  
                            u5821 6EFE                              u5670 3D9C                              u5590 3B2E  
                            u5750 6CAE                              u5830 6F1C                              u9030 7056  
                            u5671 3D98                              u5591 3B2A                              u5751 6CAA  
                            u5831 6F18                              u6295 5010                              u9031 7052  
                            u5680 3DCA                              u5760 6CC8                              u5840 6F3A  
                            u8160 6D8A                              u9040 7078                              u5681 3DC6  
                            u5761 6CC4                              u5841 6F36                              u8161 6D86  
                            u9041 7074                              u5690 3DE0                              u5770 6CEE  
                            u5850 6F50                              u8170 6E12                              u9050 70A0  
                            u5691 3DDC                              u5771 6CEA                              u5851 6F4C  
                            u8171 6E0E                              u9051 709C                              u8500 776C  
                            u5780 6D0C                              u5860 6F74                              u9060 7164  
                            u8501 7768                              u5781 6D08                              u5861 6F70  
                            u9061 7160                              u5790 6D28                              u5870 6FB4  
                            u5791 6D24                              u5871 6FB0                              u5880 6FF2  
                            u5881 6FEE                              u5890 7026                              u5891 7022  
                            u9500 6BF6                              u9501 6BF2                              u9085 752E  
                            u9510 6C1E                              u9511 6C1A                              u9600 2E58  
                            u9520 6C54                              u8560 720C                              u9601 2E54  
                            u9521 6C50                              u8561 7208                              u9610 2E66  
                            u9530 2D80                              u8490 7744                              u8570 722E  
                            u9611 2E62                              u9531 2D7C                              u8491 7740  
                            u8571 722A                              u9700 2FA4                              u9620 2ED4  
                            u9540 2D92                              u8580 724C                              u9701 2FA0  
                            u9621 2ED0                              u9541 2D8E                              u8581 7248  
                            u9710 2FB2                              u9630 2EEC                              u9550 2DA2  
                            u9711 2FAE                              u9631 2EE6                              u9551 2D9E  
                            u9800 30FC                              u9720 2FD0                              u9640 2EEE  
                            u9560 2DE4                              u9801 30F8                              u9721 2FCC  
                            u9561 2DE0                              u9810 310E                              u9730 3008  
                            u9650 2F16                              u9570 2DFA                              u9490 6BE4  
                            u8930 7194                              u9811 310A                              u9731 3004  
                            u9651 2F12                              u9571 2DF6                              u9491 6BE0  
                            u8931 7190                              u9900 31F6                              u9820 3124  
                            u9740 304E                              u9660 2F34                              u9580 2E0C  
                            u8780 7400                              u8940 71AE                              u8924 717A  
                            u9901 31F2                              u9821 3120                              u9741 304A  
                            u9661 2F30                              u9581 2E08                              u8781 73FC  
                            u8941 71AA                              u8925 7176                              u9910 3212  
                            u9830 313A                              u9750 3084                              u9670 2F54  
                            u9590 2E1C                              u8790 743A                              u8950 71C8  
                            u9911 320E                              u9831 3136                              u9751 3080  
                            u9671 2F50                              u9591 2E18                              u8791 7436  
                            u8951 71C4                              u9840 314E                              u9760 3094  
                            u9680 2F62                              u9920 7730                              u8960 71E6  
                            u9841 314A                              u9761 3090                              u9681 2F5E  
                            u9921 772C                              u8961 71E2                              u9850 3168  
                            u9770 30C0                              u9690 2F72                              u9930 783E  
                            u9851 3164                              u9771 30BC                              u9691 2F6E  
                            u9931 783A                              u9860 31A2                              u9780 30D0  
                            u9940 3EF6                              u9861 319E                              u9781 30CC  
                            u9941 3EF2                              u9870 31B4                              u9790 30EC  
                            u9950 3F08                              u9871 31B0                              u9791 30E8  
                            u9951 3F04                              u9880 31C4                              u9960 3F18  
                            u9881 31C0                              u9961 3F14                              u9890 31E4  
                            u9970 3F5C                              u9891 31E0                              u9971 3F58  
                            u9980 3F6E                              u9981 3F6A                              u9990 3F7E  
                            u9991 3F7A               __end_of_GetTimerVal 4504                    _OxygenSPO2Calc 3680  
                            abs@a 0013                              _fabs 765E                              _dbuf 0320  
                            _atoa 2096                              _labs 75B8                              _ctoa 6A2A  
                            _main 4C56                              _dtoa 4504                              _mode 01B1  
                            _prec 01AC                              _otoa 543C                              _nout 01A8  
                            pad@i 0018                              pad@p 0015                              fsr1h 0FE2  
                            fsr2h 0FDA                              indf1 0FE7                              indf2 0FDF  
                            fsr1l 0FE1                              fsr2l 0FD9                              _stoa 5972  
                            btemp 007F                              _utoa 5094                              exp@i 0072  
                            _xtoa 4792                              exp@x 0066                     ___fpclassifyf 673E  
                            prodh 0FF4                              prodl 0FF3                              start 000E  
                 ___fldiv@new_exp 0035              __end_of_DetectorTest 5CB8                 _average_detTimer8 0194  
                    ___param_bank 0000                       ?_UART1_Init 000E            __end_of_MinMaxValReset 7166  
                     ?_UART1_Send 0001                             ??_abs 0015                             ??_pad 0017  
                           ??_exp 006A                             ??_isr 0001                   __end_of_Setting 60D6  
                           l10010 0A7C                             l10100 10A2                             l10020 0BE6  
                           l10012 0AB6                             l10004 0A18                             l10022 0C20  
                           l10014 0AF0                             l10030 0D20                             l10006 0A5C  
                           l10112 1152                             l10120 11EC                             l10104 10D4  
                           l10040 0D74                             l10032 0D3A                             l10024 0C8C  
                           l10016 0B26                             l10200 7454                             l10122 120E  
                           l10130 123C                             l10106 10FE                             l10050 0DFC  
                           l10018 0B7A                             l10202 7462                             l10124 121A  
                           l10108 111C                             l10052 0E04                             l10044 0DCA  
                           l10028 0CC6                             l10036 0D46                             l10204 7488  
                           l10220 6146                             l10212 60F8                             l10300 4276  
                           l10126 122E                             l10118 1188                             l10070 0EF8  
                           l10054 0E26                             l10062 0E9C                             l10046 0DCE  
                           l10038 0D68                             l10230 61DA                             l10222 6168  
                           l10214 6116                             l10206 60D6                             l10310 42A4  
                           l10302 4286                             l10240 5672                             l10072 0F0A  
                           l10080 0F22                             l10064 0EAC                             l10056 0E58  
                           l10048 0DF0                             l10136 124C                             l10224 617C  
                           l10216 6128                             l10208 60EA                             l10320 43C4  
                           l10312 42AC                             l10304 428C                             l10400 6230  
                           l10250 56B0                             l10242 5688                             l10234 560E  
                           l10138 126E                             l10090 0FFC                             l10074 0F12  
                           l10082 0F8C                             l10058 0E8A                             l11050 00C0  
                           l10226 618C                             l10218 6134                             l10330 43F4  
                           l10322 43CA                             l10314 42C0                             l10402 6288  
                           l10410 5FAA                             l10260 5738                             l10252 56E2  
                           l10236 561E                             l10092 1018                             l10084 0FA8  
                           l10076 0F1A                             l10068 0EEA                             l11060 0CDA  
                           l11052 0288                             l10228 61BC                             l10332 4486  
                           l10324 43EC                             l10316 42EC                             l10308 42A0  
                           l10404 62E0                             l10420 5FEC                             l10412 5FAE  
                           l10500 7880                             l10270 578E                             l10262 5746  
                           l10254 56E4                             l10246 569C                             l10238 562C  
                           l10094 1034                             l10086 0FC4                             l11062 0F36  
                           l11054 05A2                             l10334 448A                             l10318 437A  
                           l10342 7952                             l10350 5B1C                             l10406 62FA  
                           l10430 6092                             l10422 6008                             l10414 5FBC  
                           l10510 78F0                             l10272 579E                             l10264 5764  
                           l10256 56F0                             l10248 56A4                             l10520 3226  
                           l11064 10E8                             l10096 1050                             l10088 0FE0  
                           l11056 08FE                             l10280 776E                             l10344 72F6  
                           l10600 5928                             l11048 7598                             l10336 44A6  
                           l10360 5BA6                             l10352 5B46                             l10440 60BC  
                           l10432 6094                             l10416 5FCA                             l10408 5FA4  
                           l10504 789C                             l10512 78F4                             l10274 57AC  
                           l10266 5766                             l10258 572C                             l10530 32E0  
                           l10522 322C                             l11066 11A6                             l10098 1070  
                           l11058 0A36                             l10282 7778                             l10346 7302  
                           l10610 52AE                             l10602 592E                             l10338 44FC  
                           l10370 5BE8                             l10362 5BAC                             l10354 5B66  
                           l10442 60CC                             l10434 609E                             l10426 6054  
                           l10418 5FD8                             l10514 78F8                             l10506 78D8  
                           l10276 57AE                             l10268 576A                             l10452 6864  
                           l10540 3434                             l10532 3326                             l10284 7798  
                           l10348 734E                             l10460 765E                             l10620 5328  
                           l10612 52C0                             l10604 5936                             l10292 6362  
                           l10380 5C34                             l10372 5BF6                             l10364 5BC6  
                           l10356 5B8A                             l10444 60D0                             l10436 60A2  
                           l10516 78FC                             l10508 78EC                             l10700 4CBC  
                           l10454 68D4                             l10446 683C                             l10550 3454  
                           l10534 337A                             l10526 3240                             l10198 744C  
                           l10462 766E                             l10622 532C                             l10630 3764  
                           l10518 7970                             l10606 596C                             l10294 6372  
                           l10286 630A                             l10390 5C9C                             l10382 5C46  
                           l10374 5C08                             l10358 5B90                             l10366 5BD4  
                           l10438 60B4                             l10470 6452                             l10710 4D42  
                           l10702 4CDA                             l10456 6908                             l10560 3514  
                           l10552 34DC                             l10544 344A                             l10536 33AC  
                           l10528 3298                             l10624 5348                             l10608 526C  
                           l10640 38D4                             l10632 3798                             l10288 631C  
                           l10384 5C62                             l10376 5C0C                             l10368 5BE2  
                           l10392 61F2                             l10480 64CC                             l10472 646C  
                           l10712 4D54                             l10720 4D82                             l10704 4CF8  
                           l10458 690C                             l10570 3662                             l10562 35C8  
                           l10554 350C                             l10538 3402                             l10626 53FC  
                           l10618 52C8                             l10650 3948                             l10642 392E  
                           l10634 37CC                             l10386 5C72                             l10378 5C26  
                           l10394 6200                             l10482 64E6                             l10474 647A  
                           l10490 7910                             l10730 4DB4                             l10722 4D92  
                           l10714 4D58                             l10706 4D16                             l10564 35CC  
                           l10660 49FE                             l10652 399C                             l10644 393E  
                           l10636 3800                             l10628 3680                             l10572 57C0  
                           l10388 5C8C                             l10396 621A                             l10492 727E  
                           l10484 650E                             l10476 6496                             l10468 6420  
                           l10740 4DF0                             l10724 4D96                             l10716 4D5C  
                           l10708 4D40                             l10732 4DD2                             l10566 35E8  
                           l10670 4A62                             l10662 4A10                             l10654 39A2  
                           l10638 387C                             l10590 58B0                             l10574 57C6  
                           l10398 622C                             l10494 728C                             l10486 651C  
                           l10478 64A4                             l10750 4E26                             l10742 4DF4  
                           l10734 4DD6                             l10726 4D9C                             l10718 4D6E  
                           l10568 365E                             l10680 4BC6                             l10672 4A74  
                           l10664 4A28                             l10656 39BE                             l10592 58E4  
                           l10584 583A                             l10576 5820                             l10496 72A4  
                           l10488 7902                             l10752 4E5C                             l10744 4DF8  
                           l10736 4DDA                             l10728 4DAE                             l10682 4BFA  
                           l10666 4A3A                             l10658 3A72                             l10594 58F4  
                           l10586 588E                             l10578 5830                             l10498 72DE  
                           l10746 4E06                             l10754 4E64                             l10738 4DDE  
                           l10690 4C74                             l10676 4A9A                             l10668 4A46  
                           l10596 5904                             l10588 5894                             l10756 4E68  
                           l10748 4E0A                             l10692 4C84                             l10684 4C56  
                           l10678 4B92                             l10598 5914                             l10694 4C94  
                           l10686 4C5E                             l10696 4C98                             l10688 4C62  
                           l10698 4C9E                             ?_fabs 0080                     ___fltol@sign1 006E  
                           ?_atoa 0090                   __end_of___aodiv 5E40                             ?_labs 0001  
                           ?_ctoa 000A                   __end_of___fladd 3226                             ?_main 0001  
                           ?_dtoa 001B                   __end_of___aomod 5FA4                   __end_of___fldiv 4276  
                 __end_of___awdiv 6D60                   __end_of___flneg 7816                             STR_10 FE7B  
                           STR_11 FDFB                             STR_20 FF3A                             STR_12 FF09  
                           STR_13 FF6B                             STR_21 FFC5                             STR_22 FEF8  
                           STR_14 FEE6                             STR_30 FE93                             STR_31 FFF9  
                           STR_23 FFD9                             STR_15 FF67                             STR_32 FFFC  
                           STR_40 FFED                             STR_16 FFB8                             STR_24 FF9E  
                           STR_33 FFF5                             STR_25 FFAB                             STR_17 FF1A  
                           STR_34 FFF5                             STR_26 FF58                             STR_18 FF2A  
                           STR_51 FFE9                             STR_43 FFE9                             STR_27 FF91  
                           STR_19 FF83                             STR_35 FE31                             STR_52 FFF1  
                           STR_44 FFF1                             STR_28 FF75                             STR_36 FE16  
                 __end_of___awmod 6F86                             STR_37 FFE0                             STR_29 FD9B  
                           STR_38 FFE0                             STR_47 FFE5                             STR_39 FFE5  
                           STR_55 FFD2                             STR_48 FFED                   __end_of___flmul 3EDC  
                           ?_otoa 001A                   __end_of___flsub 76EE                   __end_of___fltol 6638  
                           ?_stoa 000A                             u10000 3FBE                             u10001 3FBA  
                           u10010 3FFE                             u10011 3FFA                   __end_of___lldiv 70D4  
                           u10100 4178                             u10020 4074                             u10101 4174  
                           u10021 4070                             u10110 418E                             u10030 4096  
                           u10111 418A                             u10031 4092                             ?_utoa 001A  
                           u10200 66E4                             u10120 41A2                             u10040 40C0  
                           u11000 4572                             u10201 66E0                             u10121 419E  
                           u10041 40BC                             u11001 456E                             u10210 6734  
                           u10130 41BC                             u10050 40E4                             u11010 4588  
                           u10211 6730                             u10131 41B8                             u10051 40E0  
                           u11011 4584                             u10220 77F4                             u10140 4204  
                           u10060 40FA                             u10300 6E2C                             u11020 45B2  
                           u11100 12F0                             u10221 77F0                             u10141 4200  
                           u10061 40F6                             u10301 6E28                             u11021 45AE  
                           u11101 12EC                             u10150 4234                             u10070 4118  
                           u10230 6548                             u10310 6E4E                             u11030 46E0  
                           u11110 1300                             u10151 4230                             u10071 4114  
                           u10231 6544                             u10311 6E4A                             u11031 46DC  
                           u11111 12FC                             u10160 4262                             u10080 4138  
                           u10240 657C                             u10320 6E98                             u10400 2132  
                           u11040 46FE                             u11200 14F0                             u11120 1312  
                           u12000 47A2                             u10161 425E                             u10081 4134  
                           u10321 6E94                             u10401 212E                             u11041 46FA  
                           u11201 14EC                             u11121 130E                             u12001 479E  
                           u10170 6668                             u10090 414A                             u10250 65AA  
                           u10330 6EA8                             u10410 2144                             u11050 4718  
                           u11210 157C                             u11130 133C                             u12010 47B2  
                           u10171 6664                             u10091 4146                             u10251 65A6  
                           u10331 6EA4                             u10411 2140                             u11051 4714  
                           u11211 1578                             u11131 1338                             u12011 47AE  
                           u10180 66A6                             u10260 65BE                             u10340 77DC  
                           u10500 23A8                             u10420 216E                             u11060 4732  
                           u11300 1760                             u11220 15B0                             u11140 1368  
                           u12100 4932                             u12020 47EE                             u10181 66A2  
                           u10261 65BA                             u10245 6572                             u10341 77D8  
                           u10501 23A4                             u10421 216A                             u11061 472E  
                           u11301 175C                             u11221 15AC                             u11141 1364  
                           u12101 492E                             u12021 47E8                             u10190 66C4  
                           u10270 65E6                             u10350 765C                             u10510 241C  
                           u10430 219A                             u11070 4742                             u11310 1778  
                           u11230 15EC                             u11150 137A                             u12110 494C  
                           u12030 47F0                             u10191 66C0                             u10271 65E2  
                           u10351 7658                             u10511 2418                             u10431 2196  
                           u11071 473E                             u11311 1774                             u11231 15E8  
                           u11151 1376                             u12111 4948                             u13000 323C  
                           u10280 6606                             u10600 2776                             u10520 242C  
                           u10440 21AC                             u10360 20B0                             u11080 4752  
                           u11400 199A                             u11320 1794                             u11240 1678  
                           u11160 13A4                             u12120 4966                             u12040 4800  
                           u12200 0134                             u13001 3238                             u10281 6602  
                           u10601 2772                             u10521 2428                             u10441 21A8  
                           u10361 20AA                             u11081 474E                             u11401 1996  
                           u11321 1790                             u11241 1674                             u11161 13A0  
                           u12121 4962                             u12041 47FC                             u12201 0130  
                           u13010 337A                             u10290 6616                             u10610 2784  
                           u10530 2590                             u10450 21CE                             u10370 20B2  
                           u11410 1A02                             u11330 17BE                             u11250 16B0  
                           u11170 1430                             u11090 12A6                             u12130 4976  
                           u12050 4810                             u12210 0162                             u13011 3376  
                           u10291 6612                             u10611 2780                             u10531 258C  
                           u10451 21CA                             u11411 19FE                             u11331 17BA  
                           u11251 16AC                             u11171 142C                             u11091 12A2  
                 __end_of___lodiv 6A2A                             u12131 4972                             u12051 480C  
                           u12211 015E                             u13020 3402                             u10700 2994  
                           u10620 27D8                             u10540 25F8                             u10460 225A  
                           u10380 20D8                             u11500 1C68                             u11420 1A48  
                           u11340 17E4                             u11260 16C8                             u11180 1442  
                           u12140 4986                             u12060 482A                             u12300 06AA  
                           u12220 01A6                             u13100 5348                   ___awdiv@divisor 0003  
                           u13021 33FE                             u10701 2990                             u10621 27D4  
                           u10541 25F4                             u10461 2256                             u10381 20D4  
                           u11501 1C64                             u11421 1A44                             u11341 17E0  
                           u11261 16C4                             u11181 143E                             u12141 4982  
                           u12061 4826                             u12301 06A6                             u12221 01A2  
                           u13101 5344                             u13030 344A                             u10710 29A6  
                           u10630 27F4                             u10550 263E                             u10470 226C  
                           u10390 2122                             u11510 1C78                             u11430 1A58  
                           u11350 17F6                             u11270 1700                             u11190 146C  
                           u12150 4996                             u12070 4870                             u12310 0A78  
                           u12230 0230                             u13110 53FC                             u13031 3446  
                           u10711 29A2                             u10631 27F0                             u10551 263A  
                           u10471 2268                             u10391 211E                             u11511 1C74  
                           u11431 1A54                             u11351 17F2                             u11271 16FC  
                           u11191 1468                             u12151 4992                             u12071 486C  
                           u12311 0A74                             u12231 022C                             u13111 53F8  
                           ?_xtoa 001A                             u13040 35E8                             u10800 2B52  
                           u10720 29B8                             u10640 2820                             u10560 264E  
                           u10480 228E                             u11600 1E56                             u11520 1C94  
                           u11440 1AF4                             u11360 1804                             u11280 1714  
                           u12160 49A8                             u12080 48D2                             u12400 0FE0  
                           u12320 0D68                             u12240 025C                             u13120 39BE  
                           u13200 4CF8                             _T1CON 0FCD                             u13041 35E4  
                           u10801 2B4E                             u10721 29B4                             u10641 281C  
                           u10561 264A                             u10481 228A                             u11601 1E52  
                           u11521 1C90                             u11441 1AF0                             u11361 1800  
                           u11281 1710                             u12161 49A4                             u12401 0FDC  
                           u12321 0D64                             u12241 0258                             u13121 39BA  
                 __end_of___llmod 727E                             u13201 4CF4                             u13050 367E  
                           u10810 2B6C                             u10730 29D4                             u10650 283C  
                           u10570 273C                             u10490 2312                             u11610 1ED6  
                           u11530 1CA2                             u11450 1B40                             u11370 181A  
                           u11290 1736                             u12090 4914                             u12410 0FFC  
                           u12330 0DF0                             u12250 030A                             u12170 0036  
                           u13130 3A72                             u13210 4D16                             u13051 367A  
                           u10811 2B68                             u10731 29D0                             u10651 2838  
                           u10571 2738                             u10491 230E                             u11611 1ED2  
                           u11531 1C9E                             u11451 1B3C                             u11371 1816  
                           u11291 1732                             u12091 4910                             u12411 0FF8  
                           u12331 0DEC                             u12251 0306                             u12171 0032  
                           u13131 3A6E                             u13211 4D12                             u10820 2B82  
                           u10740 29F2                             u10660 2854                             u10580 274A  
                           u10900 6A3E                             u11700 204E                             u11620 1EF0  
                           u11540 1CF6                             u11460 1B66                             u11380 1828  
                           u12420 1018                             u12340 0E26                             u12260 0326  
                           u12180 00FE                             u12500 617C                             u13140 4A10  
                           u13060 58B0                             u13220 4D2C                             u10821 2B7E  
                           u10741 29EE                             u10661 2850                             u10581 2746  
                           u10901 6A3A                             u11701 204A                             u11621 1EEC  
                           u11541 1CF2                             u11461 1B62                             u11381 1824  
                           u12085 48C0                             u12421 1014                             u12341 0E22  
                           u12261 0322                             u12181 00FA                             u12501 6178  
                           u13141 4A0C                             u13061 58AC                             u13221 4D26  
                           u10830 2BC2                             u10750 2A48                             u10670 2922  
                           u10590 275A                             u10910 6A64                             u11630 1F06  
                           u11550 1DC8                             u11470 1C0A                             u11390 1852  
                           u11710 544C                             u12430 1034                             u12350 0E58  
                           u12270 0656                             u12190 010E                             u12510 618C  
                           u13150 4A3A                             u13070 58F4                             u13230 4D2E  
                           u10831 2BBE                             u10751 2A44                             u10671 291E  
                           u10591 2756                             u10911 6A60                             u11631 1F02  
                           u11551 1DC4                             u11471 1C06                             u11391 184E  
                           u11711 5448                             u12431 1030                             u12351 0E54  
                           u12271 0652                             u12191 010A                             u12511 6188  
                           u13151 4A36                             u13071 58F0                             u12600 5764  
                           u10840 2C3A                             u10760 2A64                             u10680 2954  
                           u10920 6A84                             u11640 1F4E                             u11560 1DE4  
                           u11480 1C48                             u11800 55B6                             u11720 545C  
                           u12440 1050                             u12360 0E8A                             u12280 0672  
                           u12520 61BC                             u13160 4A62                             u13080 5904  
                           u13240 4D40                             u12601 5760                             u10841 2C36  
                           u10761 2A60                             u10681 2950                             u10921 6A80  
                           u11641 1F4A                             u11561 1DE0                             u11481 1C44  
                           u11801 55B2                             u11721 5458                             u12441 104C  
                           u12361 0E86                             u12281 066E                             u12521 61B8  
                           u13161 4A5E                             u13081 5900                             u13241 4D3C  
                           u12610 579E                             u12530 561E                             u10850 2C5E  
                           u10770 2A74                             u10690 2978                             u10930 6AD2  
                           u11650 1FC8                             u11570 1DF4                             u11490 1C5A  
                           u11810 55C6                             u11730 54F0                             u12450 106C  
                           u12370 0EAC                             u12290 068E                             u13170 4A74  
                           u13090 596C                             u13250 4D54                             u12611 579A  
                           u12531 561A                             u10851 2C5A                             u10771 2A70  
                           u10691 2974                             u10931 6ACE                             u11651 1FC2  
                           u11571 1DF0                             u11491 1C56                             u11811 55C2  
                           u12451 1068                             u12371 0EA8                             u12291 068A  
                           u13171 4A70                             u13091 5968                             u13307 4DA4  
                           u13251 4D50                             u12620 57AC                             u12540 562C  
                           u10860 2C9E                             u10780 2A84                             u10940 6AE2  
                           u11660 1FCA                             u11580 1E04                             u11740 5530  
                           u11900 5AC8                             u11820 598C                             u12460 120E  
                           u12380 0FA8                             u12700 44A6                             u13260 4D92  
                           u13180 4CBC                             u12621 57A8                             u12541 5628  
                           u10861 2C9A                             u10781 2A80                             u10941 6ADE  
                           u11581 1E00                             u11741 552C                             u11901 5AC4  
                           u11821 5988                             u12461 120A                             u12381 0FA4  
                           u12701 44A2                             u13317 4DC0                             u13261 4D8E  
                           u13181 4CB8                             u12550 5688                             u10870 2CBC  
                           u10790 2AD2                             u10950 4514                             u11670 1FDE  
                           u11590 1E44                             u11750 554E                             u11910 5AD8  
                           u11830 59D2                             u12390 0FC4                             u12470 74A4  
                           u12630 631C                             u12710 796E                             u13270 4DF0  
                           u13190 4CDA                             u12551 5684                             u10871 2CB8  
                           u10791 2ACE                             u10951 450E                             u11671 1FDA  
                           u11591 1E40                             u11751 554A                             u11735 54DE  
                           u11911 5AD4                             u12391 0FC0                             u12471 74A0  
                           u12631 6318                             u12711 796A                             u13327 791C  
                           u13271 4DEC                             u13191 4CD6                             u12560 56DE  
                           u10880 2CCE                             u10960 4516                             u11680 201E  
                           u11760 5568                             u11920 5B12                             u11840 59E2  
                           u12480 60EA                             u12640 635E                             u12800 5CB6  
                           u13280 4E26                             u12561 56DA                             u10881 2CCA  
                           u11681 201A                             u11761 5564                             u11921 5B0E  
                           u11841 59DE                             u12481 60E6                             u12641 635A  
                           u12801 5CB2                             u13337 5FF8                             u13281 4E22  
                           u12570 5728                             u10890 2D1E                             u10970 4528  
                           u11690 203C                             u11770 5582                             u11850 59F2  
                           u11930 50A4                             u12490 6116                             u12730 735C  
                           u12650 6372                             u12810 626E                             u13290 4E5C  
                           u12571 5724                             u10891 2D1A                             u10971 4524  
                           u11691 2038                             u11771 557E                             u11851 59EE  
                           u11931 50A0                             u12491 6112                             u12731 7358  
                           u12651 636E                             u13347 620C                             u13291 4E58  
                           u12580 5746                             u12900 6928                             u10980 4538  
                           u11780 5592                             u11860 5A10                             u11940 50B4  
                           u12660 641E                             u12740 5B46                             u12820 62C6  
                           u12581 5742                             u12901 6924                             u10981 4534  
                           u11781 558E                             u11861 5A0C                             u11837 59C8  
                           u11941 50B0                             u12725 730E                             u12661 641A  
                           u12741 5B42                             u13357 62EC                             u12590 5756  
                           u10990 4564                             u11790 55A2                             u11870 5A36  
                           u11950 51E0                             u12910 766E                             u12670 429C  
                           u12750 5B8A                             u12830 6308                             u12591 5752  
                           u10991 4560                             u11791 559E                             u11871 5A32  
                           u11951 51DC                             u12911 766A                             u12671 4298  
                           u12751 5B86                             u13367 79AE                             u12831 6304  
                           u12815 6264                             u11880 5A70                             u11960 51FE  
                           u12680 42EC                             u12760 5BE2                             u12840 5FD8  
                           u12920 6466                             u11881 5A6C                   __end_of___lomod 6BD2  
                           u11961 51FA                             u12681 42E8                             u12761 5BDE  
                           u13377 5B98                             u12825 62BC                             u12841 5FD4  
                           u12921 6460                             u11890 5A96                             u11970 5218  
                           u12690 43C4                             u12770 5C34                             u12850 6042  
                           u12930 6490                             u11971 5214                             u12691 43C0  
                           u12771 5C30                             u13387 5BB8                             u12851 603E  
                           u12931 648A                             u11980 5232                             u12780 5C62  
                           u12860 6054                             u12940 64B8                             u11981 522E  
                           u12781 5C5E                             u13397 5C18                             u12861 6050  
                           u12941 64B2                             u11990 5242                             u12790 5C8C  
                           u12870 608E                             u12950 64E0                             u12926 6468  
                           u11991 523E                             u12791 5C88                             u12871 608A  
                           u12951 64DA                             u12880 60B4                             u12960 6508  
                           u12936 6492                             u11897 5A8C                             u12881 60B0  
                           u12961 6502                             u12890 60CC                             u12970 728C  
                           u12946 64BA                             u12891 60C8                             u12971 7288  
                           u12980 72DE                             u12956 64E2                             u12981 72DA  
                           u12990 72F4                             u12966 650A                             u12991 72F0  
                           i2l300 78D4                   ___awdiv@counter 0005                      vfpfcnvrt@fmt 00CC  
                           _TMR1H 0FCF                             _TMR1L 0FCE                             _TRISB 0F93  
                   millis@tmr1Val 0010                             _Heart 0370               ___lmul@multiplicand 0005  
     ConfigurationCheck@startTime 01F4                             _Timer 0100                  __end_of_OSC_Init 79CA  
                 ??_StartPrinting 00FB                             _flags 01B0                             _count 01A0  
             read_prec_or_width@c 000B                             _errno 01AE               read_prec_or_width@n 000C  
                           _fputc 6BD2                             _fputs 76EE                   __end_of_pinMode 71F6  
                           atoa@c 0096                             atoa@d 00BE                             atoa@e 00AD  
                           atoa@f 0092                             atoa@g 00B9                             atoa@h 00AF  
                           atoa@i 00C4                             atoa@l 00B3                             atoa@m 00A4  
                           atoa@n 00C6                             atoa@p 00A8                             labs@a 0001  
                           atoa@t 00AB                             atoa@u 00C0                             atoa@w 00B7  
                           _setup 78D8                 TimerPeriodCheck@i 0090                             pad@fp 0011  
                           _width 01AA                             ctoa@c 000C                             _putch 79CA  
          __end_of_OxygenSPO2Calc 3AB2                             ctoa@l 000E                             ctoa@w 0010  
                           dtoa@d 001D                             dtoa@i 0034                             dtoa@p 002F  
                           dtoa@s 0033                             dtoa@w 0031                        _SpO2_value 01A4  
                  HeartRateCalc@i 007C                             tablat 0FF5                             otoa@d 001C  
                           otoa@i 0031                             otoa@p 002C                             otoa@t 002E  
                           otoa@w 002F                             plusw2 0FDB                    _FormatForPrint 7880  
                           stoa@l 0016     _AbsorptionCoefficentCalc$1713 0098     _AbsorptionCoefficentCalc$1714 009C  
                           stoa@p 0010                             stoa@s 000C                             stoa@w 0012  
                           ttemp5 0080                             ttemp6 0083                             ttemp7 0087  
                           utoa@d 001C                             utoa@i 0030                             utoa@p 002C  
                           utoa@w 002E                             status 0FD8                             wtemp8 0080  
                  ?___fpclassifyf 0001                             xtoa@a 002D                             xtoa@c 0035  
                           xtoa@d 001C                             xtoa@i 0036                             xtoa@p 0030  
                           xtoa@w 0033                             xtoa@x 0024                  ___lodiv@dividend 0001  
                 __initialization 74AE                      __end_of_fabs 76A8                   MinMaxValReset@i 0003  
                    __end_of_atoa 2D66                      __end_of_labs 760E                      __end_of_ctoa 6B02  
                    __end_of_main 4E82                      __end_of_dtoa 4792                      __end_of_otoa 560C  
                    __end_of_stoa 5B1C                      __end_of_utoa 526C                   ?_MinMaxValReset 0001  
                    __end_of_xtoa 49FE                            ??_fabs 007C                            ??_atoa 007C  
                          ??_labs 0005                _ConfigurationCheck 727E                            ??_ctoa 000D  
                          ??_main 00FD                            ??_dtoa 0025                            ??_otoa 0024  
                          ??_stoa 000E                            ??_utoa 0024                            ??_xtoa 0025  
                   __activetblptr 0002                    _WaitReleaseSW1 7952        __end_of_read_prec_or_width 6E1C  
                ___lodiv@quotient 0011                       _GetTimerVal 4276               ?_ConfigurationCheck 0001  
                    _DataPrinting 49FE             __end_of_HeartRateCalc 543C                            ?_fputc 0001  
                ___llmod@dividend 000D                            ?_fputs 000A                  ___awdiv@dividend 0001  
                          ?_setup 0001                            ?_putch 0001            __end_of_FormatForPrint 78AC  
                 ?_OxygenSPO2Calc 0001                            i2l8090 78C6                            i2l8084 78AE  
                          i2l8086 78BC                            i2l8088 78BE                            _OSCCON 0FD3  
                   vfpfcnvrt@done 00DC                            _SPBRG1 0FAF                            _TMR1IE 7CE8  
                          _TMR1IF 7CF0                        _Reset_MCLR 79A6                            _TRISC6 7CA6  
                          _TRISC7 7CA7                            _HR_val 01BC                            _TXREG1 0FAD  
                __end_of___xxtofl 57C0                        _WaitPeriod 630A                            _Period 01B2  
            ??_ConfigurationCheck 01F0                      vfprintf@cfmt 00ED                         ??_Setting 01EC  
                          ___flge 6638                            ___fleq 6F86                            ___lmul 73E2  
                       ??___aodiv 0011                         ??___fladd 005E                         ??___aomod 0011  
                          ___wmul 792C                         ??___fldiv 002C                         ??___awdiv 0005  
                       ??___flneg 0005                         ??___awmod 0005                         ??___flmul 0045  
                       ??___flsub 007C                         ??___fltol 006A                         ??___lldiv 0009  
                       ??___lodiv 0011                         ??___llmod 0015                         ??___lomod 0011  
                          _efgtoa 1282         ?_AbsorptionCoefficentCalc 0001                            _floorf 4E82  
                      _TimerStart 0190                            _memcpy 760E              read_prec_or_width@ap 0008  
                          _micros 736E                            _millis 72F6                            clear_0 74D6  
                          clear_1 74E8                            clear_2 74F4                  ___awdiv@quotient 0007  
                 ___awmod@divisor 0003                            isa$std 0001                            atoa@fp 0090  
                          atoa@ne 00A6                            atoa@pp 00AA                            atoa@ou 0097  
                 ___awmod@counter 0005                            pad@buf 0013            __end_of_WaitReleaseSW1 7970  
                          ctoa@fp 000A                  _Heart_Rate_Count 019C                            dtoa@fp 001B  
                          _strcpy 77A6                            _strlen 7816                            fputc@c 0001  
                   ??_PrintNoData 007F                            fputs@c 000E                            fputs@i 000F  
                          fputs@s 000A                         ??_pinMode 0002                   ___fpclassifyf@e 0009  
                 ___fpclassifyf@u 000B                   ___fpclassifyf@x 0001                      __mediumconst FD4E  
                          otoa@fp 001A                            tblptrh 0FF7                            tblptrl 0FF6  
                          tblptru 0FF8         AbsorptionCoefficentCalc@i 00A0         AbsorptionCoefficentCalc@j 00A2  
                          stoa@cp 0014                   _Measured_Period 0184                            stoa@fp 000A  
                          putch@c 0001                  __end_of_vfprintf 74AE                            utoa@fp 001A  
                    _beta_Average 0148                            xtoa@fp 001A                   ?_FormatForPrint 0001  
                ??_LEDChangeState 0001                        ___flge@ff1 0084                   ??___fpclassifyf 0005  
                      ___flge@ff2 0088                      ___xxtofl@arg 0020                      ___xxtofl@exp 001F  
                    ___xxtofl@val 0016                        ___fleq@ff1 0001                        ___fleq@ff2 0005  
                      __accesstop 0080           __end_of__initialization 74FA                        ___flneg@f1 0001  
                  _ResistorAdjust 61F2                     ___rparam_used 0001                        ___fltol@f1 0066  
                     pinMode@mask 0005                       pinMode@mode 0001                    __pcstackCOMRAM 0001  
                    __pidataBANK3 79BC                         ?_OSC_Init 0001                     __end_of_fputc 6C9C  
                   __end_of_fputs 7732                     __end_of_setup 7902                     __end_of_putch 79CC  
                 OxygenSPO2Calc@i 00AC                   ?_WaitReleaseSW1 0001                      _DetectorTest 5B1C  
                         ??_fputc 0005                           ??_fputs 000E                           ??_setup 007F  
                         ??_putch 0001               __end_of_PrintNoData 798E            __end_of_ResistorAdjust 630A  
                      __pbssBANK1 0100                        __pbssBANK3 0300                        __pbssBANK4 0400  
                     ?_Reset_MCLR 0001                       ?_WaitPeriod 0001                           ?___flge 0084  
                         ?___fleq 0001                           ?___lmul 0001                      ??_UART1_Init 0012  
                    ??_UART1_Send 0003                           ?___wmul 0001                        ??_OSC_Init 0001  
                         ?_efgtoa 0090                           ?_floorf 003D                           ?_memcpy 0001  
                         ?_micros 0001                    ___lmul@product 0009                           ?_millis 0001  
         UART1_SendFormatted@args 00F9                           ?_strcpy 0001                           ?_strlen 0001  
                 _SpO2_Hysteresis 01B6                         ?___xxtofl 0016                  ___lomod@dividend 0001  
              _SPO2_OxyLevelArray 0138                   ?_ResistorAdjust 0001                __end_of_UART1_Init 7560  
              __end_of_UART1_Send 776E              _Timer_HeartRateArray 0168                  ??_MinMaxValReset 0001  
                         __Hparam 0000                           __Lparam 0000                           _Tm_prev 0198  
                         _Setting 5FA4                           ___aodiv 5CB8                           ___fladd 2D66  
                         ___aomod 5E40                           ___fldiv 3EDC                           ___awdiv 6C9C  
                         ___flneg 77DE                           ___awmod 6ED6                           ___flmul 3AB2  
                         ___flsub 76A8                           ___fltol 6532                           ___lldiv 7030  
                         ___lodiv 693A                           ___llmod 71F6                           ___lomod 6B02  
                       ?_vfprintf 00E8                           __pcinit 74AE                           __ramtop 1000  
                         __ptext0 4C56                           __ptext1 798E                           __ptext2 78D8  
                         __ptext3 7508                           __ptext4 7030                           __ptext5 7902  
                         __ptext6 70D4                           __ptext7 7880                           __ptext8 6420  
                         __ptext9 7166                           fabs@num 0080                         _T1CONbits 0FCD  
           read_prec_or_width@fmt 0007                        ??___xxtofl 001A                       _PrintNoData 7970  
                         _pinMode 7166                  ___awmod@dividend 0001                  ??_OxygenSPO2Calc 007C  
                    ?_GetTimerVal 0001                           efgtoa@c 0096                           efgtoa@d 00A7  
                         efgtoa@e 00C0                           efgtoa@f 0092                           efgtoa@g 00BC  
                         efgtoa@h 00B3                           efgtoa@i 00C2                           efgtoa@l 00B7  
                         efgtoa@m 00A5                           efgtoa@n 00C8                           efgtoa@p 00A9  
                         efgtoa@t 00A0                           efgtoa@u 00C4                           efgtoa@w 00B1  
                       _LED_Color 01B3                    __pintcode_body 78AC             __end_of_StartPrinting 792C  
            end_of_initialization 74FA                           floorf@e 004B                           floorf@m 0047  
                         floorf@u 004D                           floorf@x 003D                           exp@term 006E  
                _TimerPeriodCheck 57C0                           memcpy@d 0008                           memcpy@n 0005  
                         memcpy@s 000A                           fputc@fp 0003  __end_of_AbsorptionCoefficentCalc 3680  
                   __Lmediumconst FD4E                           int_func 78AC                           fputs@fp 000C  
              _read_prec_or_width 6D60                   ___lldiv@divisor 0005                   ___lldiv@counter 000D  
               __end_of_vfpfcnvrt 1282                        efgtoa@mode 00AC                        efgtoa@sign 00BB  
                         postdec1 0FE5                           postdec2 0FDD               ?_read_prec_or_width 0007  
                         postinc0 0FEE                           postinc1 0FE6                           postinc2 0FDE  
                vfpfcnvrt@convarg 00DE             main@is_overflow_timer 01FC                        ??_vfprintf 007F  
                         strcpy@d 0005                           strlen@a 0003                           strlen@s 0001  
                  _RangeCountover 01B4                         _PORTBbits 0F81                         _PORTEbits 0F84  
                      _setupTimer 798E                       ___fladd@grs 0065                  ??_FormatForPrint 007F  
               _DataPrinting$1715 01EC                 _DataPrinting$1716 01F0                 _DataPrinting$1717 01F4  
               _DataPrinting$1718 01F8                     ___xxtofl@sign 001E                 __end_of_vsnprintf 61F2  
            ??_read_prec_or_width 0009                       ___fldiv@grs 0037                       ___fldiv@rem 0030  
              _timerOverflowCount 018C                       ___flmul@grs 004A               _UART1_SendFormatted 776E  
                ??_WaitReleaseSW1 007F                    __end_of___flge 673E                    __end_of___fleq 7030  
                  __end_of___lmul 744C                       vfpfcnvrt@ap 00CD                       vfpfcnvrt@cp 00E6  
                     vfpfcnvrt@fp 00CA                    __end_of___wmul 7952                    __end_of_efgtoa 2096  
                  __end_of_floorf 5094                    __end_of_memcpy 765E                        floorf@F521 0170  
                  __end_of_micros 73E2               UART1_Init@baud_rate 000E                    __end_of_millis 736E  
            ?_UART1_SendFormatted 01D0                    __end_of_strcpy 77DE                    __end_of_strlen 784C  
             start_initialization 74AE                   ___lodiv@divisor 0009                   ___lodiv@counter 0019  
                       _Last_beta 0400                       __end_of_abs 7880                       __end_of_pad 6ED6  
                     __end_of_exp 693A                       __end_of_isr 78D8                  micros@timerValue 000B  
                    ??_Reset_MCLR 0001             __end_of___fpclassifyf 683C                   ___llmod@divisor 0011  
                 ___llmod@counter 0015      __end_of_DeviceInitialization 6532                      ??_WaitPeriod 007C  
        _AbsorptionCoefficentCalc 3226                       vfprintf@fmt 00EA                          ??___flge 008C  
                        ??___fleq 0009                          ??___lmul 0009                          ??___wmul 0005  
             _OxygenSPO2Calc$1720 0094               _OxygenSPO2Calc$1721 0098               _OxygenSPO2Calc$1722 009C  
             _OxygenSPO2Calc$1723 00A0               _OxygenSPO2Calc$1724 00A4               _OxygenSPO2Calc$1725 00A8  
             _OxygenSPO2Calc$1719 0090                          ??_efgtoa 007C                       __pdataBANK3 0370  
                        ??_floorf 0041                          ??_memcpy 0007                          ??_micros 0005  
                        ??_millis 0005                         _StartTime 0180                       ?_setupTimer 0001  
           ??_UART1_SendFormatted 007F                          ??_strcpy 0005                          ??_strlen 0003  
                     _beta_MinMax 0128                         ___fladd@a 005A                         ___fladd@b 0056  
                    vsnprintf@cnt 01C2                      vsnprintf@fmt 00F3                         ___fldiv@a 0028  
                       ___fldiv@b 0024                __end_of_Reset_MCLR 79BC                         ___flmul@a 0041  
                       ___flmul@b 003D                         ___flsub@a 0078                         ___flsub@b 0074  
                  UART1_Send@data 0001                  ??_ResistorAdjust 00FB                     __pcstackBANK0 0080  
                   __pcstackBANK1 01C0                     __pcstackBANK2 0200                        pinMode@pin 0004  
                ___aodiv@dividend 0001                __end_of_WaitPeriod 6420                     _HeartRateCalc 526C  
                       _atoa$1280 009B                         _atoa$1290 00A1                         _atoa$1288 009D  
                       _atoa$1289 009F                       _efgtoa$1340 0099                       _efgtoa$1341 009B  
                     _efgtoa$1333 0097                       _efgtoa$1342 009D                         _dtoa$1303 002D  
                        ?_Setting 0001                         __pintcode 0008                     __pmediumconst FD4E  
                        ?___aodiv 0001                          ?___fladd 0056                          ?___aomod 0001  
                        ?___fldiv 0024                          ?___awdiv 0001                  ___aodiv@quotient 0013  
                        ?___flneg 0001                          ?___awmod 0001                          ?___flmul 003D  
                        ?___flsub 0074                          ?___fltol 0066                          ?___lldiv 0001  
                        ?___lodiv 0001                          ?___llmod 000D                          ?___lomod 0001  
        __end_of_TimerPeriodCheck 5972                      _microseconds 0188                   ___lomod@divisor 0009  
                 ___lomod@counter 0011                      ?_PrintNoData 0001                          ?_pinMode 0001  
                   ?_DataPrinting 0001                    ?_HeartRateCalc 0001                    ___wmul@product 0005  
                   _Timer_val_max 0178                     _Timer_val_min 017C                     _HR_Hysteresis 01B7  
                        i2u948_40 78BC                          i2u948_41 78B8                         atoa@esign 00A3  
                        _OSC_Init 79C4                         _vfpfcnvrt 0012               LEDChangeState@State 0003  
                       _xtoa$1375 002E                 ___wmul@multiplier 0001                    _PeriodEndCount 01B5  
            _DeviceInitialization 6420                    ??_DataPrinting 007F                        vfpfcnvrt@c 00DD  
               ___lmul@multiplier 0001                         copy_data0 74C2                         _vsnprintf 60D6  
                        _PeakTime 0158                         exp@result 006A                      GetTimerVal@i 007C  
                        __Hrparam 0000                         memcpy@tmp 0007                        vfprintf@ap 00EC  
                        __Lrparam 0000                        vfprintf@fp 00E8                       vsnprintf@ap 00F5  
                      ?_vfpfcnvrt 00CA                   ___aodiv@divisor 0009                   ___aodiv@counter 0011  
              ___fpclassifyf@F465 0174                          ___xxtofl 560C             ?_DeviceInitialization 0001  
                   ?_DetectorTest 0001                          _detTimer 0300                          _main$186 01FD  
                 ??_HeartRateCalc 0090                          __ptext10 727E                          __ptext11 5FA4  
                        __ptext20 71F6                          __ptext12 61F2                          __ptext21 7560  
                        __ptext13 73E2                          __ptext30 776E                          __ptext22 57C0  
                        __ptext14 79A6                          __ptext31 60D6                          __ptext23 7970  
                        __ptext15 5B1C                          __ptext40 792C                          __ptext32 744C  
                        __ptext24 3680                          __ptext16 7952                          __ptext41 543C  
                        __ptext33 0012                          __ptext25 79C4                          __ptext17 4276  
                        __ptext50 77A6                          __ptext42 1282                          __ptext34 4792  
                        __ptext26 526C                          __ptext18 630A                          __ptext51 6E1C  
                        __ptext43 75B8                          __ptext35 5094                          __ptext27 765E  
                        __ptext19 736E                          __ptext60 6F86                          __ptext52 7816  
                        __ptext44 4504                          __ptext36 6B02                          __ptext28 49FE  
                        __ptext61 6ED6                          __ptext53 76EE                          __ptext45 784C  
                        __ptext37 693A                          __ptext29 72F6                          __ptext70 2D66  
                        __ptext62 6C9C                          __ptext54 6BD2                          __ptext46 5E40  
                        __ptext38 5972                          __ptext71 77DE                          __ptext63 7732  
                        __ptext55 79CA                          __ptext47 5CB8                          __ptext39 6D60  
                        __ptext72 6638                          __ptext64 3226                          __ptext56 760E  
                        __ptext48 6A2A                          __ptext65 683C                          __ptext57 4E82  
                        __ptext49 2096                          __ptext66 560C                          __ptext58 673E  
                        __ptext67 3AB2                          __ptext59 6532                          __ptext68 3EDC  
                        __ptext69 76A8        ??_AbsorptionCoefficentCalc 0090                        strcpy@dest 0001  
                      ?_vsnprintf 00EF        __end_of_ConfigurationCheck 72F6                          efgtoa@fp 0090  
                  _LEDChangeState 7560                          efgtoa@ne 00A3                          efgtoa@pp 00A2  
                        efgtoa@ou 00AD                          isa$xinst 0000                          atoa@sign 00BD  
                        int$flags 007F                          _vfprintf 744C                      ??_setupTimer 0001  
                ___aomod@dividend 0001                    ??_DetectorTest 00FB                          memcpy@d1 0001  
                        memcpy@s1 0003                     xtoa@d_nonzero 0032                        vsnprintf@f 01C4  
                      vsnprintf@n 00F1                        vsnprintf@s 00EF                          intlevel2 0000  
                   _StartPrinting 7902                  ___lldiv@dividend 0001                         strcpy@src 0003  
                      _RCSTA1bits 0FAB            __end_of_LEDChangeState 75B8                __end_of_setupTimer 79A6  
          _Absorption_Coefficents 0150                       efgtoa@esign 009F              __end_of_DataPrinting 4C56  
                     efgtoa@nmode 00AB       __end_of_UART1_SendFormatted 77A6                        _UART1_Init 7508  
                      _UART1_Send 7732                   ___aomod@divisor 0009                       ??_vfpfcnvrt 00CE  
                 ___aomod@counter 0011                 ?_TimerPeriodCheck 0001            ??_DeviceInitialization 007F  
                  _vsnprintf$1184 01C0                ??_TimerPeriodCheck 007C                  ___lldiv@quotient 0009  
                   ??_GetTimerVal 0090                     ___fladd@signs 0062                    ?_StartPrinting 0001  
                    ___aodiv@sign 0012                       ??_vsnprintf 00F6                      ___fladd@aexp 0063  
                    ___fladd@bexp 0064         UART1_SendFormatted@buffer 0200         UART1_SendFormatted@format 01D0  
                 ?_LEDChangeState 0001                      ___aomod@sign 0012                millis@milliseconds 000C  
